{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/autocompletesearch/AutoCompleteSearch.js\";\nimport _ from 'lodash';\nimport React, { useState } from 'react';\nimport { Search, Grid } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\n\nconst source = _.times(5, () => ({\n  title: 'yahoo',\n  description: 'cool',\n  price: '$20'\n}));\n\nconst AutoCompleteSearch = () => {\n  const initialState = {\n    isLoading: false,\n    results: [],\n    value: ''\n  };\n\n  const _useState = useState(initialState),\n        _useState2 = _slicedToArray(_useState, 2),\n        searchFormData = _useState2[0],\n        setSearchFormData = _useState2[1];\n\n  const handleResultSelect = (e, {\n    result\n  }) => setSearchFormData(_objectSpread({}, searchFormData, {\n    value: result.title\n  }));\n\n  const handleSearchChange = (e, {\n    value\n  }) => {\n    setSearchFormData(_objectSpread({}, searchFormData, {\n      isLoading: true,\n      value: value\n    }));\n    setTimeout(() => {\n      if (searchFormData.value === '') return setSearchFormData(initialState);\n      const re = new RegExp(_.escapeRegExp(searchFormData.value), 'i');\n\n      const isMatch = result => re.test(result.title);\n\n      setSearchFormData({\n        isLoading: false,\n        results: _.filter(source, isMatch)\n      });\n    }, 300);\n  };\n\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Search, {\n    fluid: true,\n    loading: searchFormData.isLoading,\n    onResultSelect: handleResultSelect,\n    onSearchChange: _.debounce(handleSearchChange, 500, {\n      leading: true\n    }),\n    results: searchFormData.results,\n    value: searchFormData.value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })));\n};\n/* const mapStateToProps = function(state) {\n  return {\n    isLoading: state.autosearch.isLoading,\n    results: state.autosearch.results,\n    value: state.autosearch.value\n  }\n} */\n//export default connect(mapStateToProps, { })(AutoCompleteSearch);\n\n\nexport default AutoCompleteSearch;","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/autocompletesearch/AutoCompleteSearch.js"],"names":["_","React","useState","Search","Grid","connect","source","times","title","description","price","AutoCompleteSearch","initialState","isLoading","results","value","searchFormData","setSearchFormData","handleResultSelect","e","result","handleSearchChange","setTimeout","re","RegExp","escapeRegExp","isMatch","test","filter","debounce","leading"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,MAAM,GAAGN,CAAC,CAACO,KAAF,CAAQ,CAAR,EAAW,OAAO;AAC/BC,EAAAA,KAAK,EAAE,OADwB;AAE/BC,EAAAA,WAAW,EAAE,MAFkB;AAG/BC,EAAAA,KAAK,EAAE;AAHwB,CAAP,CAAX,CAAf;;AAMA,MAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAMC,YAAY,GAAG;AACnBC,IAAAA,SAAS,EAAE,KADQ;AAEnBC,IAAAA,OAAO,EAAE,EAFU;AAGnBC,IAAAA,KAAK,EAAE;AAHY,GAArB;;AAD+B,oBAOab,QAAQ,CAACU,YAAD,CAPrB;AAAA;AAAA,QAOxBI,cAPwB;AAAA,QAORC,iBAPQ;;AAS/B,QAAMC,kBAAkB,GAAG,CAACC,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,KACzBH,iBAAiB,mBAAMD,cAAN;AAAsBD,IAAAA,KAAK,EAAEK,MAAM,CAACZ;AAApC,KADnB;;AAGA,QAAMa,kBAAkB,GAAG,CAACF,CAAD,EAAI;AAAEJ,IAAAA;AAAF,GAAJ,KAAkB;AAC3CE,IAAAA,iBAAiB,mBAAMD,cAAN;AAAsBH,MAAAA,SAAS,EAAE,IAAjC;AAAuCE,MAAAA,KAAK,EAAEA;AAA9C,OAAjB;AAEAO,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIN,cAAc,CAACD,KAAf,KAAyB,EAA7B,EAAiC,OAAOE,iBAAiB,CAACL,YAAD,CAAxB;AAEjC,YAAMW,EAAE,GAAG,IAAIC,MAAJ,CAAWxB,CAAC,CAACyB,YAAF,CAAeT,cAAc,CAACD,KAA9B,CAAX,EAAiD,GAAjD,CAAX;;AACA,YAAMW,OAAO,GAAGN,MAAM,IAAIG,EAAE,CAACI,IAAH,CAAQP,MAAM,CAACZ,KAAf,CAA1B;;AAEAS,MAAAA,iBAAiB,CAAC;AAChBJ,QAAAA,SAAS,EAAE,KADK;AAEhBC,QAAAA,OAAO,EAAEd,CAAC,CAAC4B,MAAF,CAAStB,MAAT,EAAiBoB,OAAjB;AAFO,OAAD,CAAjB;AAID,KAVS,EAUP,GAVO,CAAV;AAWD,GAdD;;AAgBA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,OAAO,EAAEV,cAAc,CAACH,SAF1B;AAGE,IAAA,cAAc,EAAEK,kBAHlB;AAIE,IAAA,cAAc,EAAElB,CAAC,CAAC6B,QAAF,CAAWR,kBAAX,EAA+B,GAA/B,EAAoC;AAClDS,MAAAA,OAAO,EAAE;AADyC,KAApC,CAJlB;AAOE,IAAA,OAAO,EAAEd,cAAc,CAACF,OAP1B;AAQE,IAAA,KAAK,EAAEE,cAAc,CAACD,KARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAgBD,CA5CD;AA8CA;;;;;;;AAQA;;;AAEA,eAAeJ,kBAAf","sourcesContent":["import _ from 'lodash';\nimport React, { useState } from 'react';\nimport { Search, Grid } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nconst source = _.times(5, () => ({\n  title: 'yahoo',\n  description: 'cool',\n  price: '$20'\n}));\n\nconst AutoCompleteSearch = () => {\n  const initialState = {\n    isLoading: false,\n    results: [],\n    value: ''\n  };\n\n  const [searchFormData, setSearchFormData] = useState(initialState);\n\n  const handleResultSelect = (e, { result }) =>\n    setSearchFormData({ ...searchFormData, value: result.title });\n\n  const handleSearchChange = (e, { value }) => {\n    setSearchFormData({ ...searchFormData, isLoading: true, value: value });\n\n    setTimeout(() => {\n      if (searchFormData.value === '') return setSearchFormData(initialState);\n\n      const re = new RegExp(_.escapeRegExp(searchFormData.value), 'i');\n      const isMatch = result => re.test(result.title);\n\n      setSearchFormData({\n        isLoading: false,\n        results: _.filter(source, isMatch)\n      });\n    }, 300);\n  };\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <Search\n          fluid\n          loading={searchFormData.isLoading}\n          onResultSelect={handleResultSelect}\n          onSearchChange={_.debounce(handleSearchChange, 500, {\n            leading: true\n          })}\n          results={searchFormData.results}\n          value={searchFormData.value}\n        />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\n/* const mapStateToProps = function(state) {\n  return {\n    isLoading: state.autosearch.isLoading,\n    results: state.autosearch.results,\n    value: state.autosearch.value\n  }\n} */\n\n//export default connect(mapStateToProps, { })(AutoCompleteSearch);\n\nexport default AutoCompleteSearch;\n"]},"metadata":{},"sourceType":"module"}