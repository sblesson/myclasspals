{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/profile/CreateProfile.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\nimport { Tab } from 'semantic-ui-react';\nconst panes = [{\n  menuItem: 'Tab 1',\n  render: () => React.createElement(Tab.Pane, {\n    attached: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Tab 1 Content\")\n}, {\n  menuItem: 'Tab 2',\n  render: () => React.createElement(Tab.Pane, {\n    attached: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Tab 2 Content\")\n}, {\n  menuItem: 'Tab 3',\n  render: () => React.createElement(Tab.Pane, {\n    attached: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Tab 3 Content\")\n}];\n\nconst CreateProfile = ({\n  createProfile,\n  getCurrentProfile,\n  profile: {\n    profile,\n    loading\n  },\n  history\n}) => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n\n  useEffect(() => {\n    getCurrentProfile(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentProfile]);\n  return loading && profile === null ? React.createElement(Redirect, {\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Create Your Profile\"), React.createElement(Tab, {\n    menu: {\n      secondary: true,\n      pointing: true\n    },\n    panes: panes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"* = required field\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Save\")));\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile\n})(withRouter(CreateProfile));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/profile/CreateProfile.js"],"names":["React","useEffect","useState","Fragment","Link","withRouter","Redirect","PropTypes","connect","createProfile","getCurrentProfile","Tab","panes","menuItem","render","CreateProfile","profile","loading","history","formData","setFormData","onChange","e","target","name","value","onSubmit","preventDefault","secondary","pointing","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nimport { Tab } from 'semantic-ui-react';\n\nconst panes = [\n  {\n    menuItem: 'Tab 1',\n    render: () => <Tab.Pane attached={false}>Tab 1 Content</Tab.Pane>\n  },\n  {\n    menuItem: 'Tab 2',\n    render: () => <Tab.Pane attached={false}>Tab 2 Content</Tab.Pane>\n  },\n  {\n    menuItem: 'Tab 3',\n    render: () => <Tab.Pane attached={false}>Tab 3 Content</Tab.Pane>\n  }\n];\n\nconst CreateProfile = ({\n  createProfile,\n  getCurrentProfile,\n  profile: { profile, loading },\n  history\n}) => {\n  const [formData, setFormData] = useState({});\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n  useEffect(() => {\n    getCurrentProfile();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentProfile]);\n  return loading && profile === null ? (\n    <Redirect to='/dashboard' />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Save\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(CreateProfile)\n);\n"]},"metadata":{},"sourceType":"module"}