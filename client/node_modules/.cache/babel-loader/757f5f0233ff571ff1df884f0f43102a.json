{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/profile/CreateProfile.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { Button } from 'reactstrap';\nimport { addSchool, createProfile, getCurrentProfile } from '../../actions/profile';\nimport { Tab, Input, Grid, Select, Radio, Form } from 'semantic-ui-react';\nimport ContactForm from './form/ContactForm';\nimport AddChildForm from './form/AddChildForm';\nimport WelcomeForm from './form/WelcomeForm';\nimport './CreateProfile.scss';\n\nconst CreateProfile = ({\n  createProfile,\n  getCurrentProfile,\n  profile: {\n    profile,\n    loading\n  },\n  history,\n  addSchool,\n  isLoading\n}) => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const profileData = {\n    name: 'Leanne Graham',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      state: 'California',\n      zipcode: '92998-3874'\n    },\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets'\n    }\n  };\n  /*   const userData = {\n    id: 1,\n    name: '',\n    username: '',\n    email: '',\n    address: {\n      street: '',\n      suite: '',\n      city: '',\n      state: '',\n      zipcode: '',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496'\n      }\n    },\n    phone: '',\n    website: '',\n    company: {\n      name: '',\n      catchPhrase: '',\n      bs: ''\n    }\n  }; */\n\n  const panes = [{\n    menuItem: 'Your Info',\n    render: () => React.createElement(Tab.Pane, {\n      attached: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(ContactForm, {\n      user: formData.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))\n  }, {\n    menuItem: \"Child's Info\",\n    render: () => React.createElement(Tab.Pane, {\n      attached: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(AddChildForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))\n  }, {\n    menuItem: 'Summary',\n    render: () => React.createElement(Tab.Pane, {\n      attached: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(WelcomeForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))\n  }];\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n\n  useEffect(() => {\n    getCurrentProfile(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentProfile]);\n  return loading && profile === null ? React.createElement(Redirect, {\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"create-profile-component-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"create-profile-component-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    class: \"create-profile-component-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"Create Your Profile\")), React.createElement(\"div\", {\n    class: \"create-profile-component-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Don\\\\'t worry you change change this info later \"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"* = required field\"), React.createElement(Tab, {\n    menu: {\n      secondary: true,\n      pointing: true\n    },\n    panes: panes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }))));\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  addSchool: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  isLoading: state.school.isLoading\n});\n\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile,\n  addSchool\n})(withRouter(CreateProfile));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/profile/CreateProfile.js"],"names":["React","useEffect","useState","Fragment","Link","withRouter","Redirect","PropTypes","connect","_","Button","addSchool","createProfile","getCurrentProfile","Tab","Input","Grid","Select","Radio","Form","ContactForm","AddChildForm","WelcomeForm","CreateProfile","profile","loading","history","isLoading","formData","setFormData","profileData","name","email","address","street","suite","city","state","zipcode","website","company","catchPhrase","bs","panes","menuItem","render","user","onChange","e","target","value","onSubmit","preventDefault","secondary","pointing","propTypes","func","isRequired","object","mapStateToProps","school"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport _ from 'lodash';\n\nimport { Button } from 'reactstrap';\nimport {\n  addSchool,\n  createProfile,\n  getCurrentProfile\n} from '../../actions/profile';\n\nimport { Tab, Input, Grid, Select, Radio, Form } from 'semantic-ui-react';\n\nimport ContactForm from './form/ContactForm';\nimport AddChildForm from './form/AddChildForm';\nimport WelcomeForm from './form/WelcomeForm';\n\nimport './CreateProfile.scss';\n\nconst CreateProfile = ({\n  createProfile,\n  getCurrentProfile,\n  profile: { profile, loading },\n  history,\n  addSchool,\n  isLoading\n}) => {\n  const [formData, setFormData] = useState({});\n  const profileData = {\n    name: 'Leanne Graham',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      state: 'California',\n      zipcode: '92998-3874'\n    },\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets'\n    }\n  };\n  /*   const userData = {\n    id: 1,\n    name: '',\n    username: '',\n    email: '',\n    address: {\n      street: '',\n      suite: '',\n      city: '',\n      state: '',\n      zipcode: '',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496'\n      }\n    },\n    phone: '',\n    website: '',\n    company: {\n      name: '',\n      catchPhrase: '',\n      bs: ''\n    }\n  }; */\n  const panes = [\n    {\n      menuItem: 'Your Info',\n      render: () => (\n        <Tab.Pane attached={false}>\n          <ContactForm user={formData.user}/>\n        </Tab.Pane>\n      )\n    },\n    {\n      menuItem: \"Child's Info\",\n      render: () => (\n        <Tab.Pane attached={false}>\n          <AddChildForm />\n        </Tab.Pane>\n      )\n    },\n    {\n      menuItem: 'Summary',\n      render: () => (\n        <Tab.Pane attached={false}>\n          <WelcomeForm />\n        </Tab.Pane>\n      )\n    }\n  ];\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n  useEffect(() => {\n    getCurrentProfile();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentProfile]);\n  return loading && profile === null ? (\n    <Redirect to='/dashboard' />\n  ) : (\n    <Fragment>\n      <div class='create-profile-component-container'>\n        <div class='create-profile-component-header'>\n          <h4 class='create-profile-component-title'>Create Your Profile</h4>\n        </div>\n        <div class='create-profile-component-content'>\n          <small>Don\\'t worry you change change this info later </small>\n          <br />\n          <small>* = required field</small>\n\n          <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  addSchool: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  isLoading: state.school.isLoading\n});\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile,\n  addSchool\n})(withRouter(CreateProfile));\n"]},"metadata":{},"sourceType":"module"}