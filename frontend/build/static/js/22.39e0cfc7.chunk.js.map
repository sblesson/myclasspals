{"version":3,"sources":["components/invite/DisplayCreateInviteForm.js","components/invite/CreateInviteForm.js","components/invite/Invite.js"],"names":["handleSubmit","values","submitCount","className","labelCol","xs","span","sm","wrapperCol","layout","initialValues","size","onSubmit","component","AntTextArea","name","type","label","placeholder","defaultValue","inviteeEmail","validate","isRequired","hasFeedback","message","DisplayCreateInviteForm","propTypes","addPost","PropTypes","func","connect","setAlert","withRouter","useState","setIsResultVisible","style","marginBottom","formProps","actions","templateParams","useremail","from_name","to_name","subject","message_html","window","emailjs","send","then","result","console","log","text","error","resetForm","render","Invite","Content","Layout","width","margin","padding"],"mappings":"yNAOe,cAA4C,IAAzCA,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAWtC,OACE,kBAAC,IAAD,eACEC,UAAU,kBAZS,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAId,CAIEG,OAAO,WACPC,cAAe,CACbC,KAAM,SAERC,SAAUZ,IAEV,kBAAC,IAAD,CACEa,UAAWC,IACXC,KAAK,eACLC,KAAK,OACLC,MAAM,0CACNC,YAAY,2HACZC,aAAclB,EAAOmB,aACrBC,SAAUC,IACVpB,YAAaA,EACbqB,aAAW,IAEb,kBAAC,IAAD,CACEV,UAAWC,IACXC,KAAK,UACLC,KAAK,OACLC,MAAM,UACNC,YAAY,sJACZC,aAAclB,EAAOuB,QAErBtB,YAAaA,EACbqB,aAAW,IAEb,yBAAKpB,UAAU,oBACb,4BAAQA,UAAU,sCAAsCa,KAAK,UAA7D,aCWRS,EAAwBC,UAAY,CAClCC,QAASC,IAAUC,KAAKP,YAGXQ,kBAAQ,KAAM,CAC3BC,cADaD,CAEZE,aA5DsB,SAAC,GAAkB,IAAhBD,EAAe,EAAfA,SAAe,EACKE,oBAAS,GADd,mBACjBC,GADiB,WAwCzC,OACE,kBAAC,WAAD,KACE,wBAAIC,MAAO,CAAEC,aAAc,SAA3B,oEAGA,kBAAC,IAAD,CACE1B,cA5CgB,CACpBc,QACE,sJACFJ,aAAc,IA0CVR,SAxCe,SAACyB,EAAWC,GAAa,IACtCd,EAA0Ba,EAA1Bb,QAASJ,EAAiBiB,EAAjBjB,aAEXmB,EAAiB,CACnBC,UAAWpB,EACXqB,UAAW,cACXC,QAAStB,EACTuB,QAAS,4BACTC,aAAcpB,GAEhBqB,OAAOC,QACJC,KACC,kBACA,kBACAR,EACA,8BAEDS,MACC,SAACC,GACCC,QAAQC,IAAIF,EAAOG,MACnBrB,EAAS,eAAgB,cAE3B,SAACsB,GACCtB,EACE,wEACA,YAIRO,EAAQgB,YACRpB,GAAmB,IAWfqB,OAAQ9B,SCxCD+B,UAbA,WAAO,IACZC,EAAYC,IAAZD,QAER,OACE,kBAACA,EAAD,CACEtD,UAAU,UACVgC,MAAO,CAAEwB,MAAO,MAAOC,OAAQ,YAAaC,QAAS,SAErD,kBAAC,EAAD","file":"static/js/22.39e0cfc7.chunk.js","sourcesContent":["import React from 'react';\nimport { Field } from 'formik';\nimport { Form } from 'formik-antd';\nimport { AntTextArea } from '../common/createformfields/CreateFormFields';\n\nimport { isRequired } from '../common/validatefields/ValidateFields';\n\nexport default ({ handleSubmit, values, submitCount }) => {\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n    },\n  };\n  return (\n    <Form\n      className='form-container'\n      /*  className='form-wrapper' */\n      {...formItemLayout}\n      layout='vertical'\n      initialValues={{\n        size: 'small',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <Field\n        component={AntTextArea}\n        name='inviteeEmail'\n        type='text'\n        label='Enter email addresses separated by coma'\n        placeholder='Send email invitation to non members to join myclasspals group by typing or pasting email addresses, separated by commas'\n        defaultValue={values.inviteeEmail}\n        validate={isRequired}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <Field\n        component={AntTextArea}\n        name='message'\n        type='text'\n        label='Message'\n        placeholder='We think you will really enjoy myclasspals, where school families unite. Join us to create more meaningful connection and improve school experience'\n        defaultValue={values.message}\n        //validate={isRequired}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <div className='submit-container'>\n        <button className='ant-btn ant-btn-primary btn-primary' type='submit'>\n          Submit\n        </button>\n      </div>\n    </Form>\n  );\n};\n","import React, { Fragment, useState } from 'react';\nimport { Formik } from 'formik';\n\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport DisplayCreateInviteForm from './DisplayCreateInviteForm';\n\nconst CreateInviteForm = ({ setAlert }) => {\n  const [isResultVisible, setIsResultVisible] = useState(false);\n  const initialValues = {\n    message:\n      'We think you will really enjoy myclasspals, where school families unite. Join us to create more meaningful connection and improve school experience',\n    inviteeEmail: '',\n  };\n  const handleSubmit = (formProps, actions) => {\n    let { message, inviteeEmail } = formProps;\n\n    let templateParams = {\n      useremail: inviteeEmail,\n      from_name: 'myclasspals',\n      to_name: inviteeEmail,\n      subject: 'You have a new invitation',\n      message_html: message,\n    };\n    window.emailjs\n      .send(\n        'default_service',\n        'template_invite',\n        templateParams,\n        'user_lol6VvJrSdlG57bHeWx0I'\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n          setAlert('Message send', 'success');\n        },\n        (error) => {\n          setAlert(\n            'Error occured while sending email invitation. Please try again later!',\n            'error'\n          );\n        }\n      );\n    actions.resetForm();\n    setIsResultVisible(true);\n  };\n\n  return (\n    <Fragment>\n      <h2 style={{ marginBottom: '1rem' }}>\n        Invite your friends, acquaintance and family to join myclasspals\n      </h2>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        render={DisplayCreateInviteForm}\n      />\n    </Fragment>\n  );\n};\n\nDisplayCreateInviteForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, {\n  setAlert,\n})(withRouter(CreateInviteForm));\n","import React from 'react';\nimport { Layout } from 'antd';\n\nimport CreateInviteForm from './CreateInviteForm';\nconst Invite = () => {\n  const { Content } = Layout;\n\n  return (\n    <Content\n      className='wrapper'\n      style={{ width: '80%', margin: '2rem auto', padding: '2rem' }}\n    >\n      <CreateInviteForm />\n    </Content>\n  );\n};\n\nexport default Invite;\n"],"sourceRoot":""}