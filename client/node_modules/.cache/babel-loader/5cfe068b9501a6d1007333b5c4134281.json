{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/modal/post/PostModal.js\";\nimport React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport Collapse from '@material-ui/core/Collapse';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../../actions/post';\nimport './PostModal.scss';\n\nconst PostModal = ({\n  addPost,\n  history\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const _useState3 = useState({\n    topics: '[]',\n    group_id: '',\n    subject: '',\n    message: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formData = _useState4[0],\n        setFormData = _useState4[1];\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        collapsed = _React$useState2[0],\n        setCollapsed = _React$useState2[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        modal = _useState6[0],\n        setModal = _useState6[1];\n\n  const toggle = () => setModal(!modal);\n\n  const toggleCollapse = () => {\n    setCollapsed(prevValue => !prevValue);\n  };\n\n  const onClick = e => {\n    if (Array.isArray(items)) {\n      toggleCollapse();\n    }\n\n    if (onClickProp) {\n      onClickProp(e, item);\n    }\n  };\n\n  const topics = [{\n    category_id: '1',\n    title: 'General',\n    url: '/general'\n  }, {\n    category_id: '2',\n    title: 'Recommendations',\n    url: '/recommendations'\n  }, {\n    category_id: '3',\n    title: 'Carpool',\n    url: '/carpool'\n  }, {\n    category_id: '4',\n    title: 'Lost & Found',\n    url: '/lost_and_found'\n  }, {\n    category_id: '5',\n    title: 'Volunteer',\n    url: '/volunteer'\n  }, {\n    category_id: '6',\n    title: 'Help Needed',\n    url: '/help'\n  }, {\n    category_id: '7',\n    title: 'Homework',\n    url: '/homework'\n  }];\n  const all_groups = [{\n    id: 'userId',\n    group_id: 'groupID room 34',\n    name: 'room 34',\n    type: 'inner'\n  }, {\n    id: 'userId',\n    group_id: 'groupID grade 6',\n    name: 'grade 6 + room 34',\n    type: 'outer'\n  }, {\n    id: 'userId',\n    group_id: 'groupID sunshine',\n    name: 'sunshine',\n    type: 'inner'\n  }, {\n    id: 'userId',\n    group_id: 'groupID prek',\n    name: 'pre-k + sunshine',\n    type: 'outer'\n  }];\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"new-post-form\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-post-head p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"What do you want to discuss?\")), React.createElement(\"div\", {\n    className: \"post-create-textarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"avatar-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user margin-right-5 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"new-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Post your inner voice \")))), React.createElement(Modal, {\n    isOpen: modal,\n    fade: false,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \" Create Post\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    tag: \"fieldset\",\n    className: \"post-form post-form-radio-options-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Choose Category\"), React.createElement(Collapse, {\n    in: !collapsed,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, Array.isArray(topics) ? React.createElement(List, {\n    disablePadding: true,\n    dense: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, items.map((subItem, index) => React.createElement(React.Fragment, {\n    key: \"\".concat(subItem.name).concat(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, subItem === 'divider' ? React.createElement(Divider, {\n    style: {\n      margin: '6px 0'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }) : React.createElement(SideNavItem, {\n    depth: depth + 1,\n    depthStep: depthStep,\n    item: subItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })))) : null), topics.map(function (topic, index) {\n    return React.createElement(FormGroup, {\n      check: true,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"topics\",\n      value: topic,\n      category: topic.category_id,\n      onChange: e => onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), ' ', topic.title));\n  })), React.createElement(FormGroup, {\n    tag: \"fieldset\",\n    className: \"post-form post-form-radio-options-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Choose Group\"), all_groups.map(function (group, index) {\n    return React.createElement(FormGroup, {\n      check: true,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"group_id\",\n      value: group.group_id,\n      onChange: e => onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), ' ', group.name));\n  })), React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"post-form-text-input\",\n    type: \"text\",\n    name: \"subject\",\n    placeholder: \"Subject\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    className: \"post-form-text-input post-form-textarea\",\n    name: \"message\",\n    cols: \"30\",\n    rows: \"5\",\n    placeholder: \"Enter your message ...\",\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  })))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      addPost(formData, history);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Post\"))));\n};\n\nPostModal.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = state => ({\n  hideModal: state.hideModal\n});\n\nexport default connect(null, {\n  addPost,\n  mapDispatchToProps\n})(withRouter(PostModal));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/modal/post/PostModal.js"],"names":["React","useState","Link","withRouter","Col","Row","Button","Form","FormGroup","Label","Input","FormText","Modal","ModalHeader","ModalBody","ModalFooter","ExpandMoreIcon","ExpandLessIcon","Collapse","PropTypes","connect","addPost","PostModal","history","text","setText","topics","group_id","subject","message","formData","setFormData","collapsed","setCollapsed","modal","setModal","toggle","toggleCollapse","prevValue","onClick","e","Array","isArray","items","onClickProp","item","category_id","title","url","all_groups","id","name","type","onChange","target","value","map","subItem","index","margin","depth","depthStep","topic","group","preventDefault","propTypes","func","isRequired","mapDispatchToProps","state","hideModal"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,SALF,EAMEC,KANF,EAOEC,KAPF,EAQEC,QARF,EASEC,KATF,EAUEC,WAVF,EAWEC,SAXF,EAYEC,WAZF,QAaO,YAbP;AAcA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAO,kBAAP;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAED,EAAAA,OAAF;AAAWE,EAAAA;AAAX,CAAD,KAA0B;AAAA,oBAClBtB,QAAQ,CAAC,EAAD,CADU;AAAA;AAAA,QACnCuB,IADmC;AAAA,QAC7BC,OAD6B;;AAAA,qBAEVxB,QAAQ,CAAC;AACvCyB,IAAAA,MAAM,EAAE,IAD+B;AAEvCC,IAAAA,QAAQ,EAAE,EAF6B;AAGvCC,IAAAA,OAAO,EAAE,EAH8B;AAIvCC,IAAAA,OAAO,EAAE;AAJ8B,GAAD,CAFE;AAAA;AAAA,QAEnCC,QAFmC;AAAA,QAEzBC,WAFyB;;AAAA,0BAQR/B,KAAK,CAACC,QAAN,CAAe,IAAf,CARQ;AAAA;AAAA,QAQnC+B,SARmC;AAAA,QAQxBC,YARwB;;AAAA,qBAUhBhC,QAAQ,CAAC,KAAD,CAVQ;AAAA;AAAA,QAUnCiC,KAVmC;AAAA,QAU5BC,QAV4B;;AAY1C,QAAMC,MAAM,GAAG,MAAMD,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,QAAMG,cAAc,GAAG,MAAM;AAC3BJ,IAAAA,YAAY,CAACK,SAAS,IAAI,CAACA,SAAf,CAAZ;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAGC,CAAC,IAAI;AACnB,QAAIC,KAAK,CAACC,OAAN,CAAcC,KAAd,CAAJ,EAA0B;AACxBN,MAAAA,cAAc;AACf;;AACD,QAAIO,WAAJ,EAAiB;AACfA,MAAAA,WAAW,CAACJ,CAAD,EAAIK,IAAJ,CAAX;AACD;AACF,GAPD;;AASA,QAAMnB,MAAM,GAAG,CACb;AAAEoB,IAAAA,WAAW,EAAE,GAAf;AAAoBC,IAAAA,KAAK,EAAE,SAA3B;AAAsCC,IAAAA,GAAG,EAAE;AAA3C,GADa,EAEb;AAAEF,IAAAA,WAAW,EAAE,GAAf;AAAoBC,IAAAA,KAAK,EAAE,iBAA3B;AAA8CC,IAAAA,GAAG,EAAE;AAAnD,GAFa,EAGb;AAAEF,IAAAA,WAAW,EAAE,GAAf;AAAoBC,IAAAA,KAAK,EAAE,SAA3B;AAAsCC,IAAAA,GAAG,EAAE;AAA3C,GAHa,EAIb;AAAEF,IAAAA,WAAW,EAAE,GAAf;AAAoBC,IAAAA,KAAK,EAAE,cAA3B;AAA2CC,IAAAA,GAAG,EAAE;AAAhD,GAJa,EAKb;AAAEF,IAAAA,WAAW,EAAE,GAAf;AAAoBC,IAAAA,KAAK,EAAE,WAA3B;AAAwCC,IAAAA,GAAG,EAAE;AAA7C,GALa,EAMb;AAAEF,IAAAA,WAAW,EAAE,GAAf;AAAoBC,IAAAA,KAAK,EAAE,aAA3B;AAA0CC,IAAAA,GAAG,EAAE;AAA/C,GANa,EAOb;AAAEF,IAAAA,WAAW,EAAE,GAAf;AAAoBC,IAAAA,KAAK,EAAE,UAA3B;AAAuCC,IAAAA,GAAG,EAAE;AAA5C,GAPa,CAAf;AASA,QAAMC,UAAU,GAAG,CACjB;AACEC,IAAAA,EAAE,EAAE,QADN;AAEEvB,IAAAA,QAAQ,EAAE,iBAFZ;AAGEwB,IAAAA,IAAI,EAAE,SAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GADiB,EAOjB;AACEF,IAAAA,EAAE,EAAE,QADN;AAEEvB,IAAAA,QAAQ,EAAE,iBAFZ;AAGEwB,IAAAA,IAAI,EAAE,mBAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAPiB,EAajB;AACEF,IAAAA,EAAE,EAAE,QADN;AAEEvB,IAAAA,QAAQ,EAAE,kBAFZ;AAGEwB,IAAAA,IAAI,EAAE,UAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAbiB,EAmBjB;AACEF,IAAAA,EAAE,EAAE,QADN;AAEEvB,IAAAA,QAAQ,EAAE,cAFZ;AAGEwB,IAAAA,IAAI,EAAE,kBAHR;AAIEC,IAAAA,IAAI,EAAE;AAJR,GAnBiB,CAAnB;;AA2BA,QAAMC,QAAQ,GAAGb,CAAC,IAChBT,WAAW,mBAAMD,QAAN;AAAgB,KAACU,CAAC,CAACc,MAAF,CAASH,IAAV,GAAiBX,CAAC,CAACc,MAAF,CAASC;AAA1C,KADb;;AAGA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAEnB,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,CADF,EAKE;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFF,CADF,CALF,CADF,EAaE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,KAAf;AAAsB,IAAA,IAAI,EAAE,KAA5B;AAAmC,IAAA,MAAM,EAAEE,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAC,UADN;AAEE,IAAA,SAAS,EAAC,6CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJF,EAKE,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,CAACJ,SAAf;AAA0B,IAAA,OAAO,EAAC,MAAlC;AAAyC,IAAA,aAAa,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,KAAK,CAACC,OAAN,CAAchB,MAAd,IACC,oBAAC,IAAD;AAAM,IAAA,cAAc,MAApB;AAAqB,IAAA,KAAK,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGiB,KAAK,CAACa,GAAN,CAAU,CAACC,OAAD,EAAUC,KAAV,KACT,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,YAAKD,OAAO,CAACN,IAAb,SAAoBO,KAApB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,KAAK,SAAZ,GACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAEE,MAAAA,MAAM,EAAE;AAAV,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,WAAD;AACE,IAAA,KAAK,EAAEC,KAAK,GAAG,CADjB;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,IAAA,IAAI,EAAEJ,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADD,CADH,CADD,GAgBG,IAjBN,CALF,EAyBG/B,MAAM,CAAC8B,GAAP,CAAW,UAASM,KAAT,EAAgBJ,KAAhB,EAAuB;AACjC,WACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,GAAG,EAAEA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAEI,KAHT;AAIE,MAAA,QAAQ,EAAEA,KAAK,CAAChB,WAJlB;AAKE,MAAA,QAAQ,EAAEN,CAAC,IAAIa,QAAQ,CAACb,CAAD,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOK,GAPL,EAQGsB,KAAK,CAACf,KART,CADF,CADF;AAcD,GAfA,CAzBH,CADF,EA2CE,oBAAC,SAAD;AACE,IAAA,GAAG,EAAC,UADN;AAEE,IAAA,SAAS,EAAC,6CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,EAKGE,UAAU,CAACO,GAAX,CAAe,UAASO,KAAT,EAAgBL,KAAhB,EAAuB;AACrC,WACE,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,GAAG,EAAEA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAEK,KAAK,CAACpC,QAHf;AAIE,MAAA,QAAQ,EAAEa,CAAC,IAAIa,QAAQ,CAACb,CAAD,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMK,GANL,EAOGuB,KAAK,CAACZ,IAPT,CADF,CADF;AAaD,GAdA,CALH,CA3CF,EAgEE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,SAHP;AAIE,IAAA,WAAW,EAAC,SAJd;AAKE,IAAA,QAAQ,EAAEX,CAAC,IAAIa,QAAQ,CAACb,CAAD,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhEF,EAyEE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,yCADZ;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,IAAI,EAAC,IAHP;AAIE,IAAA,IAAI,EAAC,GAJP;AAKE,IAAA,WAAW,EAAC,wBALd;AAME,IAAA,QAAQ,EAAEA,CAAC,IAAIa,QAAQ,CAACb,CAAD,CANzB;AAOE,IAAA,QAAQ,MAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzEF,CADF,CAFF,EAyFE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAEA,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACwB,cAAF;AACA3C,MAAAA,OAAO,CAACS,QAAD,EAAWP,OAAX,CAAP;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAzFF,CAbF,CADF;AAqHD,CAvLD;;AAyLAD,SAAS,CAAC2C,SAAV,GAAsB;AACpB5C,EAAAA,OAAO,EAAEF,SAAS,CAAC+C,IAAV,CAAeC;AADJ,CAAtB;;AAIA,MAAMC,kBAAkB,GAAGC,KAAK,KAAK;AACnCC,EAAAA,SAAS,EAAED,KAAK,CAACC;AADkB,CAAL,CAAhC;;AAIA,eAAelD,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA,OAAF;AAAW+C,EAAAA;AAAX,CAAP,CAAP,CACbjE,UAAU,CAACmB,SAAD,CADG,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport {\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport Collapse from '@material-ui/core/Collapse';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../../actions/post';\nimport './PostModal.scss';\n\nconst PostModal = ({ addPost, history }) => {\n  const [text, setText] = useState('');\n  const [formData, setFormData] = useState({\n    topics: '[]',\n    group_id: '',\n    subject: '',\n    message: ''\n  });\n  const [collapsed, setCollapsed] = React.useState(true);\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const toggleCollapse = () => {\n    setCollapsed(prevValue => !prevValue);\n  };\n\n  const onClick = e => {\n    if (Array.isArray(items)) {\n      toggleCollapse();\n    }\n    if (onClickProp) {\n      onClickProp(e, item);\n    }\n  };\n\n  const topics = [\n    { category_id: '1', title: 'General', url: '/general' },\n    { category_id: '2', title: 'Recommendations', url: '/recommendations' },\n    { category_id: '3', title: 'Carpool', url: '/carpool' },\n    { category_id: '4', title: 'Lost & Found', url: '/lost_and_found' },\n    { category_id: '5', title: 'Volunteer', url: '/volunteer' },\n    { category_id: '6', title: 'Help Needed', url: '/help' },\n    { category_id: '7', title: 'Homework', url: '/homework' }\n  ];\n  const all_groups = [\n    {\n      id: 'userId',\n      group_id: 'groupID room 34',\n      name: 'room 34',\n      type: 'inner'\n    },\n    {\n      id: 'userId',\n      group_id: 'groupID grade 6',\n      name: 'grade 6 + room 34',\n      type: 'outer'\n    },\n    {\n      id: 'userId',\n      group_id: 'groupID sunshine',\n      name: 'sunshine',\n      type: 'inner'\n    },\n    {\n      id: 'userId',\n      group_id: 'groupID prek',\n      name: 'pre-k + sunshine',\n      type: 'outer'\n    }\n  ];\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <div>\n      <div className='new-post-form' onClick={toggle}>\n        <div className='bg-post-head p'>\n          <h6>What do you want to discuss?</h6>\n        </div>\n\n        <div className='post-create-textarea'>\n          <div className='avatar-container'>\n            <i className='fas fa-user margin-right-5 '></i>\n            <span className='new-post'>Post your inner voice </span>\n          </div>\n        </div>\n      </div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Create Post</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup\n              tag='fieldset'\n              className='post-form post-form-radio-options-container'\n            >\n              <legend className='col-form-label'>Choose Category</legend>\n              <Collapse in={!collapsed} timeout='auto' unmountOnExit>\n                {Array.isArray(topics) ? (\n                  <List disablePadding dense>\n                    {items.map((subItem, index) => (\n                      <React.Fragment key={`${subItem.name}${index}`}>\n                        {subItem === 'divider' ? (\n                          <Divider style={{ margin: '6px 0' }} />\n                        ) : (\n                          <SideNavItem\n                            depth={depth + 1}\n                            depthStep={depthStep}\n                            item={subItem}\n                          />\n                        )}\n                      </React.Fragment>\n                    ))}\n                  </List>\n                ) : null}\n              </Collapse>\n\n              {topics.map(function(topic, index) {\n                return (\n                  <FormGroup check key={index}>\n                    <Label check>\n                      <Input\n                        type='radio'\n                        name='topics'\n                        value={topic}\n                        category={topic.category_id}\n                        onChange={e => onChange(e)}\n                      />{' '}\n                      {topic.title}\n                    </Label>\n                  </FormGroup>\n                );\n              })}\n            </FormGroup>\n            <FormGroup\n              tag='fieldset'\n              className='post-form post-form-radio-options-container'\n            >\n              <legend className='col-form-label'>Choose Group</legend>\n              {all_groups.map(function(group, index) {\n                return (\n                  <FormGroup check key={index}>\n                    <Label check>\n                      <Input\n                        type='radio'\n                        name='group_id'\n                        value={group.group_id}\n                        onChange={e => onChange(e)}\n                      />{' '}\n                      {group.name}\n                    </Label>\n                  </FormGroup>\n                );\n              })}\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <Input\n                className='post-form-text-input'\n                type='text'\n                name='subject'\n                placeholder='Subject'\n                onChange={e => onChange(e)}\n              />\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <textarea\n                className='post-form-text-input post-form-textarea'\n                name='message'\n                cols='30'\n                rows='5'\n                placeholder='Enter your message ...'\n                onChange={e => onChange(e)}\n                required\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color='primary'\n            onClick={e => {\n              e.preventDefault();\n              addPost(formData, history);\n            }}\n          >\n            Post\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nPostModal.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = state => ({\n  hideModal: state.hideModal\n});\n\nexport default connect(null, { addPost, mapDispatchToProps })(\n  withRouter(PostModal)\n);\n"]},"metadata":{},"sourceType":"module"}