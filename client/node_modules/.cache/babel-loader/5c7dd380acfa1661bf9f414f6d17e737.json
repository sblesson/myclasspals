{"ast":null,"code":"var _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/posts/Posts.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport PostModal from '../modal/post/PostModal';\nimport { getPosts, getPostCategories } from '../../actions/post';\nimport LeftNav from '../leftnav/LeftNav';\nimport './Posts.scss';\n\nconst Posts = ({\n  getPosts,\n  getPostCategories,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPosts();\n    getPostCategories();\n  }, [getPosts]);\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(LeftNav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"article\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(PostModal, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, posts.map(post => React.createElement(PostItem, {\n    key: post._id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })))))));\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts,\n  getPostCategories\n})(Posts);","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/posts/Posts.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","PostItem","PostModal","getPosts","getPostCategories","LeftNav","Posts","post","posts","loading","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,QAAT,EAAmBC,iBAAnB,QAA4C,oBAA5C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAO,cAAP;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEH,EAAAA,QAAF;AAAYC,EAAAA,iBAAZ;AAA+BG,EAAAA,IAAI,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAArC,CAAD,KAA+D;AAC3EZ,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ;AACRC,IAAAA,iBAAiB;AAClB,GAHQ,EAGN,CAACD,QAAD,CAHM,CAAT;AAKA,SAAOM,OAAO,GACZ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADY,GAGZ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAUH,IAAI,IACb,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACI,GAApB;AAAyB,IAAA,IAAI,EAAEJ,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF,CAHF,CADF,CAHF;AAoBD,CA1BD;;AA4BAD,KAAK,CAACM,SAAN,GAAkB;AAChBT,EAAAA,QAAQ,EAAEL,SAAS,CAACe,IAAV,CAAeC,UADT;AAEhBP,EAAAA,IAAI,EAAET,SAAS,CAACiB,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADoB,CAAL,CAA7B;;AAIA,eAAeR,OAAO,CAACiB,eAAD,EAAkB;AAAEb,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAlB,CAAP,CAA0DE,KAA1D,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport PostModal from '../modal/post/PostModal';\nimport { getPosts, getPostCategories } from '../../actions/post';\nimport LeftNav from '../leftnav/LeftNav';\nimport './Posts.scss';\nconst Posts = ({ getPosts, getPostCategories, post: { posts, loading } }) => {\n  useEffect(() => {\n    getPosts();\n    getPostCategories();\n  }, [getPosts]);\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <div className='row'>\n        <LeftNav />\n\n        <div id='main'>\n          <article>\n            <PostModal />\n            <div className='posts'>\n              {posts.map(post => (\n                <PostItem key={post._id} post={post} />\n              ))}\n            </div>\n          </article>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts, getPostCategories })(Posts);\n"]},"metadata":{},"sourceType":"module"}