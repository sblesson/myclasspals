{"ast":null,"code":"import _slicedToArray from \"/Users/sapnablesson/myGit/devconnector_2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/devconnector_2.0/client/src/components/profile-forms/AddSchoolForm.js\";\nimport React, { useState } from 'react';\nimport { Col, Button, Form, FormGroup, Label, Input, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport axios from 'axios';\nimport Autosuggest from 'react-autosuggest';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addSchool } from '../../actions/profile';\n\nconst AddSchoolForm = ({\n  addSchool\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        school = _React$useState2[0],\n        setSchool = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        suggestions = _React$useState4[0],\n        setSuggestions = _React$useState4[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modal = _useState4[0],\n        setModal = _useState4[1];\n\n  const toggle = () => setModal(!modal);\n\n  const languages = [{\n    name: 'C',\n    year: 1972\n  }, {\n    name: 'C#',\n    year: 2000\n  }, {\n    name: 'C++',\n    year: 1983\n  }, {\n    name: 'Clojure',\n    year: 2007\n  }, {\n    name: 'Elm',\n    year: 2012\n  }, {\n    name: 'Go',\n    year: 2009\n  }, {\n    name: 'Haskell',\n    year: 1990\n  }, {\n    name: 'Java',\n    year: 1995\n  }, {\n    name: 'Javascript',\n    year: 1995\n  }, {\n    name: 'Perl',\n    year: 1987\n  }, {\n    name: 'PHP',\n    year: 1995\n  }, {\n    name: 'Python',\n    year: 1991\n  }, {\n    name: 'Ruby',\n    year: 1995\n  }, {\n    name: 'Scala',\n    year: 2003\n  }]; // https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\n\n  function escapeRegexCharacters(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  }\n\n  function getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n\n    if (escapedValue === '') {\n      return [];\n    }\n\n    const regex = new RegExp('^' + escapedValue, 'i');\n    return languages.filter(language => regex.test(language.name));\n  }\n\n  function getSuggestionValue(suggestion) {\n    return suggestion.name;\n  }\n\n  function renderSuggestion(suggestion) {\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, suggestion.name);\n  }\n\n  this.state = {\n    value: '',\n    suggestions: []\n  };\n\n  onChange = (event, {\n    newValue,\n    method\n  }) => {\n    this.setState({\n      value: newValue\n    });\n  };\n\n  onSuggestionsFetchRequested = ({\n    value\n  }) => {\n    this.setState({\n      suggestions: getSuggestions(value)\n    });\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"post-form\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, \"Add School\")), React.createElement(Modal, {\n    isOpen: modal,\n    fade: false,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \" Add School\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Child Name (optional)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }))), React.createElement(FormGroup, {\n    tag: \"fieldset\",\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Choose category\"), React.createElement(Col, {\n    sm: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(Autosuggest, {\n    suggestions: suggestions,\n    onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n    onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n    getSuggestionValue: getSuggestionValue,\n    renderSuggestion: renderSuggestion,\n    inputProps: inputProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })))))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, \"Add\"))));\n};\n\nAddSchoolForm.propTypes = {\n  addSchool: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addSchool\n})(AddSchoolForm);","map":{"version":3,"sources":["/Users/sapnablesson/myGit/devconnector_2.0/client/src/components/profile-forms/AddSchoolForm.js"],"names":["React","useState","Col","Button","Form","FormGroup","Label","Input","FormText","Modal","ModalHeader","ModalBody","ModalFooter","axios","Autosuggest","PropTypes","connect","addSchool","AddSchoolForm","text","setText","school","setSchool","suggestions","setSuggestions","modal","setModal","toggle","languages","name","year","escapeRegexCharacters","str","replace","getSuggestions","value","escapedValue","trim","regex","RegExp","filter","language","test","getSuggestionValue","suggestion","renderSuggestion","state","onChange","event","newValue","method","setState","onSuggestionsFetchRequested","onSuggestionsClearRequested","inputProps","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport axios from 'axios';\n\nimport Autosuggest from 'react-autosuggest';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addSchool } from '../../actions/profile';\n\nconst AddSchoolForm = ({ addSchool }) => {\n  const [text, setText] = useState('');\n  const [school, setSchool] = React.useState('');\n  const [suggestions, setSuggestions] = React.useState([]);\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n  const languages = [\n    {\n      name: 'C',\n      year: 1972\n    },\n    {\n      name: 'C#',\n      year: 2000\n    },\n    {\n      name: 'C++',\n      year: 1983\n    },\n    {\n      name: 'Clojure',\n      year: 2007\n    },\n    {\n      name: 'Elm',\n      year: 2012\n    },\n    {\n      name: 'Go',\n      year: 2009\n    },\n    {\n      name: 'Haskell',\n      year: 1990\n    },\n    {\n      name: 'Java',\n      year: 1995\n    },\n    {\n      name: 'Javascript',\n      year: 1995\n    },\n    {\n      name: 'Perl',\n      year: 1987\n    },\n    {\n      name: 'PHP',\n      year: 1995\n    },\n    {\n      name: 'Python',\n      year: 1991\n    },\n    {\n      name: 'Ruby',\n      year: 1995\n    },\n    {\n      name: 'Scala',\n      year: 2003\n    }\n  ];\n  \n  // https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions#Using_Special_Characters\n  function escapeRegexCharacters(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n  }\n  \n  function getSuggestions(value) {\n    const escapedValue = escapeRegexCharacters(value.trim());\n    \n    if (escapedValue === '') {\n      return [];\n    }\n  \n    const regex = new RegExp('^' + escapedValue, 'i');\n  \n    return languages.filter(language => regex.test(language.name));\n  }\n  \n  function getSuggestionValue(suggestion) {\n    return suggestion.name;\n  }\n  \n  function renderSuggestion(suggestion) {\n    return (\n      <span>{suggestion.name}</span>\n    );\n  }\n  \n \n  \n      this.state = {\n        value: '',\n        suggestions: []\n      };    \n    \n  \n    onChange = (event, { newValue, method }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n    \n    onSuggestionsFetchRequested = ({ value }) => {\n      this.setState({\n        suggestions: getSuggestions(value)\n      });\n    };\n  \n    onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n  return (\n    <div>\n      <div className='post-form' onClick={toggle}>\n        <Button color='primary' onClick={toggle}>\n          Add School\n        </Button>\n      </div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Add School</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup row>\n              <Col sm={10}>\n                <Input\n                  type='text'\n                  name='text'\n                  placeholder='Child Name (optional)'\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup tag='fieldset' row>\n              <legend className='col-form-label'>Choose category</legend>\n              <Col sm={10}>\n                <FormGroup check>\n                  <Autosuggest\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={\n                      this.onSuggestionsFetchRequested\n                    }\n                    onSuggestionsClearRequested={\n                      this.onSuggestionsClearRequested\n                    }\n                    getSuggestionValue={getSuggestionValue}\n                    renderSuggestion={renderSuggestion}\n                    inputProps={inputProps}\n                  />\n                </FormGroup>\n              </Col>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={toggle}>\n            Add\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nAddSchoolForm.propTypes = {\n  addSchool: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addSchool })(AddSchoolForm);\n"]},"metadata":{},"sourceType":"module"}