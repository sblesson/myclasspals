{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/profile/AddChildForm.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\nimport { Input, Grid, Select, Radio, Form, Button, Checkbox, Search } from 'semantic-ui-react';\nimport './AddChildForm.scss';\n\nconst AddChildForm = ({\n  community\n}) => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const yourInfo = community !== null && community.length > 0 && community.map(childData => React.createElement(\"div\", {\n    key: childData.id,\n    className: \"alert alert-\".concat(childData.childName),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    control: Input,\n    placeholder: \"Child Name\",\n    name: \"childName\",\n    defaultValue: childData.childName,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, ' ', React.createElement(Search, {\n    fluid: true\n    /*      //loading={isLoading}\n    //onResultSelect={this.handleResultSelect}\n    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n    leading: true\n    })}\n    results={results}\n    value={value}\n    {...this.props} */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    control: Input,\n    placeholder: \"Grade\",\n    name: \"grade\",\n    defaultValue: childData.grade,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    control: Input,\n    placeholder: \"Class Room\",\n    name: \"classroom\",\n    defaultValue: childData.classroom,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))));\n  /*   <Button\n      color='pink'\n      onClick={e => {\n        e.preventDefault();\n        //addSchool(formData, history);\n      }}\n    >\n      Add + child\n    </Button> */\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, yourInfo);\n};\n\nAddChildForm.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  community: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  isLoading: state.school.isLoading\n});\n\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile\n})(withRouter(AddChildForm));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/profile/AddChildForm.js"],"names":["React","useEffect","useState","Fragment","Link","withRouter","Redirect","PropTypes","connect","_","createProfile","getCurrentProfile","Input","Grid","Select","Radio","Form","Button","Checkbox","Search","AddChildForm","community","formData","setFormData","yourInfo","length","map","childData","id","childName","e","onChange","grade","classroom","target","name","value","propTypes","func","isRequired","profile","object","array","mapStateToProps","state","isLoading","school"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport _ from 'lodash';\n\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nimport {\n  Input,\n  Grid,\n  Select,\n  Radio,\n  Form,\n  Button,\n  Checkbox,\n  Search\n} from 'semantic-ui-react';\nimport './AddChildForm.scss';\n\nconst AddChildForm = ({ community }) => {\n  const [formData, setFormData] = useState({});\n\n  const yourInfo = \n    community !== null &&\n    community.length > 0 &&\n    community.map(childData => (\n      <div key={childData.id} className={`alert alert-${childData.childName}`}>\n        <Form>\n          <Form.Field\n            control={Input}\n            placeholder='Child Name'\n            name='childName'\n            defaultValue={childData.childName}\n            onChange={e => onChange(e)}\n            required\n          />\n          <Form.Field>\n            {' '}\n            <Search\n              fluid\n              /*      //loading={isLoading}\n          //onResultSelect={this.handleResultSelect}\n          onSearchChange={_.debounce(this.handleSearchChange, 500, {\n            leading: true\n          })}\n          results={results}\n          value={value}\n          {...this.props} */\n            />\n          </Form.Field>\n\n          {/*       <Form.Field widths='equal'>\n        <Form.Select\n          fluid\n          //options={userData.address.state}\n          placeholder='Gender'\n        />\n      </Form.Field> */}\n          <Form.Field\n            control={Input}\n            placeholder='Grade'\n            name='grade'\n            defaultValue={childData.grade}\n            onChange={e => onChange(e)}\n          />\n          <Form.Field\n            control={Input}\n            placeholder='Class Room'\n            name='classroom'\n            defaultValue={childData.classroom}\n            onChange={e => onChange(e)}\n          />\n        </Form>\n      </div>\n    ));\n  /*   <Button\n      color='pink'\n      onClick={e => {\n        e.preventDefault();\n        //addSchool(formData, history);\n      }}\n    >\n      Add + child\n    </Button> */\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return <Fragment>{yourInfo}</Fragment>;\n};\n\nAddChildForm.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  community: PropTypes.array.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  isLoading: state.school.isLoading\n});\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile\n})(withRouter(AddChildForm));\n"]},"metadata":{},"sourceType":"module"}