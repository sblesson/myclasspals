{"version":3,"sources":["components/posts/modal/DeletePostModal.js","../node_modules/@ant-design/icons-svg/es/asn/FormOutlined.js","../node_modules/@ant-design/icons/es/icons/FormOutlined.js","components/common/autocompleteusersearch/AutoCompleteUserSeach.js","components/messages/modal/PrivateMessageModal.js","../avatar/index.jsx","../node_modules/@ant-design/icons-svg/es/asn/StarOutlined.js","../node_modules/@ant-design/icons/es/icons/StarOutlined.js","../comment/index.jsx","../divider/index.jsx","components/messages/Messages.js"],"names":["connect","state","post","deletePost","deleteComment","postId","postType","commentId","isSinglePost","useState","headerTitle","visible","setModalVisibility","toggleModal","className","onClick","title","centered","onOk","currentPost","_id","okText","onCancel","destroyOnClose","cancelButtonProps","style","display","FormOutlined","props","ref","React","createElement","AntdIcon","Object","assign","icon","FormOutlinedSvg","displayName","forwardRef","auth","searchUser","Option","Select","children","searchUserResult","length","map","item","index","key","value","email","fontWeigth","name","showSearch","placeholder","onSearch","searchTerm","setTimeout","Math","random","onChange","option","selectedUser","mapDispatchToProps","hideModal","currentGroup","group","sendPrivateMessage","withRouter","history","toAddress","noMessagesFound","componentSize","formItemLayout","labelCol","xs","span","sm","wrapperCol","validateRequired","undefined","MessageForm","StarOutlined","initialValues","userId","user","endUserId","subject","message","isPrivate","onSubmit","values","actions","validator","render","flex","padding","layout","size","label","required","validate","TextArea","cols","rows","displayInboxCompose","as","displayMessageButton","type","fontSize","displayCompose","status","subTitle","extra","__rest","s","e","t","i","p","Avatar","scale","mounted","isImgExist","childrenWidth","nodeWidth","onError","getPrefixCls","_a","customizePrefixCls","shape","src","srcSet","alt","others","warning","prefixCls","sizeCls","classNames","classString","sizeStyle","width","height","lineHeight","transformString","childrenStyle","msTransform","WebkitTransform","transform","sizeChildrenStyle","opacity","this","prevProps","StarOutlinedSvg","getAction","Comment","direction","author","avatar","content","datetime","otherProps","avatarDom","actionDom","authorContent","contentDom","comment","cls","orientation","dashed","restProps","orientationPrefix","role","getPrivateMessages","getPost","addMessageReply","messages","loading","Sider","Layout","Content","messagePanelSelected","setMessagePanelItemSelected","submitting","chatFormData","setChatForm","useEffect","localStorage","getItem","recentPost","redirectUrl","push","Input","menu","Item","DeletePostModal","overflow","position","left","right","PrivateMessageModal","itemLayout","dataSource","renderItem","event","handleMessageItemClick","Meta","gap","charAt","tooltip","description","marginLeft","marginTop","overlay","placement","EllipsisOutlined","comments","margin","preventDefault","target","htmlType","stopPropagation","formData","float"],"mappings":"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","file":"static/js/10.85091af8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { deletePost, deleteComment } from '../../../actions/post';\nimport { Modal } from 'antd';\n\nimport _ from 'lodash';\n\nconst DeletePostModal = ({\n  deletePost,\n  deleteComment,\n  postId,\n  postType,\n  commentId,\n  isSinglePost,\n  post\n}) => {\n  const [headerTitle, setHeaderTitle] = useState(\"Please don't delete me!\");\n\n  const [visible, setModalVisibility] = useState(false);\n\n  const showModal = () => {\n    setModalVisibility(true);\n  };\n\n  const hideModal = () => {\n    setModalVisibility(false);\n  };\n  const toggleModal = () => {\n    setModalVisibility(!visible);\n  };\n  const handleDelete = () => {\n    if (postType === 'comment') {\n      deleteComment(postId, commentId, isSinglePost);\n    } else if (postId) {\n      deletePost(postId);\n    } else if (post && post.currentPost && post.currentPost._id) {\n      deletePost(post.currentPost._id);\n    }\n    hideModal();\n  };\n  return (\n    <div>\n      <div className='account-info-action-container' onClick={toggleModal}>\n        <div className='account-info-delete-button-right'>\n          <span>Delete</span>\n        </div>\n      </div>\n      <Modal\n        title={headerTitle}\n        centered\n        visible={visible}\n        onOk={handleDelete}\n        okText='Delete'\n        onCancel={toggleModal} //pass close logic here\n        destroyOnClose={true}\n        cancelButtonProps={{ style: { display: 'none' } }}\n        destroyOnClose={true}\n      >\n        <div>\n          Deleting this {postType} will removes it forever. Are you sure you\n          want to delete?\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  deletePost,\n  deleteComment\n})(DeletePostModal);\n","// This icon file is generated automatically.\n// tslint:disable\nvar FormOutlined = { \"name\": \"form\", \"theme\": \"outlined\", \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M904 512h-56c-4.4 0-8 3.6-8 8v320H184V184h320c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V520c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M355.9 534.9L354 653.8c-.1 8.9 7.1 16.2 16 16.2h.4l118-2.9c2-.1 4-.9 5.4-2.3l415.9-415c3.1-3.1 3.1-8.2 0-11.3L785.4 114.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-415.8 415a8.3 8.3 0 00-2.3 5.6zm63.5 23.6L779.7 199l45.2 45.1-360.5 359.7-45.7 1.1.7-46.4z\" } }] } };\nexport default FormOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport React from 'react';\nimport FormOutlinedSvg from \"@ant-design/icons-svg/es/asn/FormOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar FormOutlined = function FormOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: FormOutlinedSvg\n  }));\n};\n\nFormOutlined.displayName = 'FormOutlined';\nexport default React.forwardRef(FormOutlined);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Select } from 'formik-antd';\n\nimport { searchUser } from '../../../actions/auth';\n\nconst AutoCompleteUserSeach = ({ searchUser, auth }) => {\n  const Option = Select.Option;\n\n  const fetchUser = searchTerm => {\n    if (searchTerm) {\n      setTimeout(() => {\n        searchUser(searchTerm);\n      }, Math.random() * 1000);\n    }\n  };\n\n  const onUserSelect = (value, option) => {\n    if (auth && auth.searchUserResult && auth.searchUserResult.length > 0) {\n      //update selected school in the reducer\n      auth.selectedUser = auth.searchUserResult[option.key];\n    }\n  };\n\n  const children =\n    auth &&\n    auth.searchUserResult &&\n    auth.searchUserResult.length > 0 &&\n    auth.searchUserResult.map((item, index) => {\n      return (\n        <Option key={index} value={item.email}>\n          <span style={{ fontWeigth: 'bolder' }}> {item.email}</span>\n        </Option>\n      );\n    });\n\n  return (\n    <Select\n      name='endUserId'\n      showSearch\n      placeholder='Type name'\n      onSearch={fetchUser}\n      onChange={onUserSelect}\n    >\n      {children}\n    </Select>\n  );\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(mapStateToProps, { searchUser })(AutoCompleteUserSeach);\n","import React, { useState } from 'react';\nimport { Upload, Button, Modal, Result } from 'antd';\nimport { UploadOutlined, StarOutlined, FormOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, ErrorMessage } from 'formik';\n\nimport { SubmitButton, Input, Form, FormItem, FormikDebug } from 'formik-antd';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { sendPrivateMessage } from '../../../actions/post';\nimport AutoCompleteUserSeach from '../../common/autocompleteusersearch/AutoCompleteUserSeach';\n\nimport './PrivateMessageModal.scss';\n\nconst PrivateMessageModal = ({\n  sendPrivateMessage,\n  history,\n  auth,\n  toAddress,\n  noMessagesFound\n}) => {\n  const [componentSize, setComponentSize] = useState('small');\n\n  const [visible, setModalVisibility] = useState(false);\n  const [headerTitle, setHeaderTitle] = useState('Send Private Message');\n  const showModal = () => {\n    setModalVisibility(true);\n  };\n  const hideModal = () => {\n    setModalVisibility(false);\n  };\n  const toggleModal = () => {\n    setModalVisibility(!visible);\n  };\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 }\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 }\n    }\n  };\n  const validateRequired = value => {\n    return value ? undefined : 'required';\n  };\n\n  const uploadProps = {\n    action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n    onChange({ file, fileList }) {\n      if (file.status !== 'uploading') {\n      }\n    },\n    defaultFileList: [\n      {\n        uid: '1',\n        name: 'xxx.png',\n        status: 'done',\n        response: 'Server Error 500', // custom error message to show\n        url: 'http://www.baidu.com/xxx.png'\n      },\n      {\n        uid: '2',\n        name: 'yyy.png',\n        status: 'done',\n        url: 'http://www.baidu.com/yyy.png'\n      },\n      {\n        uid: '3',\n        name: 'zzz.png',\n        status: 'error',\n        response: 'Server Error 500', // custom error message to show\n        url: 'http://www.baidu.com/zzz.png'\n      }\n    ],\n    showUploadList: {\n      showDownloadIcon: true,\n      downloadIcon: 'download ',\n      showRemoveIcon: true,\n      removeIcon: (\n        <StarOutlined\n          onClick={e => console.log(e, 'custom removeIcon event')}\n        />\n      )\n    }\n  };\n\n  const MessageForm = (\n    <Formik\n      initialValues={{\n        userId: auth && auth.user && auth.user._id ? auth.user._id : null,\n        endUserId: toAddress ? toAddress : '',\n        subject: '',\n        message: '',\n        isPrivate: true\n      }}\n      onSubmit={(values, actions) => {\n        sendPrivateMessage(values);\n        setModalVisibility(false);\n      }}\n      validator={() => ({})}\n      //validate={values => {}}\n      render={() => (\n        <div style={{ flex: 1, padding: 10 }}>\n          <Form\n            className='form-wrapper'\n            {...formItemLayout}\n            layout='vertical'\n            initialValues={{\n              size: componentSize\n            }}\n          >\n            {toAddress ? (\n              ''\n            ) : (\n              <FormItem\n                name='endUserId'\n                label='Select your buddies'\n                required={true}\n                validate={validateRequired}\n              >\n                <AutoCompleteUserSeach />\n              </FormItem>\n            )}\n            <FormItem\n              name='subject'\n              label='Subject'\n              required={true}\n              validate={validateRequired}\n            >\n              <Input name='subject' placeholder='Subject' />\n            </FormItem>\n            <FormItem name='message' label='Your Message' required={false}>\n              <Input.TextArea\n                className='post-form-text-input post-form-textarea'\n                name='message'\n                cols='30'\n                rows='5'\n                placeholder='Enter your message ...'\n                required={false}\n              />\n            </FormItem>\n            {/*       <Upload {...uploadProps}>\n              <Button>\n                <UploadOutlined /> Upload\n              </Button>\n            </Upload>             <pre style={{ flex: 1 }}>\n              <FormikDebug />\n            </pre>*/}\n            <SubmitButton className='ant-btn btn-primary'> Send</SubmitButton>\n          </Form>\n        </div>\n      )}\n    />\n  );\n  const displayInboxCompose = (\n    <div className='private-message-modal' onClick={toggleModal}>\n      <div as='h4' className='message-head-title'>\n        Inbox\n      </div>\n      <div\n        as='h4'\n        className='message-head-title message-head-link'\n        onClick={toggleModal}\n      >\n        <FormOutlined className='message-head-icon' />\n        Compose\n      </div>\n    </div>\n  );\n\n  const displayMessageButton = (\n    <div className='private-message-modal' onClick={toggleModal}>\n      <Button\n        type='primary'\n        className='btn-primary'\n        style={{ padding: '4px 10px', fontSize: '12px' }}\n      >\n        Message\n      </Button>\n    </div>\n  );\n\n  const displayCompose = (\n    <div className='private-message-modal' onClick={toggleModal}>\n      <Result\n        status='warning'\n        subTitle='No messages found!'\n        extra={\n          <div\n            as='h4'\n            className='message-head-title message-head-link'\n            onClick={toggleModal}\n          >\n            <FormOutlined className='message-head-icon' />\n            Compose\n          </div>\n        }\n      />\n    </div>\n  );\n\n  return (\n    <div>\n      {noMessagesFound && displayCompose}\n      {!noMessagesFound && !toAddress && displayInboxCompose}\n      {toAddress && displayMessageButton}\n      <Modal\n        title={headerTitle}\n        centered\n        visible={visible}\n        onOk={hideModal}\n        onCancel={toggleModal} //pass close logic here\n        destroyOnClose={true}\n        cancelButtonProps={{ style: { display: 'none' } }}\n        destroyOnClose={true}\n        footer={null}\n      >\n        {MessageForm}\n      </Modal>\n    </div>\n  );\n};\n\nPrivateMessageModal.propTypes = {\n  sendPrivateMessage: PropTypes.func.isRequired\n};\nconst mapDispatchToProps = state => ({\n  hideModal: state.hideModal,\n  currentGroup: state.group.currentGroup,\n  auth: state.auth\n});\n\nexport default connect(mapDispatchToProps, {\n  sendPrivateMessage,\n  mapDispatchToProps\n})(withRouter(PrivateMessageModal));\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nexport default class Avatar extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            scale: 1,\n            mounted: false,\n            isImgExist: true,\n        };\n        this.setScale = () => {\n            if (!this.avatarChildren || !this.avatarNode) {\n                return;\n            }\n            const childrenWidth = this.avatarChildren.offsetWidth; // offsetWidth avoid affecting be transform scale\n            const nodeWidth = this.avatarNode.offsetWidth;\n            // denominator is 0 is no meaning\n            if (childrenWidth === 0 ||\n                nodeWidth === 0 ||\n                (this.lastChildrenWidth === childrenWidth && this.lastNodeWidth === nodeWidth)) {\n                return;\n            }\n            this.lastChildrenWidth = childrenWidth;\n            this.lastNodeWidth = nodeWidth;\n            // add 4px gap for each side to get better performance\n            this.setState({\n                scale: nodeWidth - 8 < childrenWidth ? (nodeWidth - 8) / childrenWidth : 1,\n            });\n        };\n        this.handleImgLoadError = () => {\n            const { onError } = this.props;\n            const errorFlag = onError ? onError() : undefined;\n            if (errorFlag !== false) {\n                this.setState({ isImgExist: false });\n            }\n        };\n        this.renderAvatar = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, shape, size, src, srcSet, icon, className, alt } = _a, others = __rest(_a, [\"prefixCls\", \"shape\", \"size\", \"src\", \"srcSet\", \"icon\", \"className\", \"alt\"]);\n            warning(!(typeof icon === 'string' && icon.length > 2), 'Avatar', `\\`icon\\` is using ReactNode instead of string naming in v4. Please check \\`${icon}\\` at https://ant.design/components/icon`);\n            const { isImgExist, scale, mounted } = this.state;\n            const prefixCls = getPrefixCls('avatar', customizePrefixCls);\n            const sizeCls = classNames({\n                [`${prefixCls}-lg`]: size === 'large',\n                [`${prefixCls}-sm`]: size === 'small',\n            });\n            const classString = classNames(prefixCls, className, sizeCls, {\n                [`${prefixCls}-${shape}`]: shape,\n                [`${prefixCls}-image`]: src && isImgExist,\n                [`${prefixCls}-icon`]: icon,\n            });\n            const sizeStyle = typeof size === 'number'\n                ? {\n                    width: size,\n                    height: size,\n                    lineHeight: `${size}px`,\n                    fontSize: icon ? size / 2 : 18,\n                }\n                : {};\n            let { children } = this.props;\n            if (src && isImgExist) {\n                children = <img src={src} srcSet={srcSet} onError={this.handleImgLoadError} alt={alt}/>;\n            }\n            else if (icon) {\n                children = icon;\n            }\n            else {\n                const childrenNode = this.avatarChildren;\n                if (childrenNode || scale !== 1) {\n                    const transformString = `scale(${scale}) translateX(-50%)`;\n                    const childrenStyle = {\n                        msTransform: transformString,\n                        WebkitTransform: transformString,\n                        transform: transformString,\n                    };\n                    const sizeChildrenStyle = typeof size === 'number'\n                        ? {\n                            lineHeight: `${size}px`,\n                        }\n                        : {};\n                    children = (<span className={`${prefixCls}-string`} ref={(node) => (this.avatarChildren = node)} style={Object.assign(Object.assign({}, sizeChildrenStyle), childrenStyle)}>\n            {children}\n          </span>);\n                }\n                else {\n                    const childrenStyle = {};\n                    if (!mounted) {\n                        childrenStyle.opacity = 0;\n                    }\n                    children = (<span className={`${prefixCls}-string`} style={{ opacity: 0 }} ref={(node) => (this.avatarChildren = node)}>\n            {children}\n          </span>);\n                }\n            }\n            return (<span {...others} style={Object.assign(Object.assign({}, sizeStyle), others.style)} className={classString} ref={(node) => (this.avatarNode = node)}>\n        {children}\n      </span>);\n        };\n    }\n    componentDidMount() {\n        this.setScale();\n        this.setState({ mounted: true });\n    }\n    componentDidUpdate(prevProps) {\n        this.setScale();\n        if (prevProps.src !== this.props.src) {\n            this.setState({ isImgExist: true, scale: 1 });\n        }\n    }\n    render() {\n        return <ConfigConsumer>{this.renderAvatar}</ConfigConsumer>;\n    }\n}\nAvatar.defaultProps = {\n    shape: 'circle',\n    size: 'default',\n};\n","// This icon file is generated automatically.\n// tslint:disable\nvar StarOutlined = { \"name\": \"star\", \"theme\": \"outlined\", \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3zM664.8 561.6l36.1 210.3L512 672.7 323.1 772l36.1-210.3-152.8-149L417.6 382 512 190.7 606.4 382l211.2 30.7-152.8 148.9z\" } }] } };\nexport default StarOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport React from 'react';\nimport StarOutlinedSvg from \"@ant-design/icons-svg/es/asn/StarOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar StarOutlined = function StarOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: StarOutlinedSvg\n  }));\n};\n\nStarOutlined.displayName = 'StarOutlined';\nexport default React.forwardRef(StarOutlined);","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nfunction getAction(actions) {\n    if (!actions || !actions.length) {\n        return null;\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    const actionList = actions.map((action, index) => <li key={`action-${index}`}>{action}</li>);\n    return actionList;\n}\nexport default class Comment extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderNested = (prefixCls, children) => {\n            return <div className={classNames(`${prefixCls}-nested`)}>{children}</div>;\n        };\n        this.renderComment = ({ getPrefixCls, direction }) => {\n            const _a = this.props, { actions, author, avatar, children, className, content, prefixCls: customizePrefixCls, style, datetime } = _a, otherProps = __rest(_a, [\"actions\", \"author\", \"avatar\", \"children\", \"className\", \"content\", \"prefixCls\", \"style\", \"datetime\"]);\n            const prefixCls = getPrefixCls('comment', customizePrefixCls);\n            const avatarDom = (<div className={`${prefixCls}-avatar`}>\n        {typeof avatar === 'string' ? <img src={avatar} alt=\"comment-avatar\"/> : avatar}\n      </div>);\n            const actionDom = actions && actions.length ? (<ul className={`${prefixCls}-actions`}>{getAction(actions)}</ul>) : null;\n            const authorContent = (<div className={`${prefixCls}-content-author`}>\n        {author && <span className={`${prefixCls}-content-author-name`}>{author}</span>}\n        {datetime && <span className={`${prefixCls}-content-author-time`}>{datetime}</span>}\n      </div>);\n            const contentDom = (<div className={`${prefixCls}-content`}>\n        {authorContent}\n        <div className={`${prefixCls}-content-detail`}>{content}</div>\n        {actionDom}\n      </div>);\n            const comment = (<div className={`${prefixCls}-inner`}>\n        {avatarDom}\n        {contentDom}\n      </div>);\n            const cls = classNames(prefixCls, className, {\n                [`${prefixCls}-rtl`]: direction === 'rtl',\n            });\n            return (<div {...otherProps} className={cls} style={style}>\n        {comment}\n        {children ? this.renderNested(prefixCls, children) : null}\n      </div>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComment}</ConfigConsumer>;\n    }\n}\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nconst Divider = props => (<ConfigConsumer>\n    {({ getPrefixCls }) => {\n    const { prefixCls: customizePrefixCls, type = 'horizontal', orientation = 'center', className, children, dashed } = props, restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\"]);\n    const prefixCls = getPrefixCls('divider', customizePrefixCls);\n    const orientationPrefix = orientation.length > 0 ? `-${orientation}` : orientation;\n    const classString = classNames(className, prefixCls, `${prefixCls}-${type}`, {\n        [`${prefixCls}-with-text${orientationPrefix}`]: children,\n        [`${prefixCls}-dashed`]: !!dashed,\n    });\n    return (<div className={classString} {...restProps} role=\"separator\">\n          {children && <span className={`${prefixCls}-inner-text`}>{children}</span>}\n        </div>);\n}}\n  </ConfigConsumer>);\nexport default Divider;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Menu, Layout, Divider, Empty, Spin } from 'antd';\nimport {\n  getPrivateMessages,\n  getPost,\n  addMessageReply\n} from '../../actions/post';\nimport PrivateMessageModal from './modal/PrivateMessageModal';\nimport {\n  Comment,\n  Form,\n  Button,\n  List,\n  Input,\n  Card,\n  Dropdown,\n  Avatar\n} from 'antd';\nimport DeletePostModal from '../posts/modal/DeletePostModal';\nimport { EllipsisOutlined } from '@ant-design/icons';\nimport Ellipsis from 'ant-design-pro/lib/Ellipsis';\n\nimport './Messages.scss';\nconst Messages = ({\n  getPrivateMessages,\n  getPost,\n  addMessageReply,\n  post: { messages, loading, currentPost },\n  auth,\n  history\n}) => {\n  const { Sider, Content } = Layout;\n\n  const [messagePanelSelected, setMessagePanelItemSelected] = useState(null);\n\n  const [chatFormData, setChatForm] = useState({\n    submitting: false,\n    value: ''\n  });\n  useEffect(() => {\n    if (auth && auth.user && auth.user.email) {\n      getPrivateMessages({ userId: auth.user.email, isPrivate: true });\n    } else {\n      const email = localStorage.getItem('userEmail');\n      getPrivateMessages({ userId: email, isPrivate: true });\n    }\n  }, [getPrivateMessages, auth.user._id]);\n\n  useEffect(() => {\n    const recentPost =\n      messages && messages.length > 0\n        ? messagePanelSelected\n          ? messagePanelSelected\n          : messages[0]\n        : null;\n    if (recentPost) {\n      getPost(recentPost._id);\n      const redirectUrl = `/messages/${recentPost._id}`;\n      history.push(redirectUrl);\n      setMessagePanelItemSelected(recentPost);\n    }\n  }, [messages]);\n\n  const { TextArea } = Input;\n\n  const handleMessageItemClick = (item, event) => {\n    setMessagePanelItemSelected(item);\n    getPost(item._id);\n    const redirectUrl = `/messages/${item._id}`;\n    history.push(redirectUrl);\n  };\n\n  const onChatSubmit = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    const formData = {\n      message: chatFormData.value,\n      endUserId: messagePanelSelected.endUserId,\n      subject: messagePanelSelected.subject\n    };\n\n    setChatForm({ ...chatFormData, ['submitting']: true });\n    setChatForm({ ...chatFormData, ['value']: '' });\n    addMessageReply(messagePanelSelected._id, formData);\n  };\n\n  const onChangeChatMessage = event => {\n    event.preventDefault();\n    setChatForm({ ...chatFormData, ['value']: event.target.value });\n  };\n\n  const menu = (\n    <Menu>\n      <Menu.Item>\n        {' '}\n        <DeletePostModal postType='post' />\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Spin />\n      ) : (\n        <Layout>\n          {messages && messages.length > 0 ? (\n            <Sider\n              style={{\n                overflow: 'auto',\n                height: '100vh',\n                position: 'fixed',\n                left: '50',\n                right: '10'\n              }}\n              className='message-inbox-list'\n            >\n              <div className='message-head'>\n                <PrivateMessageModal />\n              </div>\n              <List\n                //className='message-list'\n                itemLayout='horizontal'\n                dataSource={messages}\n                renderItem={message => (\n                  <List.Item\n                    onClick={event => handleMessageItemClick(message, event)}\n                    className={\n                      messagePanelSelected === message ? ' selected' : ''\n                    }\n                  >\n                    <List.Item.Meta\n                      avatar={\n                        <Avatar size='large' gap={4} className='avatar-icon'>\n                          {auth.user.email === message.endUserId\n                            ? message.userId.charAt(0)\n                            : message.endUserId\n                            ? message.endUserId.charAt(0)\n                            : ''}\n                        </Avatar>\n                      }\n                      title={\n                        <Ellipsis length={40} tooltip>\n                          {message.subject}\n                        </Ellipsis>\n                      }\n                      description={\n                        <Ellipsis length={40} tooltip>\n                          {auth.user.email === message.endUserId\n                            ? message.userId\n                            : message.endUserId}\n                        </Ellipsis>\n                      }\n                    />\n                  </List.Item>\n                )}\n              />\n            </Sider>\n          ) : (\n            ''\n          )}\n          <Content\n            style={{\n              marginLeft: 200,\n              marginTop: '24',\n              overflow: 'initial'\n            }}\n          >\n            {currentPost ? (\n              <Card\n                title={\n                  <Ellipsis length={80} tooltip>\n                    {currentPost.subject}\n                  </Ellipsis>\n                }\n                extra={\n                  <Dropdown\n                    overlay={menu}\n                    placement='bottomCenter'\n                    className='ant-dropdown-link'\n                  >\n                    <EllipsisOutlined />\n                  </Dropdown>\n                }\n                style={{ width: '50%' }}\n              >\n                <List>\n                  <List.Item>\n                    <Comment\n                      avatar={\n                        <Avatar size='small' className='avatar-icon' gap={4}>\n                          {currentPost.userId.charAt(0)}\n                        </Avatar>\n                      }\n                      key={currentPost._id}\n                      author={currentPost.endUserId}\n                      content={currentPost.message}\n                    ></Comment>\n                  </List.Item>\n                  {currentPost.comments &&\n                    currentPost.comments.length > 0 &&\n                    currentPost.comments.map((comment, index) => (\n                      <List.Item key={index}>\n                        <Comment\n                          key={comment._id}\n                          author={comment.userId}\n                          avatar={\n                            <Avatar\n                              className='avatar-icon'\n                              size='small'\n                              gap={4}\n                            >\n                              {comment.userId.charAt(0)}\n                            </Avatar>\n                          }\n                          content={comment.message}\n                          datetime={comment.datetime}\n                        />\n                      </List.Item>\n                    ))}\n                </List>\n                <Divider style={{ margin: 0 }} />\n\n                <Comment\n                  style={{ width: '100%' }}\n                  content={\n                    <div>\n                      <Form.Item>\n                        <TextArea\n                          name='reply'\n                          className='input-block-level form-control'\n                          onChange={e => onChangeChatMessage(e)}\n                          placeholder='Type a message'\n                          value={chatFormData.value}\n                        />\n                      </Form.Item>\n                      <Form.Item>\n                        <Button\n                          htmlType='button'\n                          onClick={onChatSubmit}\n                          type='primary'\n                          style={{ float: 'right' }}\n                          className='btn-primary'\n                        >\n                          Send\n                        </Button>\n                      </Form.Item>\n                    </div>\n                  }\n                />\n              </Card>\n            ) : (\n              <PrivateMessageModal noMessagesFound={true} />\n            )}\n          </Content>\n        </Layout>\n      )}\n    </Fragment>\n  );\n};\n\nMessages.propTypes = {\n  getPrivateMessages: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getPrivateMessages,\n  getPost,\n  addMessageReply\n})(Messages);\n"],"sourceRoot":""}