{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/profile/AccountSettings.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, //deleteAccount,\ngetCurrentProfile } from '../../actions/profile';\nimport LeftNav from '../leftnav/LeftNav';\nimport Account from './account/Account';\n\nconst AccountSettings = ({\n  profile: {\n    profile,\n    loading\n  },\n  createProfile,\n  getCurrentProfile,\n  deleteAccount,\n  history\n}) => {\n  const _useState = useState({\n    username: '',\n    location: '',\n    role: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  useEffect(() => {\n    getCurrentProfile();\n    setFormData({});\n  }, [loading, getCurrentProfile]);\n  const username = formData.username,\n        location = formData.location,\n        status = formData.status;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(LeftNav, {\n    screen: \"profile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"main\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Account, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteAccount(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user-minus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), \" Delete My Account\")))));\n};\n\nAccountSettings.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired //deleteAccount: PropTypes.func.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile //deleteAccount\n\n})(withRouter(AccountSettings));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/profile/AccountSettings.js"],"names":["React","Fragment","useState","useEffect","Link","withRouter","PropTypes","connect","createProfile","getCurrentProfile","LeftNav","Account","AccountSettings","profile","loading","deleteAccount","history","username","location","role","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","formData","setFormData","status","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport {\n  createProfile,\n  //deleteAccount,\n  getCurrentProfile\n} from '../../actions/profile';\nimport LeftNav from '../leftnav/LeftNav';\nimport Account from './account/Account';\nconst AccountSettings = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  deleteAccount,\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    username: '',\n    location: '',\n    role: '',\n    skills: '',\n    githubusername: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: ''\n  });\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    setFormData({});\n  }, [loading, getCurrentProfile]);\n\n  const { username, location, status } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <div className='row'>\n        <LeftNav screen='profile' />\n        <div id='main'>\n          <Account />\n          {/*           <article>\n            <p>\n              <i className='fas fa-user' /> Edit your profile\n            </p>\n            <small>* = required field</small>\n            <form className='form' onSubmit={e => onSubmit(e)}>\n              <div className='form-group'>\n                <input\n                  type='text'\n                  placeholder='username'\n                  name='username'\n                  value={username}\n                  onChange={e => onChange(e)}\n                />\n              </div>\n              <div className='form-group'>\n                <input\n                  type='text'\n                  placeholder='Location'\n                  name='location'\n                  value={location}\n                  onChange={e => onChange(e)}\n                />\n                <small className='form-text'>\n                  City & state suggested (eg. Boston, MA)\n                </small>\n              </div>\n              <input\n                type='submit'\n                value='Save'\n                className='btn btn-primary my-1'\n              />\n            </form>\n          </article> */}\n\n          <div className='my-2'>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i className='fas fa-user-minus' /> Delete My Account\n            </button>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nAccountSettings.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  //deleteAccount: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile,\n  //deleteAccount\n})(withRouter(AccountSettings));\n"]},"metadata":{},"sourceType":"module"}