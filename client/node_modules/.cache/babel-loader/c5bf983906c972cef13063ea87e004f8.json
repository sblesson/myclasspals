{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/devconnector_2.0/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/devconnector_2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/devconnector_2.0/client/src/components/profile-forms/AddEducation.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addReminder } from '../../actions/profile';\n\nconst AddReminder = ({\n  addReminder,\n  history\n}) => {\n  const _useState = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        toDateDisabled = _useState4[0],\n        toggleDisabled = _useState4[1];\n\n  const school = formData.school,\n        degree = formData.degree,\n        fieldofstudy = formData.fieldofstudy,\n        from = formData.from,\n        to = formData.to,\n        current = formData.current,\n        description = formData.description;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Add Reminder\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-code-branch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \" Add any school or bootcamp that you have attended\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"* = required field\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => {\n      e.preventDefault();\n      addReminder(formData, history);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"* Remind me...\",\n    name: \"reminderName\",\n    value: reminderName,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"When\"), React.createElement(\"input\", {\n    type: \"date\",\n    name: \"reminderDate\",\n    value: reminderDate,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"description\",\n    cols: \"30\",\n    rows: \"5\",\n    placeholder: \"Program Description\",\n    value: description,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Go Back\")));\n};\n\nAddReminder.propTypes = {\n  addReminder: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addReminder\n})(withRouter(AddReminder));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/devconnector_2.0/client/src/components/profile-forms/AddEducation.js"],"names":["React","Fragment","useState","Link","withRouter","PropTypes","connect","addReminder","AddReminder","history","school","degree","fieldofstudy","from","to","current","description","formData","setFormData","toDateDisabled","toggleDisabled","onChange","e","target","name","value","preventDefault","reminderName","reminderDate","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addReminder } from '../../actions/profile';\n\nconst AddReminder = ({ addReminder, history }) => {\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: ''\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description\n  } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add Reminder</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch' /> Add any school or bootcamp that you\n        have attended\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={e => {\n          e.preventDefault();\n          addReminder(formData, history);\n        }}\n      >\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Remind me...'\n            name='reminderName'\n            value={reminderName}\n            onChange={e => onChange(e)}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <h4>When</h4>\n          <input\n            type='date'\n            name='reminderDate'\n            value={reminderDate}\n            onChange={e => onChange(e)}\n          />\n        </div>\n\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Program Description'\n            value={description}\n            onChange={e => onChange(e)}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddReminder.propTypes = {\n  addReminder: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addReminder })(withRouter(AddReminder));\n"]},"metadata":{},"sourceType":"module"}