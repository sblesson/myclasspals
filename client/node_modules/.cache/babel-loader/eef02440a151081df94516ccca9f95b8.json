{"ast":null,"code":"var _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/common/ModalManager.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal } from 'semantic-ui-react';\nimport { closeModal } from '../actions/../a/moda';\nexport class ModalManager extends Component {\n  render() {\n    const modalConfiguration = this.props.modalConfiguration;\n    const defaultProps = {\n      defaultOpen: true,\n      closeIcon: true,\n      onClose: this.props.closeModal\n    };\n    let renderedComponent;\n\n    if (modalConfiguration) {\n      const _modalConfiguration$m = modalConfiguration.modalProps,\n            modalProps = _modalConfiguration$m === void 0 ? {} : _modalConfiguration$m;\n      renderedComponent = React.createElement(Modal, Object.assign({}, Object.assign({}, modalProps, defaultProps), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, renderedComponent);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    modalConfiguration: state.modals\n  };\n}\n\nexport default connect(mapStateToProps, {\n  closeModal\n})(ModalManager);","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/common/ModalManager.js"],"names":["React","Component","connect","Modal","closeModal","ModalManager","render","modalConfiguration","props","defaultProps","defaultOpen","closeIcon","onClose","renderedComponent","modalProps","Object","assign","mapStateToProps","state","modals"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,mBAAtB;AAEA,SAASC,UAAT,QAA2B,sBAA3B;AAEA,OAAO,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAC1CK,EAAAA,MAAM,GAAG;AAAA,UACCC,kBADD,GACwB,KAAKC,KAD7B,CACCD,kBADD;AAGP,UAAME,YAAY,GAAG;AACnBC,MAAAA,WAAW,EAAE,IADM;AAEnBC,MAAAA,SAAS,EAAE,IAFQ;AAGnBC,MAAAA,OAAO,EAAE,KAAKJ,KAAL,CAAWJ;AAHD,KAArB;AAMA,QAAIS,iBAAJ;;AAEA,QAAIN,kBAAJ,EAAwB;AAAA,oCACMA,kBADN,CACdO,UADc;AAAA,YACdA,UADc,sCACD,EADC;AAEtBD,MAAAA,iBAAiB,GACf,oBAAC,KAAD,oBAAWE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,UAAlB,EAA8BL,YAA9B,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAGD;;AAED,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOI,iBAAP,CAAP;AACD;;AApByC;;AAuB5C,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AAAEX,IAAAA,kBAAkB,EAAEW,KAAK,CAACC;AAA5B,GAAP;AACD;;AAED,eAAejB,OAAO,CAACe,eAAD,EAAkB;AAAEb,EAAAA;AAAF,CAAlB,CAAP,CAAyCC,YAAzC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal } from 'semantic-ui-react';\n\nimport { closeModal } from '../actions/../a/moda';\n\nexport class ModalManager extends Component {\n  render() {\n    const { modalConfiguration } = this.props;\n\n    const defaultProps = {\n      defaultOpen: true,\n      closeIcon: true,\n      onClose: this.props.closeModal\n    };\n\n    let renderedComponent;\n\n    if (modalConfiguration) {\n      const { modalProps = {} } = modalConfiguration;\n      renderedComponent = (\n        <Modal {...Object.assign({}, modalProps, defaultProps)} />\n      );\n    }\n\n    return <span>{renderedComponent}</span>;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { modalConfiguration: state.modals };\n}\n\nexport default connect(mapStateToProps, { closeModal })(ModalManager);\n"]},"metadata":{},"sourceType":"module"}