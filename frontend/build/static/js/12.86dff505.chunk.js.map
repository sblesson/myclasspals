{"version":3,"sources":["actions/post.js","../node_modules/@ant-design/icons-svg/es/asn/StarOutlined.js","../node_modules/@ant-design/icons/es/icons/StarOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/FormOutlined.js","../node_modules/@ant-design/icons/es/icons/FormOutlined.js","components/common/autocompleteusersearch/AutoCompleteUserSearch.js","components/messages/modal/PrivateMessageModal.js","../auto-complete/index.jsx","../node_modules/@ant-design/icons-svg/es/asn/LeftCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/LeftCircleOutlined.js","components/profile/ProfileAbout.js","components/profile/Profile.js","actions/profile.js"],"names":["addPost","formData","callback","dispatch","a","config","headers","axios","post","res","type","ADD_POST","payload","data","setAlert","catchHandler","searchPost","requestObj","cancelToken","CancelToken","c","cancel","SEARCH_POST","isCancel","getPrivateMessages","cancelTokenSrc","source","token","GET_PRIVATE_MESSAGES","sendPrivateMessage","SEND_PRIVATE_MESSAGE","getPost","id","get","GET_POST","addMessageReply","postId","ADD_MESSAGE_REPLY","comments","addComment","ADD_COMMENT","addCommentToSinglePost","ADD_COMMENT_SINGLE_POST","deletePost","delete","DELETE_POST","deleteMessage","deleteComment","commentId","isSinglePost","REMOVE_COMMENT_SINGLE_POST","REMOVE_COMMENT","StarOutlined","props","ref","React","createElement","AntdIcon","Object","assign","icon","StarOutlinedSvg","displayName","forwardRef","FormOutlined","FormOutlinedSvg","connect","state","auth","searchUser","clearAutoCompleteUserSearchResult","onChangeUserSelect","console","log","Option","Select","useEffect","children","searchUserResult","length","map","item","index","key","value","email","style","fontWeigth","width","placeholder","onSelect","selectedSearchTerm","onSearch","searchTerm","_","debounce","debounced","PrivateMessageModal","memo","userId","toAddress","noMessagesFound","history","useState","componentSize","selectedEndUser","setSelectedEndUser","visible","setModalVisibility","headerTitle","showModal","hideModal","formItemLayout","labelCol","xs","span","sm","wrapperCol","MessageForm","initialValues","endUserId","subject","message","isPrivate","onSubmit","values","actions","response","_id","push","validator","render","flex","padding","className","layout","size","name","label","event","required","TextArea","cols","rows","displayInboxCompose","as","onClick","displayMessageButton","fontSize","displayCompose","status","subTitle","extra","title","centered","onOk","onCancel","destroyOnClose","cancelButtonProps","display","footer","prevProps","nextProps","mapDispatchToProps","currentGroup","group","withRouter","InternalSelect","isSelectOptionOrSelectOptGroup","child","RefAutoComplete","customizePrefixCls","dataSource","childNodes","toArray","selectRef","customizeInput","getInputElement","optionChildren","optionValue","Error","warning","prefixCls","getPrefixCls","omit","classNames","mode","LeftCircleOutlined","LeftCircleOutlinedSvg","ProfileAbout","profile","userGroup","publicGroup","setPublicGroups","privateGroup","myPublicGroup","myPrivateGroup","privacy","getGroup","publicGroupItems","groupName","privateGroupItems","tooltip","getProfileById","userResp","GET_PROFILE","PROFILE_ERROR","loading","match","params","to","marginLeft","marginTop","cursor"],"mappings":"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","file":"static/js/12.86dff505.chunk.js","sourcesContent":["import axios from 'axios';\nimport { setAlert, catchHandler } from './alert';\nimport {\n  GET_POST_CATEGORIES,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n  ADD_COMMENT_SINGLE_POST,\n  REMOVE_COMMENT_SINGLE_POST,\n  REMOVE_COMMENT_ERROR,\n  SEND_PRIVATE_MESSAGE,\n  SEARCH_POST,\n  GET_PRIVATE_MESSAGES,\n  GET_POST_CATEGORIES_ERROR,\n  ADD_MESSAGE_REPLY,\n} from './types';\nimport { CancelToken } from '../utils/axios';\n\n// Get posts\nexport const getPostCategories = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: GET_POST_CATEGORIES,\n      payload: { screen: 'dash' },\n    });\n  } catch (err) {\n    catchHandler(err, GET_POST_CATEGORIES_ERROR);\n  }\n};\n\n// Add post\nexport const addPost = (formData, callback) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/post/createpost', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Post created', 'success'));\n  } catch (err) {\n    catchHandler(err, 'ADD_POST_ERROR');\n  }\n  callback();\n};\n\n// Add post\nexport const addEvent = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/post/createpost', formData, config);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Post created', 'success'));\n  } catch (err) {\n    catchHandler(err, 'ADD_POST_ERROR');\n  }\n};\n\n// Search post by groupId\nexport const searchPost = (requestObj, callback) => async (dispatch) => {\n  let cancel;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/post/searchpost', requestObj, config, {\n      cancelToken: new axios.CancelToken((c) => (cancel = c)),\n    });\n    dispatch({\n      type: SEARCH_POST,\n      payload: res.data,\n    });\n    callback(res.data.post, cancel);\n  } catch (err) {\n    if (axios.isCancel(err)) return;\n    catchHandler(err, 'SEARCH_POST_ERROR');\n  }\n};\n\n// Search post by groupId\nexport const getPrivateMessages = (formData, callback) => async (dispatch) => {\n  let cancelTokenSrc = axios.CancelToken.source();\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post('/post/searchpost', formData, config, {\n      cancelToken: cancelTokenSrc.token,\n    });\n    dispatch({\n      type: GET_PRIVATE_MESSAGES,\n      payload: res.data.post,\n    });\n  } catch (err) {\n    catchHandler(err, 'CREATE_PRIVATE_POST_ERROR');\n  }\n  callback(cancelTokenSrc);\n};\n// Add post\nexport const sendPrivateMessage = (formData, callback) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post('/post/createpost', formData, config);\n\n    dispatch({\n      type: SEND_PRIVATE_MESSAGE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('New Message Created', 'success'));\n    callback(res.data);\n  } catch (err) {\n    catchHandler(err, 'CREATE_POST_ERROR');\n  }\n};\n\n// Search post by postId\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/post/getpost?id=${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data.post,\n    });\n  } catch (err) {\n    catchHandler(err, 'GET_POST_ERROR');\n  }\n};\n\n// Add comment\nexport const addMessageReply = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      `/post/${postId}/addcomment`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_MESSAGE_REPLY,\n      payload: { postId, comments: res.data.post.comments },\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    catchHandler(err, 'ADD_MESSAGE_REPLY_ERROR');\n  }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      `/post/${postId}/addcomment`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: { postId, comments: res.data.post.comments },\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    catchHandler(err, 'ADD_COMMENT_ERROR');\n  }\n};\n\n// Add comment\nexport const addCommentToSinglePost = (postId, formData) => async (\n  dispatch\n) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      `/post/${postId}/addcomment`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT_SINGLE_POST,\n      payload: { postId, comments: res.data.post.comments },\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    catchHandler(err, 'ADD_COMMENT_SINGLE_POST_ERROR');\n  }\n};\n// Delete post\nexport const deletePost = (postId) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/post/deletepost/${postId}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: postId,\n    });\n  } catch (err) {\n    catchHandler(err, 'DELETE_POST_ERROR');\n  }\n};\n\n// Delete post\nexport const deleteMessage = (postId, callback) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/post/deletepost/${postId}`);\n    dispatch({\n      type: 'DELETE_MESSAGE',\n      payload: postId,\n    });\n  } catch (err) {\n    catchHandler(err, 'DELETE_POST_ERROR');\n  }\n  callback();\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId, isSinglePost) => async (\n  dispatch\n) => {\n  try {\n    const res = await axios.delete(`/post/deletepost/${commentId}`);\n    if (isSinglePost) {\n      dispatch({\n        type: REMOVE_COMMENT_SINGLE_POST,\n        payload: { postId, commentId, comments: res.data },\n      });\n    } else {\n      dispatch({\n        type: REMOVE_COMMENT,\n        payload: { postId, commentId, comments: res.data },\n      });\n    }\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    catchHandler(err, 'DELETE_POST_ERROR');\n  }\n};\n","// This icon file is generated automatically.\n// tslint:disable\nvar StarOutlined = { \"name\": \"star\", \"theme\": \"outlined\", \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M908.1 353.1l-253.9-36.9L540.7 86.1c-3.1-6.3-8.2-11.4-14.5-14.5-15.8-7.8-35-1.3-42.9 14.5L369.8 316.2l-253.9 36.9c-7 1-13.4 4.3-18.3 9.3a32.05 32.05 0 00.6 45.3l183.7 179.1-43.4 252.9a31.95 31.95 0 0046.4 33.7L512 754l227.1 119.4c6.2 3.3 13.4 4.4 20.3 3.2 17.4-3 29.1-19.5 26.1-36.9l-43.4-252.9 183.7-179.1c5-4.9 8.3-11.3 9.3-18.3 2.7-17.5-9.5-33.7-27-36.3zM664.8 561.6l36.1 210.3L512 672.7 323.1 772l36.1-210.3-152.8-149L417.6 382 512 190.7 606.4 382l211.2 30.7-152.8 148.9z\" } }] } };\nexport default StarOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport React from 'react';\nimport StarOutlinedSvg from \"@ant-design/icons-svg/es/asn/StarOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar StarOutlined = function StarOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: StarOutlinedSvg\n  }));\n};\n\nStarOutlined.displayName = 'StarOutlined';\nexport default React.forwardRef(StarOutlined);","// This icon file is generated automatically.\n// tslint:disable\nvar FormOutlined = { \"name\": \"form\", \"theme\": \"outlined\", \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M904 512h-56c-4.4 0-8 3.6-8 8v320H184V184h320c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V520c0-4.4-3.6-8-8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M355.9 534.9L354 653.8c-.1 8.9 7.1 16.2 16 16.2h.4l118-2.9c2-.1 4-.9 5.4-2.3l415.9-415c3.1-3.1 3.1-8.2 0-11.3L785.4 114.3c-1.6-1.6-3.6-2.3-5.7-2.3s-4.1.8-5.7 2.3l-415.8 415a8.3 8.3 0 00-2.3 5.6zm63.5 23.6L779.7 199l45.2 45.1-360.5 359.7-45.7 1.1.7-46.4z\" } }] } };\nexport default FormOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport React from 'react';\nimport FormOutlinedSvg from \"@ant-design/icons-svg/es/asn/FormOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar FormOutlined = function FormOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: FormOutlinedSvg\n  }));\n};\n\nFormOutlined.displayName = 'FormOutlined';\nexport default React.forwardRef(FormOutlined);","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { AutoComplete, Select } from 'antd';\nimport _ from 'lodash';\n\nimport {\n  searchUser,\n  clearAutoCompleteUserSearchResult,\n} from '../../../actions/auth';\n\nconst AutoCompleteUserSearch = ({\n  searchUser,\n  clearAutoCompleteUserSearchResult,\n  auth,\n  onChangeUserSelect,\n}) => {\n  console.log('inside Message AutoCompleteUserSearch');\n\n  const { Option } = Select;\n\n  useEffect(() => {\n    //clearAutoCompleteUserSearchResult();\n  }, []);\n  const handleUserSearch = (searchTerm) => {\n    if (searchTerm) {\n      var debounced = _.debounce(() => {\n        searchUser(searchTerm);\n      }, 1000);\n      debounced();\n    }\n  };\n\n  const onUserSelect = (selectedSearchTerm) => {\n    if (selectedSearchTerm) {\n      console.log(selectedSearchTerm);\n\n      onChangeUserSelect(selectedSearchTerm);\n    }\n  };\n\n  const children =\n    auth &&\n    auth.searchUserResult &&\n    auth.searchUserResult.length > 0 &&\n    auth.searchUserResult.map((item, index) => {\n      return (\n        <Option key={index} value={item.email}>\n          <span style={{ fontWeigth: 'bolder' }}> {item.email}</span>\n        </Option>\n      );\n    });\n\n  return (\n    <AutoComplete\n      //dropdownMatchSelectWidth={252}\n      style={{\n        width: '100%',\n      }}\n      placeholder={'Type Name'}\n      onSelect={onUserSelect}\n      onSearch={handleUserSearch}\n    >\n      {children}\n    </AutoComplete>\n  );\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, {\n  searchUser,\n  clearAutoCompleteUserSearchResult,\n})(AutoCompleteUserSearch);\n","import React, { useState } from 'react';\nimport { Upload, Button, Modal, Result } from 'antd';\nimport { UploadOutlined, StarOutlined, FormOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nimport { Formik, ErrorMessage } from 'formik';\n\nimport { SubmitButton, Input, Form, FormItem, FormikDebug } from 'formik-antd';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { sendPrivateMessage } from '../../../actions/post';\n//import AutoCompleteUserSeach from '../../common/autocompleteusersearch/AutoCompleteUserSeach';\nimport AutoCompleteUserSeach from '../../common/autocompleteusersearch/AutoCompleteUserSearch';\n\nimport './PrivateMessageModal.scss';\n\nconst PrivateMessageModal = React.memo(\n  ({ userId, sendPrivateMessage, toAddress, noMessagesFound, history }) => {\n    const [componentSize, setComponentSize] = useState('small');\n    const [selectedEndUser, setSelectedEndUser] = useState(\n      toAddress ? toAddress : ''\n    );\n\n    const [visible, setModalVisibility] = useState(false);\n    const [headerTitle, setHeaderTitle] = useState('Send Private Message');\n    const showModal = () => {\n      setModalVisibility(true);\n    };\n    const hideModal = () => {\n      setModalVisibility(false);\n    };\n    const toggleModal = () => {\n      setModalVisibility(!visible);\n    };\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const validateRequired = (value) => {\n      return value ? undefined : 'required';\n    };\n\n    const uploadProps = {\n      action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\n      onChange({ file, fileList }) {\n        if (file.status !== 'uploading') {\n        }\n      },\n      defaultFileList: [\n        {\n          uid: '1',\n          name: 'xxx.png',\n          status: 'done',\n          response: 'Server Error 500', // custom error message to show\n          url: 'http://www.baidu.com/xxx.png',\n        },\n        {\n          uid: '2',\n          name: 'yyy.png',\n          status: 'done',\n          url: 'http://www.baidu.com/yyy.png',\n        },\n        {\n          uid: '3',\n          name: 'zzz.png',\n          status: 'error',\n          response: 'Server Error 500', // custom error message to show\n          url: 'http://www.baidu.com/zzz.png',\n        },\n      ],\n      showUploadList: {\n        showDownloadIcon: true,\n        downloadIcon: 'download ',\n        showRemoveIcon: true,\n        removeIcon: (\n          <StarOutlined\n            onClick={(e) => console.log(e, 'custom removeIcon event')}\n          />\n        ),\n      },\n    };\n\n    const handleSelectedUsers = (selectedUsers) => {\n      setSelectedEndUser(selectedUsers);\n    };\n\n    const MessageForm = (\n      <Formik\n        initialValues={{\n          userId: userId,\n          endUserId: selectedEndUser,\n          subject: '',\n          message: '',\n          isPrivate: true,\n        }}\n        onSubmit={(values, actions) => {\n          values.endUserId = selectedEndUser;\n          sendPrivateMessage(values, (response) => {\n            if (response && response.post && response.post._id) {\n              history.push(`/messages/${response.post._id}`);\n            }\n          });\n          setModalVisibility(false);\n        }}\n        validator={() => ({})}\n        //validate={values => {}}\n        render={() => (\n          <div style={{ flex: 1, padding: 10 }}>\n            <Form\n              className='form-wrapper'\n              {...formItemLayout}\n              layout='vertical'\n              initialValues={{\n                size: componentSize,\n              }}\n            >\n              {toAddress ? (\n                ''\n              ) : (\n                <FormItem\n                  name='endUserId'\n                  label='Select your friends'\n                  /*  required={true}\n                  validate={validateRequired} */\n                >\n                  <AutoCompleteUserSeach\n                    onChangeUserSelect={(event, value) =>\n                      handleSelectedUsers(event, value)\n                    }\n                  />\n                </FormItem>\n              )}\n              <FormItem\n                name='subject'\n                label='Subject'\n                /*      required={true}\n                validate={validateRequired} */\n              >\n                <Input name='subject' placeholder='Subject' />\n              </FormItem>\n              <FormItem name='message' label='Your Message' required={false}>\n                <Input.TextArea\n                  className='post-form-text-input post-form-textarea'\n                  name='message'\n                  cols='30'\n                  rows='5'\n                  placeholder='Enter your message ...'\n                  required={false}\n                />\n              </FormItem>\n              {/*       <Upload {...uploadProps}>\n              <Button>\n                <UploadOutlined /> Upload\n              </Button>\n            </Upload>             <pre style={{ flex: 1 }}>\n              <FormikDebug />\n            </pre>*/}\n              <SubmitButton className='ant-btn btn-primary'> Send</SubmitButton>\n            </Form>\n          </div>\n        )}\n      />\n    );\n    const displayInboxCompose = (\n      <div className='private-message-modal'>\n        <div as='h4' className='message-head-title'>\n          Inbox\n        </div>\n        <div\n          as='h4'\n          className='message-head-title message-head-link'\n          onClick={showModal}\n        >\n          <FormOutlined className='message-head-icon' />\n          Compose\n        </div>\n      </div>\n    );\n\n    const displayMessageButton = (\n      <div className='private-message-modal' onClick={showModal}>\n        <Button\n          type='primary'\n          className='btn-primary'\n          style={{ padding: '4px 10px', fontSize: '12px' }}\n        >\n          Message\n        </Button>\n      </div>\n    );\n\n    const displayCompose = (\n      <div className='private-message-modal'>\n        <Result\n          status='warning'\n          subTitle='No messages found!'\n          extra={\n            <div\n              as='h4'\n              className='message-head-title message-head-link'\n              onClick={showModal}\n            >\n              <FormOutlined className='message-head-icon' />\n              Compose\n            </div>\n          }\n        />\n      </div>\n    );\n\n    return (\n      <div className='message-body__private-message-modal'>\n        {noMessagesFound && displayCompose}\n        {!noMessagesFound && !toAddress && displayInboxCompose}\n        {toAddress && displayMessageButton}\n        <Modal\n          title={headerTitle}\n          centered\n          visible={visible}\n          onOk={hideModal}\n          onCancel={hideModal} //pass close logic here\n          destroyOnClose={true}\n          cancelButtonProps={{ style: { display: 'none' } }}\n          footer={null}\n        >\n          {MessageForm}\n        </Modal>\n      </div>\n    );\n  },\n  (prevProps, nextProps) => {\n    if (prevProps.userId && prevProps.userId !== nextProps.userId) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n);\n\nPrivateMessageModal.propTypes = {\n  sendPrivateMessage: PropTypes.func.isRequired,\n};\nconst mapDispatchToProps = (state) => ({\n  hideModal: state.hideModal,\n  currentGroup: state.group.currentGroup,\n});\n\nexport default connect(mapDispatchToProps, {\n  sendPrivateMessage,\n  mapDispatchToProps,\n})(withRouter(PrivateMessageModal));\n","/**\n * TODO: 4.0\n * - remove `dataSource`\n * - `size` not work with customizeInput\n * - customizeInput not feedback `ENTER` key since accessibility enhancement\n */\nimport * as React from 'react';\nimport toArray from 'rc-util/lib/Children/toArray';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport Select from '../select';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nconst { Option } = Select;\nconst InternalSelect = Select;\nfunction isSelectOptionOrSelectOptGroup(child) {\n    return child && child.type && (child.type.isSelectOption || child.type.isSelectOptGroup);\n}\nconst AutoComplete = (props, ref) => {\n    const { prefixCls: customizePrefixCls, className, children, dataSource } = props;\n    const childNodes = toArray(children);\n    const selectRef = React.useRef();\n    React.useImperativeHandle(ref, () => selectRef.current);\n    // ============================= Input =============================\n    let customizeInput;\n    if (childNodes.length === 1 &&\n        React.isValidElement(childNodes[0]) &&\n        !isSelectOptionOrSelectOptGroup(childNodes[0])) {\n        customizeInput = childNodes[0];\n    }\n    const getInputElement = () => customizeInput;\n    // ============================ Options ============================\n    let optionChildren;\n    // [Legacy] convert `children` or `dataSource` into option children\n    if (childNodes.length && isSelectOptionOrSelectOptGroup(childNodes[0])) {\n        optionChildren = children;\n    }\n    else {\n        optionChildren = dataSource\n            ? dataSource.map(item => {\n                if (React.isValidElement(item)) {\n                    return item;\n                }\n                switch (typeof item) {\n                    case 'string':\n                        return (<Option key={item} value={item}>\n                  {item}\n                </Option>);\n                    case 'object': {\n                        const { value: optionValue } = item;\n                        return (<Option key={optionValue} value={optionValue}>\n                  {item.text}\n                </Option>);\n                    }\n                    default:\n                        throw new Error('AutoComplete[dataSource] only supports type `string[] | Object[]`.');\n                }\n            })\n            : [];\n    }\n    // ============================ Warning ============================\n    React.useEffect(() => {\n        warning(!('dataSource' in props), 'AutoComplete', '`dataSource` is deprecated, please use `options` instead.');\n        warning(!customizeInput || !('size' in props), 'AutoComplete', 'You need to control style self instead of setting `size` when using customize input.');\n    }, []);\n    return (<ConfigConsumer>\n      {({ getPrefixCls }) => {\n        const prefixCls = getPrefixCls('select', customizePrefixCls);\n        return (<InternalSelect ref={selectRef} {...omit(props, ['dataSource'])} prefixCls={prefixCls} className={classNames(className, `${prefixCls}-auto-complete`)} mode={Select.SECRET_COMBOBOX_MODE_DO_NOT_USE} getInputElement={getInputElement}>\n            {optionChildren}\n          </InternalSelect>);\n    }}\n    </ConfigConsumer>);\n};\nconst RefAutoComplete = React.forwardRef(AutoComplete);\nRefAutoComplete.Option = Option;\nexport default RefAutoComplete;\n","// This icon file is generated automatically.\n// tslint:disable\nvar LeftCircleOutlined = { \"name\": \"left-circle\", \"theme\": \"outlined\", \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M603.3 327.5l-246 178a7.95 7.95 0 000 12.9l246 178c5.3 3.8 12.7 0 12.7-6.5V643c0-10.2-4.9-19.9-13.2-25.9L457.4 512l145.4-105.2c8.3-6 13.2-15.6 13.2-25.9V334c0-6.5-7.4-10.3-12.7-6.5z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] } };\nexport default LeftCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport React from 'react';\nimport LeftCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/LeftCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LeftCircleOutlined = function LeftCircleOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: LeftCircleOutlinedSvg\n  }));\n};\n\nLeftCircleOutlined.displayName = 'LeftCircleOutlined';\nexport default React.forwardRef(LeftCircleOutlined);","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Typography } from 'antd';\nimport _ from 'lodash';\nimport Ellipsis from 'ant-design-pro/lib/Ellipsis';\nimport PrivateMessageModal from '../messages/modal/PrivateMessageModal';\nimport './ProfileAbout.scss';\nconst ProfileAbout = ({ profile: { email, userGroup, name } }) => {\n  const [publicGroup, setPublicGroups] = useState([]);\n  const [privateGroup, setPrivateGroups] = useState([]);\n\n  const getGroup = () => {\n    let myPublicGroup = [];\n    let myPrivateGroup = [];\n    userGroup.map((group, index) => {\n      if (group.privacy === 'PRIVATE') {\n        myPrivateGroup.push(group);\n      } else {\n        myPublicGroup.push(group);\n      }\n    });\n\n    setPublicGroups(myPublicGroup);\n  };\n  useEffect(() => {\n    getGroup();\n    return () => {\n      //cleanup\n    };\n  }, [userGroup]);\n  const publicGroupItems = publicGroup.map((item) => (\n    <div key={`public-${item.id}`}>{item.groupName}</div>\n  ));\n  const privateGroupItems = privateGroup.map((item) => (\n    <div key={`private-${item.id}`}>{item.groupName}</div>\n  ));\n  return (\n    <Card\n      className='profile-card'\n      title={\n        <Ellipsis length={80} tooltip>\n          {email ? email : ''}\n        </Ellipsis>\n      }\n      extra={<PrivateMessageModal toAddress={email} />}\n    >\n      {privateGroup && privateGroup.length > 0 && (\n        <div>\n          <span>\n            <i className='fa fa-lock privacy-icon' title='private group'></i>\n            Private Groups\n          </span>\n\n          <div className='groups-wrapper'>{privateGroupItems}</div>\n        </div>\n      )}\n      {publicGroup && publicGroup.length > 0 && (\n        <div>\n          <span>\n            <i className='fa fa-globe privacy-icon' title='private group'></i>\n            Public Groups\n          </span>\n          <div className='groups-wrapper'>{publicGroupItems}</div>\n        </div>\n      )}\n    </Card>\n  );\n};\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileAbout;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../common/spinner/Spinner';\nimport ProfileAbout from './ProfileAbout';\nimport { getProfileById } from '../../actions/profile';\nimport { LeftCircleOutlined } from '@ant-design/icons';\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match,\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.userId);\n  }, [getProfileById, match.params.userId]);\n\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Fragment>\n          <Link\n            to={`/dashboard/${match.params.id}`}\n            style={{\n              fontSize: '1rem',\n              marginLeft: '1rem',\n              marginTop: '1rem',\n              cursor: 'pointer',\n              display: 'inline-block',\n            }}\n          >\n            <LeftCircleOutlined />\n          </Link>\n          'No User Details Found'\n        </Fragment>\n      ) : (\n        <Fragment>\n          <Link\n            to={`/dashboard/${match.params.id}`}\n            style={{\n              fontSize: '1rem',\n              marginLeft: '1rem',\n              marginTop: '1rem',\n              cursor: 'pointer',\n              display: 'inline-block',\n            }}\n          >\n            <LeftCircleOutlined />\n          </Link>\n          <ProfileAbout profile={profile} />\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","import axios from 'axios';\nimport { setAlert, catchHandler } from './alert';\n\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n} from './types';\n\n// Get profile by ID\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const userResp = await axios.get('/user/getuserdetails?user=' + userId);\n    dispatch({\n      type: GET_PROFILE,\n      payload: userResp.data,\n    });\n  } catch (err) {\n    catchHandler(err, PROFILE_ERROR);\n    dispatch({\n      type: PROFILE_ERROR,\n    });\n  }\n};\n\n// Create or update profile\nexport const updateProfile = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.put('/user/updateuser', formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    /*    if (!edit) {\n      history.push('/dashboard');\n    } */\n  } catch (err) {\n    catchHandler(err, 'UPDATE_PROFILE');\n  }\n};\n\n// Delete account & profile\nexport const deleteAccount = () => async (dispatch) => {\n  try {\n    await axios.delete('/user/deleteUser');\n\n    dispatch({ type: CLEAR_PROFILE });\n    dispatch({ type: ACCOUNT_DELETED });\n\n    dispatch(setAlert('Your account has been permanantly deleted'));\n  } catch (err) {\n    catchHandler(err, 'PROFILE_ERROR');\n  }\n};\n"],"sourceRoot":""}