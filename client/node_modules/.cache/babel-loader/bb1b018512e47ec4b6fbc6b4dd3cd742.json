{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/profile/CreateProfile.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst CreateProfile = ({\n  createProfile,\n  getCurrentProfile,\n  profile: {\n    profile,\n    loading\n  },\n  history\n}) => {\n  const _useState = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    interests: '',\n    username: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n    child: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        displaySocialInputs = _useState4[0],\n        toggleSocialInputs = _useState4[1];\n\n  const company = formData.company,\n        website = formData.website,\n        location = formData.location,\n        status = formData.status,\n        interests = formData.interests,\n        username = formData.username;\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n\n  useEffect(() => {\n    getCurrentProfile(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentProfile]);\n  return loading && profile === null ? React.createElement(Redirect, {\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Create Your Profile\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), \" Let's get some information to make your profile stand out\"), React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"* = required field\"), React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: e => onSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Github Username\",\n    name: \"username\",\n    value: username,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    className: \"form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"If you want your latest repos and a Github link, include your username\")), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    placeholder: \"A short bio of yourself\",\n    name: \"bio\",\n    value: bio,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"small\", {\n    className: \"form-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Tell us a little about yourself\")), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Link, {\n    className: \"btn btn-light my-1\",\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Save\")));\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile\n})(withRouter(CreateProfile));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/profile/CreateProfile.js"],"names":["React","useEffect","useState","Fragment","Link","withRouter","Redirect","PropTypes","connect","createProfile","getCurrentProfile","CreateProfile","profile","loading","history","company","website","location","status","interests","username","bio","twitter","facebook","linkedin","youtube","instagram","child","formData","setFormData","displaySocialInputs","toggleSocialInputs","onChange","e","target","name","value","onSubmit","preventDefault","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst CreateProfile = ({\n  createProfile,\n  getCurrentProfile,\n  profile: { profile, loading },\n  history\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    status: '',\n    interests: '',\n    username: '',\n    bio: '',\n    twitter: '',\n    facebook: '',\n    linkedin: '',\n    youtube: '',\n    instagram: '',\n    child: ''\n  });\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n  const { company, website, location, status, interests, username } = formData;\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n  useEffect(() => {\n    getCurrentProfile();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentProfile]);\n  return loading && profile === null ? (\n    <Redirect to='/dashboard' />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={e => onSubmit(e)}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='username'\n            value={username}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={e => onChange(e)}\n          />\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Save\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(CreateProfile)\n);\n"]},"metadata":{},"sourceType":"module"}