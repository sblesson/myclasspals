{"version":3,"sources":["landing/PendingRegistration.js"],"names":["connect","state","auth","isLoading","school","setAlert","getuserbyregistrationid","register","_ref","history","match","Title","Typography","Text","_useState","useState","_useState2","Object","_Users_sapnablesson_production_classvilla_frontend_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","regId","setRegId","useEffect","unmounted","params","id","invalidRegistrationToken","window","location","pathname","_useState3","name","password","password2","_useState4","formData","_useState5","_useState6","componentSize","_useState7","_useState8","isLoadingSignUpBtn","setIsLoadingSignUpBtn","formItemLayout","labelCol","xs","span","sm","md","wrapperCol","validateRequired","value","undefined","yourInfo","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","formik__WEBPACK_IMPORTED_MODULE_8__","initialValues","email","onSubmit","values","user","cancelTokenSrc","cancel","authRedirect","validator","children","style","flex","padding","formik_antd__WEBPACK_IMPORTED_MODULE_4__","assign","className","layout","size","formik_antd__WEBPACK_IMPORTED_MODULE_5__","label","required","validate","formik_antd__WEBPACK_IMPORTED_MODULE_6__","placeholder","type","formik_antd__WEBPACK_IMPORTED_MODULE_7__","block","loading","react__WEBPACK_IMPORTED_MODULE_1__","marginTop","_Services__WEBPACK_IMPORTED_MODULE_10__","background","level","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","to"],"mappings":"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","file":"static/js/17.1ea48522.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { SubmitButton, Input, Form, FormItem, FormikDebug } from 'formik-antd';\nimport { Formik, ErrorMessage } from 'formik';\nimport { Typography } from 'antd';\nimport Services from './Services';\nimport { setAlert } from '../actions/alert';\nimport { getuserbyregistrationid, register } from '../actions/auth';\nimport { authRedirect } from '../utils/authRedirect';\n\nimport PropTypes from 'prop-types';\n\nconst PendingRegistration = ({\n  setAlert,\n  getuserbyregistrationid,\n  register,\n  auth,\n  history,\n  match\n}) => {\n  const { Title, Text } = Typography;\n  const [regId, setRegId] = useState('');\n  useEffect(() => {\n    let unmounted = false;\n    if (match.params && !unmounted) {\n      setRegId(match.params.id);\n      getuserbyregistrationid(match.params.id);\n    }\n    return () => {\n      unmounted = true;\n    };\n  }, [getuserbyregistrationid, match]);\n\n  useEffect(() => {\n    if (auth.invalidRegistrationToken) {\n      //todo change window.location logic later\n      window.location.pathname = '/register';\n    }\n  }, [auth.invalidRegistrationToken]);\n\n  const [formData, setFormData] = useState({\n    name: '',\n    password: '',\n    password2: ''\n  });\n\n  const { name, password, password2 } = formData;\n  const [componentSize, setComponentSize] = useState('small');\n  const [isLoadingSignUpBtn, setIsLoadingSignUpBtn] = useState(false);\n\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n      md: { span: 20 }\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n      md: { span: 20 }\n    }\n  };\n\n  const validateRequired = value => {\n    return value ? undefined : 'required';\n  };\n\n  const yourInfo = (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n      }}\n      onSubmit={values => {\n        setIsLoadingSignUpBtn(true);\n        if (values.password !== values.password2) {\n          setAlert('Passwords do not match', 'error');\n          setIsLoadingSignUpBtn(false);\n        } else {\n          if (auth && auth.user && auth.user.email) {\n            let email = auth.user.email;\n\n            if (regId) {\n              register(\n                {\n                  name: values.name,\n                  email,\n                  password: values.password,\n                  regId\n                },\n                cancelTokenSrc => {\n                  setIsLoadingSignUpBtn(false);\n                  cancelTokenSrc.cancel();\n                  authRedirect(auth, history);\n                }\n              );\n            } else {\n              register(\n                {\n                  name: values.name,\n                  email,\n                  password: values.password\n                },\n                () => {\n                  setIsLoadingSignUpBtn(false);\n                  authRedirect(auth, history);\n                }\n              );\n            }\n          }\n        }\n      }}\n      validator={() => ({})}\n      //validate={values => {}}\n      children={() => (\n        <div style={{ flex: 1, padding: 5 }}>\n          <Form\n            className='form-wrapper'\n            {...formItemLayout}\n            layout='vertical'\n            initialValues={{\n              size: componentSize\n            }}\n          >\n            <FormItem\n              name='name'\n              label='What should we call you?'\n              required={true}\n              validate={validateRequired}\n            >\n              <Input name='name' placeholder='Your name' />\n            </FormItem>\n            <FormItem\n              name='password'\n              label='Password'\n              required={true}\n              validate={validateRequired}\n            >\n              <Input name='password' type='password' placeholder='Password' />\n            </FormItem>\n            <FormItem\n              name='password2'\n              label='Confirm Password'\n              required={true}\n              validate={validateRequired}\n            >\n              <Input\n                name='password2'\n                type='password'\n                placeholder='Confirm Password'\n              />\n            </FormItem>\n            <FormItem name='submit'>\n              <SubmitButton\n                block\n                className='ant-btn btn-primary'\n                loading={isLoadingSignUpBtn}\n              >\n                {' '}\n                Register\n              </SubmitButton>{' '}\n            </FormItem>\n          </Form>\n        </div>\n      )}\n    />\n  );\n\n  return (\n    <Fragment>\n      <div className='row' style={{ marginTop: '20px' }}>\n        <Services />\n        <div className='col col-4' style={{ background: '#fff' }}>\n          <Title className='form-title-text' level={4}>\n            Create Your Account\n          </Title>\n          {yourInfo}\n          <Text className='form-info-text'>\n            Already have an account? <Link to='/login'>Sign In</Link>\n          </Text>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nPendingRegistration.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  isLoading: state.school.isLoading\n});\n\nexport default connect(mapStateToProps, {\n  setAlert,\n  getuserbyregistrationid,\n  register\n})(PendingRegistration);\n"],"sourceRoot":""}