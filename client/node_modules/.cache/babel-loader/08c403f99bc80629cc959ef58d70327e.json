{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/modal/profilemodal/ProfileModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Search, Input, Grid, Header, Segment, Label } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { Col, Row, Button, Form, FormGroup, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addSchool } from '../../../actions/profile';\nimport { getSchoolData } from '../../../actions/school';\nimport './ProfileModal.scss';\n\nconst ProfileModal = ({\n  addSchool,\n  history,\n  getSchoolData,\n  results,\n  isLoading,\n  value\n}) => {\n  const _useState = useState({\n    schoolName: '',\n    schoolCity: '',\n    schoolState: '',\n    schoolZip: '',\n    grade: '',\n    classRoom: '',\n    childName: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modal = _useState4[0],\n        setModal = _useState4[1];\n  /* \n  useEffect(() => {\n    getSchoolData();\n  }, [getSchoolData]); */\n\n\n  const resultRenderer = ({\n    schoolid,\n    schoolName,\n    city,\n    state,\n    zip\n  }) => {\n    return (\n      /*    <div class='content'>\n        <div class='title'>{schoolName}</div>\n        <div class='description'>\n          {city}, {state} {zip}\n        </div>\n      </div> */\n      React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, schoolName)\n    );\n  };\n\n  resultRenderer.propTypes = {\n    schoolid: PropTypes.string,\n    schoolName: PropTypes.string,\n    city: PropTypes.string,\n    state: PropTypes.string,\n    zip: PropTypes.strin\n  };\n\n  const toggle = () => setModal(!modal);\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const handleResultSelect = (e, {\n    result\n  }) => {\n    setFormData(_objectSpread({}, formData, {\n      ['schoolName']: result.title\n    }));\n  };\n\n  const handleSearchOnBlur = event => {\n    value = event.target && event.target.value ? event.target.value : '';\n    setTimeout(() => {\n      isLoading = false;\n\n      if (value) {\n        getSchoolData(value);\n      }\n    }, 300);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"new-post-form\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile-action-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"add-more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Add more child?\"))), React.createElement(Modal, {\n    isOpen: modal,\n    fade: false,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Connect to your child's class community\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Name of Child\",\n    name: \"childName\",\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Search, Object.assign({\n    placeholder: \"Type school name\",\n    loading: isLoading,\n    onResultSelect: handleResultSelect,\n    onBlur: _.debounce(handleSearchOnBlur, 500, {\n      leading: true\n    }),\n    results: results //value={value}\n    ,\n    resultRenderer: resultRenderer,\n    name: \"schoolName\",\n    onChange: e => onChange(e)\n  }, results, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }))))), React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"post-form-text-input\",\n    type: \"text\",\n    name: \"grade\" //value={grade}\n    ,\n    placeholder: \"* Grade\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"post-form-text-input\",\n    type: \"text\",\n    name: \"classRoom\" //value={classRoom}\n    ,\n    placeholder: \"Class Room\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  })))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      addSchool(formData, history);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Save\"))));\n};\n\nProfileModal.propTypes = {\n  addSchool: PropTypes.func.isRequired,\n  getSchoolData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    results: state.school.results,\n    isLoading: state.school.isLoading,\n    value: state.school.value\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addSchool,\n  getSchoolData\n})(withRouter(ProfileModal));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/modal/profilemodal/ProfileModal.js"],"names":["React","useState","useEffect","Link","withRouter","Search","Input","Grid","Header","Segment","Label","_","Col","Row","Button","Form","FormGroup","FormText","Modal","ModalHeader","ModalBody","ModalFooter","PropTypes","connect","addSchool","getSchoolData","ProfileModal","history","results","isLoading","value","schoolName","schoolCity","schoolState","schoolZip","grade","classRoom","childName","formData","setFormData","modal","setModal","resultRenderer","schoolid","city","state","zip","propTypes","string","strin","toggle","onChange","e","target","name","handleResultSelect","result","title","handleSearchOnBlur","event","setTimeout","debounce","leading","preventDefault","func","isRequired","mapStateToProps","console","log","school"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,MAA9B,EAAsCC,OAAtC,EAA+CC,KAA/C,QAA4D,mBAA5D;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SACEC,GADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,KAPF,EAQEC,WARF,EASEC,SATF,EAUEC,WAVF,QAWO,YAXP;AAaA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAO,qBAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AACpBF,EAAAA,SADoB;AAEpBG,EAAAA,OAFoB;AAGpBF,EAAAA,aAHoB;AAIpBG,EAAAA,OAJoB;AAKpBC,EAAAA,SALoB;AAMpBC,EAAAA;AANoB,CAAD,KAOf;AAAA,oBAC4B7B,QAAQ,CAAC;AACvC8B,IAAAA,UAAU,EAAE,EAD2B;AAEvCC,IAAAA,UAAU,EAAE,EAF2B;AAGvCC,IAAAA,WAAW,EAAE,EAH0B;AAIvCC,IAAAA,SAAS,EAAE,EAJ4B;AAKvCC,IAAAA,KAAK,EAAE,EALgC;AAMvCC,IAAAA,SAAS,EAAE,EAN4B;AAOvCC,IAAAA,SAAS,EAAE;AAP4B,GAAD,CADpC;AAAA;AAAA,QACGC,QADH;AAAA,QACaC,WADb;;AAAA,qBAWsBtC,QAAQ,CAAC,KAAD,CAX9B;AAAA;AAAA,QAWGuC,KAXH;AAAA,QAWUC,QAXV;AAYJ;;;;;;AAKA,QAAMC,cAAc,GAAG,CAAC;AAAEC,IAAAA,QAAF;AAAYZ,IAAAA,UAAZ;AAAwBa,IAAAA,IAAxB;AAA8BC,IAAAA,KAA9B;AAAqCC,IAAAA;AAArC,GAAD,KAAgD;AACrE;AACE;;;;;;AAMA,0BAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQf,UAAR;AAPF;AASD,GAVD;;AAWAW,EAAAA,cAAc,CAACK,SAAf,GAA2B;AACzBJ,IAAAA,QAAQ,EAAErB,SAAS,CAAC0B,MADK;AAExBjB,IAAAA,UAAU,EAAET,SAAS,CAAC0B,MAFE;AAGvBJ,IAAAA,IAAI,EAAEtB,SAAS,CAAC0B,MAHO;AAIvBH,IAAAA,KAAK,EAAEvB,SAAS,CAAC0B,MAJM;AAKvBF,IAAAA,GAAG,EAAExB,SAAS,CAAC2B;AALQ,GAA3B;;AAQA,QAAMC,MAAM,GAAG,MAAMT,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,QAAMW,QAAQ,GAAGC,CAAC,IAChBb,WAAW,mBAAMD,QAAN;AAAgB,KAACc,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASvB;AAA1C,KADb;;AAGA,QAAMyB,kBAAkB,GAAG,CAACH,CAAD,EAAI;AAAEI,IAAAA;AAAF,GAAJ,KAAmB;AAC5CjB,IAAAA,WAAW,mBAAMD,QAAN;AAAgB,OAAC,YAAD,GAAgBkB,MAAM,CAACC;AAAvC,OAAX;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAClC7B,IAAAA,KAAK,GAAG6B,KAAK,CAACN,MAAN,IAAgBM,KAAK,CAACN,MAAN,CAAavB,KAA7B,GAAqC6B,KAAK,CAACN,MAAN,CAAavB,KAAlD,GAA0D,EAAlE;AACA8B,IAAAA,UAAU,CAAC,MAAM;AACf/B,MAAAA,SAAS,GAAG,KAAZ;;AAEA,UAAIC,KAAJ,EAAW;AACTL,QAAAA,aAAa,CAACK,KAAD,CAAb;AACD;AACF,KANS,EAMP,GANO,CAAV;AAOD,GATD;;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAEoB,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,CADF,EAOE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEV,KAAf;AAAsB,IAAA,IAAI,EAAE,KAA5B;AAAmC,IAAA,MAAM,EAAEU,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,yCADH,CADF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,eADd;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,QAAQ,EAAEE,CAAC,IAAID,QAAQ,CAACC,CAAD,CAHzB;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,kBADd;AAEE,IAAA,OAAO,EAAEvB,SAFX;AAGE,IAAA,cAAc,EAAE0B,kBAHlB;AAIE,IAAA,MAAM,EAAE5C,CAAC,CAACkD,QAAF,CAAWH,kBAAX,EAA+B,GAA/B,EAAoC;AAC1CI,MAAAA,OAAO,EAAE;AADiC,KAApC,CAJV;AAOE,IAAA,OAAO,EAAElC,OAPX,CAQE;AARF;AASE,IAAA,cAAc,EAAEc,cATlB;AAUE,IAAA,IAAI,EAAC,YAVP;AAWE,IAAA,QAAQ,EAAEU,CAAC,IAAID,QAAQ,CAACC,CAAD;AAXzB,KAYMxB,OAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF,CADF,CATF,EA6BE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,OAHP,CAIE;AAJF;AAKE,IAAA,WAAW,EAAC,SALd;AAME,IAAA,QAAQ,EAAEwB,CAAC,IAAID,QAAQ,CAACC,CAAD,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA7BF,EAuCE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,WAHP,CAIE;AAJF;AAKE,IAAA,WAAW,EAAC,YALd;AAME,IAAA,QAAQ,EAAEA,CAAC,IAAID,QAAQ,CAACC,CAAD,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAvCF,CADF,CAJF,EAwDE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAEA,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACW,cAAF;AACAvC,MAAAA,SAAS,CAACc,QAAD,EAAWX,OAAX,CAAT;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAxDF,CAPF,CADF;AA8ED,CA7ID;;AA+IAD,YAAY,CAACqB,SAAb,GAAyB;AACvBvB,EAAAA,SAAS,EAAEF,SAAS,CAAC0C,IAAV,CAAeC,UADH;AAEvBxC,EAAAA,aAAa,EAAEH,SAAS,CAAC0C,IAAV,CAAeC;AAFP,CAAzB;;AAKA,MAAMC,eAAe,GAAGrB,KAAK,IAAI;AAC/BsB,EAAAA,OAAO,CAACC,GAAR,CAAYvB,KAAZ;AACA,SAAO;AACLjB,IAAAA,OAAO,EAAEiB,KAAK,CAACwB,MAAN,CAAazC,OADjB;AAELC,IAAAA,SAAS,EAAEgB,KAAK,CAACwB,MAAN,CAAaxC,SAFnB;AAGLC,IAAAA,KAAK,EAAEe,KAAK,CAACwB,MAAN,CAAavC;AAHf,GAAP;AAKD,CAPD;;AASA,eAAeP,OAAO,CAAC2C,eAAD,EAAkB;AAAE1C,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAlB,CAAP,CACbrB,UAAU,CAACsB,YAAD,CADG,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Search, Input, Grid, Header, Segment, Label } from 'semantic-ui-react';\nimport _ from 'lodash';\n\nimport {\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  FormText,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addSchool } from '../../../actions/profile';\nimport { getSchoolData } from '../../../actions/school';\nimport './ProfileModal.scss';\n\nconst ProfileModal = ({\n  addSchool,\n  history,\n  getSchoolData,\n  results,\n  isLoading,\n  value\n}) => {\n  const [formData, setFormData] = useState({\n    schoolName: '',\n    schoolCity: '',\n    schoolState: '',\n    schoolZip: '',\n    grade: '',\n    classRoom: '',\n    childName: ''\n  });\n\n  const [modal, setModal] = useState(false);\n  /* \n  useEffect(() => {\n    getSchoolData();\n  }, [getSchoolData]); */\n\n  const resultRenderer = ({ schoolid, schoolName, city, state, zip }) => {\n    return (\n      /*    <div class='content'>\n        <div class='title'>{schoolName}</div>\n        <div class='description'>\n          {city}, {state} {zip}\n        </div>\n      </div> */\n      <Label>{schoolName}</Label>\n    );\n  };\n  resultRenderer.propTypes = {\n    schoolid: PropTypes.string,\n     schoolName: PropTypes.string,\n      city: PropTypes.string, \n      state: PropTypes.string, \n      zip: PropTypes.strin\n  }\n\n  const toggle = () => setModal(!modal);\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const handleResultSelect = (e, { result }) => {\n    setFormData({ ...formData, ['schoolName']: result.title });\n  };\n\n  const handleSearchOnBlur = event => {\n    value = event.target && event.target.value ? event.target.value : '';\n    setTimeout(() => {\n      isLoading = false;\n\n      if (value) {\n        getSchoolData(value);\n      }\n    }, 300);\n  };\n\n  return (\n    <div>\n      <div className='new-post-form' onClick={toggle}>\n        <div className='profile-action-button'>\n          <i className='fas fa-plus-circle'></i>\n          <span className='add-more'>Add more child?</span>\n        </div>\n      </div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}>\n          {\"Connect to your child's class community\"}\n        </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup className='post-form'>\n              <Input\n                placeholder='Name of Child'\n                name='childName'\n                onChange={e => onChange(e)}\n                required\n              />\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <Grid>\n                <Grid.Column width={6}>\n                  <Search\n                    placeholder='Type school name'\n                    loading={isLoading}\n                    onResultSelect={handleResultSelect}\n                    onBlur={_.debounce(handleSearchOnBlur, 500, {\n                      leading: true\n                    })}\n                    results={results}\n                    //value={value}\n                    resultRenderer={resultRenderer}\n                    name='schoolName'\n                    onChange={e => onChange(e)}\n                    {...results}\n                  />\n                </Grid.Column>\n              </Grid>\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <Input\n                className='post-form-text-input'\n                type='text'\n                name='grade'\n                //value={grade}\n                placeholder='* Grade'\n                onChange={e => onChange(e)}\n              />\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <Input\n                className='post-form-text-input'\n                type='text'\n                name='classRoom'\n                //value={classRoom}\n                placeholder='Class Room'\n                onChange={e => onChange(e)}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color='primary'\n            onClick={e => {\n              e.preventDefault();\n              addSchool(formData, history);\n            }}\n          >\n            Save\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nProfileModal.propTypes = {\n  addSchool: PropTypes.func.isRequired,\n  getSchoolData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    results: state.school.results,\n    isLoading: state.school.isLoading,\n    value: state.school.value\n  };\n};\n\nexport default connect(mapStateToProps, { addSchool, getSchoolData })(\n  withRouter(ProfileModal)\n);\n"]},"metadata":{},"sourceType":"module"}