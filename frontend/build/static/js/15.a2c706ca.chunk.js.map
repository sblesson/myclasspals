{"version":3,"sources":["components/common/multiselectusersearch/MultiSelectUserSearch.js","actions/event.js","components/events/DisplayCreateEventForm.js","components/events/CreateEventForm.js","components/events/EventModal.js","components/events/EventsList.js"],"names":["connect","state","auth","searchUser","endUsersSelect","Option","Select","children","searchUserResult","length","map","item","index","key","value","email","style","fontWeigth","name","placeholder","mode","onSearch","searchTerm","setTimeout","Math","random","onChange","option","selectedUser","showArrow","addEvent","formData","callback","dispatch","a","cancelTokenSrc","axios","CancelToken","source","config","headers","post","cancelToken","token","res","type","payload","data","setAlert","console","log","response","message","getEvents","get","catchHandler","deleteEvent","eventId","delete","handleSubmit","values","submitCount","className","labelCol","xs","span","sm","wrapperCol","layout","initialValues","size","onSubmit","component","AntInput","label","defaultValue","eventTitle","validate","isRequired","hasFeedback","AntTextArea","eventLocation","eventDescription","isGenericEvent","AntSelect","eventFrequency","selectOptions","userGroups","required","MultiSelectUserSearch","AntDatePicker","eventStartDate","format","dateFormat","validateDate","AntTimePicker","eventStartTime","timeFormat","hourStep","minuteStep","use12Hours","eventEndDate","eventEndTime","group","withRouter","hideModal","moment","Date","now","currentGroups","userGroup","groupName","getUserGroups","eventFrequencySelectOptions","eventGroup","formatFormDate","date","time","hour","minute","dateArr","split","month","parseInt","day","year","timeArr","formProps","title","desc","location","start","end","startTime","endTime","groupId","usersSelect","formObj","selectedGroupName","currentGroupId","filter","id","getGroupIdFromGroupName","eventInvities","user","currentGroup","JSON","stringify","render","DisplayCreateEventForm","mapDispatchToProps","useState","visible","setModalVisibility","onClick","display","flex","justifyContent","margin","cursor","centered","okText","onOk","onCancel","destroyOnClose","cancelButtonProps","CreateEventForm","locale","localizer","momentLocalizer","ownProps","event","currentEvent","setCurrentEvent","hocEvent","setHOCEvent","currentView","React","setVisible","deleteLoading","setDeleteLoading","handleDelete","window","pathname","handleCancel","isCurrent","useRef","useEffect","current","cancel","height","width","startAccessor","endAccessor","defaultate","defaultView","Views","WEEK","defaultDate","events","drilldownView","views","popup","onView","view","onSelectEvent","calendarEvent","description","closable","okButtonProps","loading","danger","color"],"mappings":"mGAAA,sDAqDeA,iBAHS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,QAE0B,CAAEC,gBAA3BH,EA9Ce,SAAC,GAA0C,IAAxCG,EAAuC,EAAvCA,WAAYD,EAA2B,EAA3BA,KAAME,EAAqB,EAArBA,eAC3CC,EAASC,IAAOD,OAiBhBE,EACJL,GACAA,EAAKM,kBACLN,EAAKM,iBAAiBC,OAAS,GAC/BP,EAAKM,iBAAiBE,KAAI,SAACC,EAAMC,GAC/B,OACE,kBAACP,EAAD,CAAQQ,IAAKD,EAAOE,MAAOH,EAAKI,OAC9B,0BAAMC,MAAO,CAAEC,WAAY,WAA3B,IAAyCN,EAAKI,WAKtD,OACE,kBAAC,IAAD,CACEG,KAAMd,EACNe,YAAY,iBACZC,KAAK,WACLC,SAhCc,SAACC,GACbA,GACFC,YAAW,WACTpB,EAAWmB,KACM,IAAhBE,KAAKC,WA6BRC,SAzBiB,SAACZ,EAAOa,GACvBzB,GAAQA,EAAKM,kBAAoBN,EAAKM,iBAAiBC,OAAS,IAElEP,EAAK0B,aAAe1B,EAAKM,iBAAiBmB,EAAOd,OAuBjDgB,WAAW,GAEVtB,O,0LC1CMuB,EAAW,SAACC,EAAUC,GAAX,8CAAwB,WAAOC,GAAP,mBAAAC,EAAA,6DAC1CC,EAAiBC,IAAMC,YAAYC,SAEjCC,EAAS,CACbC,QAAS,CACP,eAAgB,qBAL0B,kBAU1BJ,IAAMK,KAAK,SAAUV,EAAUQ,EAAQ,CACvDG,YAAaP,EAAeQ,QAXc,OAUtCC,EAVsC,OAc5CX,EAAS,CACPY,KAAM,YACNC,QAASF,EAAIG,OAGfd,EAASe,YAAS,gBAAiB,YACnChB,EAASY,GApBmC,kDAsB5CK,QAAQC,IAAR,MACAjB,EACEe,YACE,MACE,KAAIG,UACJ,KAAIA,SAASJ,MACiB,OAA9B,KAAII,SAASJ,KAAKK,QAChB,KAAID,SAASJ,KAAKK,QAClB,qDACJ,UA/BwC,QAmC9CpB,EAASG,GAnCqC,0DAAxB,uDAuCXkB,EAAY,SAACrB,GAAD,8CAAc,WAAOC,GAAP,iBAAAC,EAAA,6DACjCC,EAAiBC,IAAMC,YAAYC,SADF,kBAIZF,IAAMkB,IAAN,eAA0B,CAC/CZ,YAAaP,EAAeQ,QALK,OAI7BQ,EAJ6B,OAQnClB,EAAS,CACPY,KAAM,aACNC,QAASK,EAASJ,OAVe,gDAanCQ,YAAa,EAAD,GAAM,oBAbiB,QAerCvB,EAASG,GAf4B,yDAAd,uDAmBZqB,EAAc,SAACC,EAASzB,GAAV,8CAAuB,WAAOC,GAAP,SAAAC,EAAA,+EAE5BE,IAAMsB,OAAN,iBAAuBD,IAFK,cAG9CxB,EAAS,CACPY,KAAM,eACNC,QAASW,IALmC,gDAQ9CF,YAAa,EAAD,GAAM,sBAR4B,QAUhDvB,IAVgD,yDAAvB,wD,gICzCZ,G,OAAA,YAA4C,IAAzC2B,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YAWtC,OACE,kBAAC,IAAD,eACEC,UAAU,kBAZS,CACrBC,SAAU,CACRC,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,IAEdE,WAAY,CACVH,GAAI,CAAEC,KAAM,IACZC,GAAI,CAAED,KAAM,MAId,CAIEG,OAAO,WACPC,cAAe,CACbC,KAAM,SAERC,SAAUZ,IAEV,kBAAC,IAAD,CACEa,UAAWC,IACXvD,KAAK,QACL2B,KAAK,OACL6B,MAAM,0BACNvD,YAAY,oBACZwD,aAAcf,EAAOgB,WACrBC,SAAUC,IACVjB,YAAaA,EACbkB,aAAW,IAEb,kBAAC,IAAD,CACEP,UAAWQ,IACX9D,KAAK,WACL2B,KAAK,OACL6B,MAAM,2BACNvD,YAAY,mCACZwD,aAAcf,EAAOqB,cACrBJ,SAAUC,IACVjB,YAAaA,EACbkB,aAAW,IAEb,kBAAC,IAAD,CACEP,UAAWQ,IACX9D,KAAK,OACL2B,KAAK,OACL6B,MAAM,2BACNvD,YAAY,8CACZwD,aAAcf,EAAOsB,iBAErBrB,YAAaA,EACbkB,aAAW,IAEZnB,EAAOuB,gBACN,kBAAC,IAAD,CACEX,UAAWY,IACXlE,KAAK,aACLwD,MAAM,mCACNC,aAAcf,EAAOyB,eACrBC,cAAe1B,EAAO2B,WACtB1B,YAAaA,IAGhBD,EAAOuB,gBACN,kBAAC,IAAD,CACEjE,KAAK,cACLwD,MAAM,gDACNc,UAAU,GAEV,kBAACC,EAAA,EAAD,CAAuBrF,eAAgB,iBAI3C,kBAAC,IAAD,CACEoE,UAAWkB,IACXxE,KAAK,QACLwD,MAAM,aACNC,aAAcf,EAAO+B,eACrBC,OAAQC,IACRhB,SAAUiB,IACVjC,YAAaA,EACbkB,aAAW,IAGb,kBAAC,IAAD,CACEP,UAAWuB,IACX7E,KAAK,YACLwD,MAAM,aACNC,aAAcf,EAAOoC,eACrBJ,OAAQK,IACRC,SAAU,EACVC,WAAY,EAEZtC,YAAaA,EACbkB,aAAW,EACXqB,YAAU,IAEZ,kBAAC,IAAD,CACE5B,UAAWkB,IACXxE,KAAK,MACLwD,MAAM,WACNC,aAAcf,EAAOyC,aACrBT,OAAQC,IACRhB,SAAUiB,IACVjC,YAAaA,EACbkB,aAAW,IAEb,kBAAC,IAAD,CACEP,UAAWuB,IACX7E,KAAK,UACLwD,MAAM,WACNC,aAAcf,EAAO0C,aACrBV,OAAQK,IACRC,SAAU,EACVC,WAAY,EAEZtC,YAAaA,EACbkB,aAAW,EACXqB,YAAU,IAcZ,yBAAKtC,UAAU,oBACb,4BAAQA,UAAU,sCAAsCjB,KAAK,UAA7D,c,0CCbO7C,iBALS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAMC,KACZqG,MAAOtG,EAAMsG,SAGyB,CACtCzE,cADa9B,CAEZwG,aAxIqB,SAAC,GAMlB,IALLD,EAKI,EALJA,MACArG,EAII,EAJJA,KACAuG,EAGI,EAHJA,UACA3E,EAEI,EAFJA,SACAqD,EACI,EADJA,eAkBMd,EAAgB,CACpBO,WAAY,GAEZK,cAAe,GACfC,iBAAkB,GAClBS,eAAgBe,IAAOC,KAAKC,OAC5BP,aAAcK,IAAOC,KAAKC,OAC1BZ,eAAgBU,IAAOC,KAAKC,OAC5BN,aAAcI,IAAOC,KAAKC,OAC1BvB,eAAgB,kBAChBE,WA1BoB,WACpB,IAAMsB,EAAgBN,EAAMO,UAAUpG,KAAI,SAACkD,GACzC,OAAOA,EAAOmD,aAGhB,OADA9D,QAAQC,IAAI2D,GACLA,EAqBKG,GACZ7B,eAAgBA,EAGhB8B,4BAA6B,CAC3B,kBACA,QACA,SACA,WAEFC,WAAY,YAIRC,EAAiB,SAACC,EAAMC,GAE5B,IAMIC,EAAMC,EANJC,EAAUd,IAAOU,GAAMxB,OAAO,KAAK6B,MAAM,KACzCC,EAAQC,SAASH,EAAQ,IAAM,EAC/BI,EAAMD,SAASH,EAAQ,IACvBK,EAAOF,SAASH,EAAQ,IAExBM,EAAUT,EAAKzB,OAAO,SAAS6B,MAAM,KAO3C,OALIK,GAAWA,EAAQrH,OAAS,IAC9B6G,EAAOK,SAASG,EAAQ,IACxBP,EAASI,SAASG,EAAQ,KAGrB,IAAInB,KAAKkB,EAAMH,EAAOE,EAAKN,EAAMC,IA2D1C,OACE,kBAAC,IAAD,CACElD,cAAeA,EACfE,SA5DiB,SAACwD,GACpB9E,QAAQC,IAAI6E,GADsB,IAGhCC,EAiBED,EAjBFC,MACAC,EAgBEF,EAhBFE,KACAC,EAeEH,EAfFG,SACAC,EAcEJ,EAdFI,MACAC,EAaEL,EAbFK,IACAC,EAYEN,EAZFM,UACAC,EAWEP,EAXFO,QAIA3C,GAOEoC,EATFQ,QASER,EAPFpC,gBACAU,EAME0B,EANF1B,aACAL,EAKE+B,EALF/B,eACAM,EAIEyB,EAJFzB,aACAY,EAGEa,EAHFb,WAEAsB,GACET,EAFFxC,WAEEwC,EADFS,aAGFJ,EAAMA,GAAY/B,EAClBgC,EAAYA,GAAwBrC,EACpCsC,EAAUA,GAAoBhC,EAE9B,IAAImC,EAAU,CACZT,MAAOA,EACPC,KAAMA,EACNC,SAAUA,IARZC,EAAQA,GAAgBxC,KAYtB8C,EAAQN,MAAQhB,EAAegB,EAAOE,IAEpCD,IACFK,EAAQL,IAAMjB,EAAeiB,EAAKE,IAEhCnD,EAEiB,aAAf+B,EACFuB,EAAQF,QAzFkB,SAACG,GAC/B,IAAMC,EAAiBpC,EAAMO,UAAU8B,QACrC,SAAChF,GAAD,OAAY8E,IAAsB9E,EAAOmD,aAE3C,OAAI4B,GAAkBA,EAAelI,OAAS,EACrCkI,EAAe,GAAGE,GACb,KAmFQC,CAAwB5B,GACjCsB,GAAeA,EAAY/H,OAAS,EAC7CgI,EAAQM,cAAgBP,EAExBC,EAAQM,cAAgB,CAAC7I,EAAK8I,KAAKjI,OAIrC0H,EAAQF,QAAUhC,EAAM0C,aAAaJ,GAGvC/G,EAASoH,KAAKC,UAAUV,IAAU,WAChChC,QAQA2C,OAAQC,S,0ICnERC,EAAqB,SAACrJ,GAAD,MAAY,CACrCsG,MAAOtG,EAAMsG,QAEAvG,cAAQsJ,EAAoB,CACzCA,sBADatJ,EA9DI,SAAC,GAAe,IAAD,EAAZuG,EAAY,EAAZA,MAAY,EACMgD,oBAAS,GADf,mBACzBC,EADyB,KAChBC,EADgB,KAO1BhD,EAAY,WAChBgD,GAAmB,IAMrB,OACE,kBAAC,WAAD,KACE,yBAAK3F,UAAU,iBAAiB4F,QAblB,WAChBD,GAAmB,KAaf,yBACEzI,MAAO,CACL2I,QAAS,OACTC,KAAM,IACNC,eAAgB,WAChBC,OAAQ,SACRC,OAAQ,YAGV,4BACEjG,UAAU,kDACVjB,KAAK,UAEL,8BACE,uBAAGiB,UAAU,wBADf,kBAGQ,OAId,kBAAC,KAAD,GACEkG,UAAQ,EACRhC,MAAO,eACPwB,QAASA,EACTS,OAAO,SACPC,KAAMzD,EACN0D,SAjCc,WAClBV,GAAoBD,IAiChBY,gBAAgB,EAChBC,kBAAmB,CAAErJ,MAAO,CAAE2I,QAAS,UARzC,gCASkB,GATlB,uBAUU,MAVV,GAYE,kBAACW,EAAA,EAAD,CACE7D,UAAWA,EACXF,MAAOA,EACPpB,gBAAgB,S,0BCjD1BuB,IAAO6D,OAAO,MAEd,IAAMC,EAAYC,YAAgB/D,KA6InB1G,uBANS,SAACC,EAAOyK,GAAR,MAAsB,CAC5CxK,KAAMD,EAAMC,KACZqG,MAAOtG,EAAMsG,MACboE,MAAO1K,EAAM0K,SAGyB,CAAEtH,cAAWG,iBAAtCxD,EA3II,SAAC,GAAuC,IAAD,EAApCqD,EAAoC,EAApCA,UAAWG,EAAyB,EAAzBA,YAAamH,EAAY,EAAZA,MAAY,EACXpB,oBAAS,GADE,mBACjCE,GADiC,aAEhBF,mBAAS,IAFO,mBAEjDqB,EAFiD,KAEnCC,EAFmC,OAGxBtB,mBAAS,IAHe,mBAGjDuB,EAHiD,KAGvCC,EAHuC,OAIlBxB,mBAAS,IAJS,mBAIjDyB,EAJiD,aAO1BC,IAAM1B,UAAS,IAPW,mBAOjDC,EAPiD,KAOxC0B,EAPwC,OAQdD,IAAM1B,UAAS,GARD,mBAQjD4B,EARiD,KAQlCC,EARkC,KAUlDC,EAAe,WACnBD,GAAiB,GACjB5H,EAAYoH,EAAanH,SAAS,WAChCyH,GAAW,GACXE,GAAiB,GACjBE,OAAOpD,SAASqD,SAAW,cAIzBC,EAAe,WACnBvI,QAAQC,IAAI,yBACZgI,GAAW,IAGPO,EAAYC,kBAAO,GAEzBC,qBAAU,WAMR,OALIF,EAAUG,SACZvI,GAAU,SAAClB,GACTA,EAAe0J,YAGZ,eAGN,IAEHF,qBAAU,WACR,OAAO,WAELF,EAAUG,SAAU,KAErB,IA6BH,OACE,yBAAK5K,MAAO,CAAE8K,OAAQ,OAAQC,MAAO,OAAQjC,OAAQ,cACnD,kBAAC,EAAD,MAEA,kBAAC,IAAD,CACEkC,cAhCkB,SAACrB,GACvB,OAAO,IAAIhE,KAAKgE,EAAMxC,QAgClB8D,YA9BgB,SAACtB,GACrB,OAAO,IAAIhE,KAAKgE,EAAMvC,MA8BlBoC,UAAWA,EACX0B,WAAY,IAAIvF,KAAKA,KAAKC,OAC1BuF,YAAanB,GAA4BoB,IAAMC,KAC/CC,YAAa,IAAI3F,KACjB4F,OAAQ5B,EAAM4B,OACdC,cAAc,SACdC,MAAO,CAAC,QAAS,OAAQ,UACzBC,OAAO,EACPC,OAlBe,SAACC,GACpB3J,QAAQC,IAAI0J,IAkBRC,cAAe,SAAClC,GAAD,OArCC,SAACA,GACrBlB,GAAmB,GACnBxG,QAAQC,IAAIyH,GACZ,IAAImC,EAAgB,CAClBC,YAAapC,EAAM1C,KAEnBK,QAASqC,EAAMvC,IACfF,SAAUyC,EAAMzC,SAChBG,UAAWsC,EAAMxC,MAEjBH,MAAO2C,EAAM3C,OAEf/E,QAAQC,IAAI4J,GAEZjC,EAAgBF,GAChBI,EAAY+B,GACZ5B,GAAW,GAqBmB2B,CAAclC,MAG1C,kBAAC,KAAD,GACEX,UAAQ,EACRhC,MAAO4C,EAAa5C,MACpBwB,QAASA,EACTwD,UAAU,EACV/C,OAAO,SACPC,KAAMsB,EACNrB,SAAUkB,EACVjB,gBAAgB,EAChBC,kBAAmB,CAAErJ,MAAO,CAAE2I,QAAS,SACvCsD,cAAe,CAAEC,QAAS/B,IAV5B,gCAWkB,GAXlB,uBAYU,CACN,kBAAC,IAAD,CACEtK,IAAI,SACJsM,QAAM,EACNnM,MAAO,CAAEoM,MAAO,WAChB1D,QAAS2B,GAJX,UAQA,kBAAC,IAAD,CAAQxK,IAAI,SAAS6I,QAAS8B,GAA9B,YArBJ,GA0BE,kBAAC,IAAD,CAAeb,MAAOG,IAErBpE,IAAOkE,EAAazC,OAAOvC,OAAO,OAClCgF,EAAaxC,KAAOwC,EAAaxC,MAAQwC,EAAazC,MACnD,MAAQzB,IAAOkE,EAAaxC,KAAKxC,OAAO,OACxC,GACJ,6BACCgF,EAAa7D,WAAa,eAAiB6D,EAAa7D,UACzD,6BACC6D,EAAa3C,MAAQ,gBAAkB2C,EAAa3C,KACrD,6BACC2C,EAAa1C,UAAY,aAAe0C,EAAa1C","file":"static/js/15.a2c706ca.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Spin } from 'antd';\nimport { Select } from 'formik-antd';\nimport debounce from 'lodash.debounce';\nimport { searchUser } from '../../../actions/auth';\n\nconst MultiSelectUserSearch = ({ searchUser, auth, endUsersSelect }) => {\n  const Option = Select.Option;\n\n  const fetchUser = (searchTerm) => {\n    if (searchTerm) {\n      setTimeout(() => {\n        searchUser(searchTerm);\n      }, Math.random() * 1000);\n    }\n  };\n\n  const onUserSelect = (value, option) => {\n    if (auth && auth.searchUserResult && auth.searchUserResult.length > 0) {\n      //update selected school in the reducer\n      auth.selectedUser = auth.searchUserResult[option.key];\n    }\n  };\n\n  const children =\n    auth &&\n    auth.searchUserResult &&\n    auth.searchUserResult.length > 0 &&\n    auth.searchUserResult.map((item, index) => {\n      return (\n        <Option key={index} value={item.email}>\n          <span style={{ fontWeigth: 'bolder' }}> {item.email}</span>\n        </Option>\n      );\n    });\n\n  return (\n    <Select\n      name={endUsersSelect}\n      placeholder='Select members'\n      mode='multiple'\n      onSearch={fetchUser}\n      onChange={onUserSelect}\n      showArrow={true}\n    >\n      {children}\n    </Select>\n  );\n};\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { searchUser })(MultiSelectUserSearch);\n","import axios from 'axios';\nimport { setAlert, catchHandler } from './alert';\n\n// Add Event\nexport const addEvent = (formData, callback) => async (dispatch) => {\n  let cancelTokenSrc = axios.CancelToken.source();\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/event', formData, config, {\n      cancelToken: cancelTokenSrc.token,\n    });\n\n    dispatch({\n      type: 'ADD_EVENT',\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Event Created', 'success'));\n    callback(res);\n  } catch (err) {\n    console.log(err);\n    dispatch(\n      setAlert(\n        err &&\n          err.response &&\n          err.response.data &&\n          err.response.data.message !== null\n          ? err.response.data.message\n          : 'Unable to create the event, please try again later',\n        'error'\n      )\n    );\n  }\n  callback(cancelTokenSrc);\n};\n\n// Get all userGroups\nexport const getEvents = (callback) => async (dispatch) => {\n  let cancelTokenSrc = axios.CancelToken.source();\n\n  try {\n    const response = await axios.get(`/user/events`, {\n      cancelToken: cancelTokenSrc.token,\n    });\n\n    dispatch({\n      type: 'GET_EVENTS',\n      payload: response.data,\n    });\n  } catch (err) {\n    catchHandler(err, 'GET_EVENTS_ERROR');\n  }\n  callback(cancelTokenSrc);\n};\n\n// Delete post\nexport const deleteEvent = (eventId, callback) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/event/${eventId}`);\n    dispatch({\n      type: 'DELETE_EVENT',\n      payload: eventId,\n    });\n  } catch (err) {\n    catchHandler(err, 'DELETE_EVENT_ERROR');\n  }\n  callback();\n};\n","import React from 'react';\nimport { Field } from 'formik';\nimport { FormikDebug } from 'formik-antd';\nimport { Form } from 'formik-antd';\nimport {\n  dateFormat,\n  timeFormat,\n  AntDatePicker,\n  AntInput,\n  AntTextArea,\n  AntSelect,\n  AntTimePicker,\n} from '../common/createformfields/CreateFormFields';\nimport { FormItem } from 'formik-antd';\n\nimport {\n  validateDate,\n  isRequired,\n} from '../common/validatefields/ValidateFields';\nimport MultiSelectUserSearch from '../common/multiselectusersearch/MultiSelectUserSearch';\nimport './DisplayCreateEventForm.scss';\nexport default ({ handleSubmit, values, submitCount }) => {\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 16 },\n    },\n  };\n  return (\n    <Form\n      className='form-container'\n      /*  className='form-wrapper' */\n      {...formItemLayout}\n      layout='vertical'\n      initialValues={{\n        size: 'small',\n      }}\n      onSubmit={handleSubmit}\n    >\n      <Field\n        component={AntInput}\n        name='title'\n        type='text'\n        label='What is the event name?'\n        placeholder='Name of the event'\n        defaultValue={values.eventTitle}\n        validate={isRequired}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <Field\n        component={AntTextArea}\n        name='location'\n        type='text'\n        label='Where is the event held?'\n        placeholder='Type address or add virtual link'\n        defaultValue={values.eventLocation}\n        validate={isRequired}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <Field\n        component={AntTextArea}\n        name='desc'\n        type='text'\n        label='What is the event about?'\n        placeholder='Type your short description about the event'\n        defaultValue={values.eventDescription}\n        //validate={isRequired}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      {values.isGenericEvent && (\n        <Field\n          component={AntSelect}\n          name='eventGroup'\n          label='Which groups can view the event?'\n          defaultValue={values.eventFrequency}\n          selectOptions={values.userGroups}\n          submitCount={submitCount}\n        />\n      )}\n      {values.isGenericEvent && (\n        <FormItem\n          name='usersSelect'\n          label='Who else can view the event other than group?'\n          required={false}\n        >\n          <MultiSelectUserSearch endUsersSelect={'usersSelect'} />\n        </FormItem>\n      )}\n\n      <Field\n        component={AntDatePicker}\n        name='start'\n        label='Start Date'\n        defaultValue={values.eventStartDate}\n        format={dateFormat}\n        validate={validateDate}\n        submitCount={submitCount}\n        hasFeedback\n      />\n\n      <Field\n        component={AntTimePicker}\n        name='startTime'\n        label='Start Time'\n        defaultValue={values.eventStartTime}\n        format={timeFormat}\n        hourStep={1}\n        minuteStep={5}\n        //validate={isRequired}\n        submitCount={submitCount}\n        hasFeedback\n        use12Hours\n      />\n      <Field\n        component={AntDatePicker}\n        name='end'\n        label='End Date'\n        defaultValue={values.eventEndDate}\n        format={dateFormat}\n        validate={validateDate}\n        submitCount={submitCount}\n        hasFeedback\n      />\n      <Field\n        component={AntTimePicker}\n        name='endTime'\n        label='End Time'\n        defaultValue={values.eventEndTime}\n        format={timeFormat}\n        hourStep={1}\n        minuteStep={5}\n        //validate={isRequired}\n        submitCount={submitCount}\n        hasFeedback\n        use12Hours\n      />\n      {/*       <Field\n        component={AntSelect}\n        name='frequency'\n        label='Repeats'\n        defaultValue={values.eventFrequency}\n        selectOptions={values.eventFrequencySelectOptions}\n        submitCount={submitCount}\n        tokenSeparators={[',']}\n        style={{ width: 200 }}\n        hasFeedback\n      /> */}\n\n      <div className='submit-container'>\n        <button className='ant-btn ant-btn-primary btn-primary' type='submit'>\n          Submit\n        </button>\n      </div>\n      {/*    <pre style={{ flex: 1 }}>\n        <FormikDebug />\n      </pre> */}\n    </Form>\n  );\n};\n","import React from 'react';\nimport { Formik } from 'formik';\n\nimport DisplayCreateEventForm from './DisplayCreateEventForm';\nimport moment from 'moment';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addEvent } from '../../actions/event';\n\nconst CreateEventForm = ({\n  group,\n  auth,\n  hideModal,\n  addEvent,\n  isGenericEvent,\n}) => {\n  const getUserGroups = () => {\n    const currentGroups = group.userGroup.map((values) => {\n      return values.groupName;\n    });\n    console.log(currentGroups);\n    return currentGroups;\n  };\n\n  const getGroupIdFromGroupName = (selectedGroupName) => {\n    const currentGroupId = group.userGroup.filter(\n      (values) => selectedGroupName === values.groupName\n    );\n    if (currentGroupId && currentGroupId.length > 0) {\n      return currentGroupId[0].id;\n    } else return null;\n  };\n  const initialValues = {\n    eventTitle: '',\n    //groupId: group.currentGroup.id,\n    eventLocation: '',\n    eventDescription: '',\n    eventStartDate: moment(Date.now()),\n    eventEndDate: moment(Date.now()),\n    eventStartTime: moment(Date.now()),\n    eventEndTime: moment(Date.now()),\n    eventFrequency: 'Does not repeat',\n    userGroups: getUserGroups(),\n    isGenericEvent: isGenericEvent,\n    /*   isEventAllDay: 'false',\n    isEventRSVPRequired: 'false', */\n    eventFrequencySelectOptions: [\n      'Does not repeat',\n      'Daily',\n      'Weekly',\n      'Monthly',\n    ],\n    eventGroup: '-Select-',\n    //userGroup: group.userGroup,\n  };\n\n  const formatFormDate = (date, time) => {\n    //sample date format 11/19/2020\n    const dateArr = moment(date).format('L').split('/');\n    const month = parseInt(dateArr[0]) - 1;\n    const day = parseInt(dateArr[1]);\n    const year = parseInt(dateArr[2]);\n    //time in format hour,minute eg: 11,41\n    const timeArr = time.format('HH,mm').split(',');\n    let hour, minute;\n    if (timeArr && timeArr.length > 0) {\n      hour = parseInt(timeArr[0]);\n      minute = parseInt(timeArr[1]);\n    }\n\n    return new Date(year, month, day, hour, minute);\n  };\n  const handleSubmit = (formProps) => {\n    console.log(formProps);\n    let {\n      title,\n      desc,\n      location,\n      start,\n      end,\n      startTime,\n      endTime,\n      //frequency,\n      groupId,\n      //use default values if no selection by user\n      eventStartDate,\n      eventEndDate,\n      eventStartTime,\n      eventEndTime,\n      eventGroup,\n      userGroups,\n      usersSelect,\n    } = formProps;\n    start = start ? start : eventStartDate;\n    end = end ? end : eventEndDate;\n    startTime = startTime ? startTime : eventStartTime;\n    endTime = endTime ? endTime : eventEndTime;\n\n    let formObj = {\n      title: title,\n      desc: desc,\n      location: location,\n      //eventFrequency: eventFrequency,\n    };\n    if (start) {\n      formObj.start = formatFormDate(start, startTime);\n    }\n    if (end) {\n      formObj.end = formatFormDate(end, endTime);\n    }\n    if (isGenericEvent) {\n      //creating event from events page we need to pass groupId or eventInvitees, if both are undefined, add current user email into eventInvitees array (host )\n      if (eventGroup !== '-Select-') {\n        formObj.groupId = getGroupIdFromGroupName(eventGroup);\n      } else if (usersSelect && usersSelect.length > 0) {\n        formObj.eventInvities = usersSelect;\n      } else {\n        formObj.eventInvities = [auth.user.email];\n      }\n    } else {\n      //event created from groups page\n      formObj.groupId = group.currentGroup.id;\n    }\n\n    addEvent(JSON.stringify(formObj), () => {\n      hideModal();\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      render={DisplayCreateEventForm}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  group: state.group,\n});\n\nexport default connect(mapStateToProps, {\n  addEvent,\n})(withRouter(CreateEventForm));\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { Modal } from 'antd';\nimport { connect } from 'react-redux';\n\nimport CreateEventForm from './CreateEventForm';\n//import './PostModal.scss';\n\nconst EventModal = ({ group }) => {\n  const [visible, setModalVisibility] = useState(false);\n\n  const showModal = () => {\n    setModalVisibility(true);\n  };\n\n  const hideModal = () => {\n    setModalVisibility(false);\n  };\n  const toggleModal = () => {\n    setModalVisibility(!visible);\n  };\n\n  return (\n    <Fragment>\n      <div className='new-event-form' onClick={showModal}>\n        <div\n          style={{\n            display: 'flex',\n            flex: '1',\n            justifyContent: 'flex-end',\n            margin: '1rem 0',\n            cursor: 'pointer',\n          }}\n        >\n          <button\n            className='ant-btn ant-btn-primary btn-primary float-right'\n            type='submit'\n          >\n            <span>\n              <i className='far fa-calendar-alt'></i>\n              &nbsp; Add Event\n            </span>{' '}\n          </button>\n        </div>\n      </div>\n      <Modal\n        centered\n        title={'Create event'}\n        visible={visible}\n        okText='Create'\n        onOk={hideModal}\n        onCancel={toggleModal} //pass close logic here\n        destroyOnClose={true}\n        cancelButtonProps={{ style: { display: 'none' } }}\n        destroyOnClose={true}\n        footer={null}\n      >\n        <CreateEventForm\n          hideModal={hideModal}\n          group={group}\n          isGenericEvent={true}\n        />\n      </Modal>\n    </Fragment>\n  );\n};\n\nconst mapDispatchToProps = (state) => ({\n  group: state.group,\n});\nexport default connect(mapDispatchToProps, {\n  mapDispatchToProps,\n})(EventModal);\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Calendar, momentLocalizer, Views } from 'react-big-calendar';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { getEvents, deleteEvent } from '../../actions/event';\nimport EventModal from './EventModal';\nimport { Modal, Button } from 'antd';\n/* import AddToCalendar from 'react-add-to-calendar-hoc'; */\nimport AddToCalendar from 'react-add-to-calendar';\n\nmoment.locale('en');\n\nconst localizer = momentLocalizer(moment);\n\nconst EventsList = ({ getEvents, deleteEvent, event }) => {\n  const [isModalVisible, setModalVisibility] = useState(false);\n  const [currentEvent, setCurrentEvent] = useState({});\n  const [hocEvent, setHOCEvent] = useState({});\n  const [currentView, setCurrentView] = useState('');\n  let icon = { 'calendar-plus-o': 'left' };\n\n  const [visible, setVisible] = React.useState(false);\n  const [deleteLoading, setDeleteLoading] = React.useState(false);\n\n  const handleDelete = () => {\n    setDeleteLoading(true);\n    deleteEvent(currentEvent.eventId, () => {\n      setVisible(false);\n      setDeleteLoading(false);\n      window.location.pathname = '/events';\n    });\n  };\n\n  const handleCancel = () => {\n    console.log('Clicked cancel button');\n    setVisible(false);\n  };\n\n  const isCurrent = useRef(true);\n\n  useEffect(() => {\n    if (isCurrent.current) {\n      getEvents((cancelTokenSrc) => {\n        cancelTokenSrc.cancel();\n      });\n    }\n    return () => {\n      //cleanup\n    };\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      //called when component is going to unmount\n      isCurrent.current = false;\n    };\n  }, []);\n\n  const formatStartDate = (event) => {\n    return new Date(event.start);\n  };\n  const formatEndDate = (event) => {\n    return new Date(event.end);\n  };\n  const onSelectEvent = (event) => {\n    setModalVisibility(true);\n    console.log(event);\n    let calendarEvent = {\n      description: event.desc,\n      //duration,\n      endTime: event.end,\n      location: event.location,\n      startTime: event.start,\n      //timezone: 'Europe/London',\n      title: event.title,\n    };\n    console.log(calendarEvent);\n\n    setCurrentEvent(event);\n    setHOCEvent(calendarEvent);\n    setVisible(true);\n  };\n  const onViewChange = (view) => {\n    console.log(view);\n  };\n  return (\n    <div style={{ height: '80vh', width: '95vw', margin: '2rem auto' }}>\n      <EventModal />\n\n      <Calendar\n        startAccessor={formatStartDate}\n        endAccessor={formatEndDate}\n        localizer={localizer}\n        defaultate={new Date(Date.now())}\n        defaultView={currentView ? currentView : Views.WEEK}\n        defaultDate={new Date()}\n        events={event.events}\n        drilldownView='agenda'\n        views={['month', 'week', 'agenda']}\n        popup={true}\n        onView={onViewChange}\n        onSelectEvent={(event) => onSelectEvent(event)}\n      />\n\n      <Modal\n        centered\n        title={currentEvent.title}\n        visible={visible}\n        closable={false}\n        okText='Delete'\n        onOk={handleCancel}\n        onCancel={handleDelete} //pass close logic here\n        destroyOnClose={true}\n        cancelButtonProps={{ style: { display: 'none' } }}\n        okButtonProps={{ loading: deleteLoading }}\n        destroyOnClose={true}\n        footer={[\n          <Button\n            key='delete'\n            danger\n            style={{ color: '#cc0000' }}\n            onClick={handleDelete}\n          >\n            Delete\n          </Button>,\n          <Button key='cancel' onClick={handleCancel}>\n            Cancel\n          </Button>,\n        ]}\n      >\n        <AddToCalendar event={hocEvent} />\n\n        {moment(currentEvent.start).format('LLL')}\n        {currentEvent.end && currentEvent.end !== currentEvent.start\n          ? ' - ' + moment(currentEvent.end).format('LLL')\n          : ''}\n        <br />\n        {currentEvent.groupName && 'Group Name: ' + currentEvent.groupName}\n        <br />\n        {currentEvent.desc && 'Description: ' + currentEvent.desc}\n        <br />\n        {currentEvent.location && 'Location: ' + currentEvent.location}\n      </Modal>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  auth: state.auth,\n  group: state.group,\n  event: state.event,\n});\n\nexport default connect(mapStateToProps, { getEvents, deleteEvent })(EventsList);\n"],"sourceRoot":""}