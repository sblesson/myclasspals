{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/modal/post/PostModal.js\";\nimport React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport Collapse from '@material-ui/core/Collapse';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../../actions/post';\nimport './PostModal.scss';\n\nconst PostModal = ({\n  addPost,\n  history\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const _useState3 = useState({\n    topics: '[]',\n    group_id: '',\n    subject: '',\n    message: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formData = _useState4[0],\n        setFormData = _useState4[1];\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        collapsed = _React$useState2[0],\n        setCollapsed = _React$useState2[1];\n\n  const _item = item,\n        label = _item.label,\n        icon = _item.icon,\n        url = _item.url,\n        items = _item.items,\n        Icon = _item.Icon,\n        onClickProp = _item.onClick;\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        modal = _useState6[0],\n        setModal = _useState6[1];\n\n  const toggle = () => setModal(!modal);\n\n  const toggleCollapse = () => {\n    setCollapsed(prevValue => !prevValue);\n  };\n\n  const onClick = e => {\n    if (Array.isArray(categories)) {\n      toggleCollapse();\n    }\n\n    if (onClickProp) {\n      onClickProp(e, item);\n    }\n  };\n\n  let expandIcon;\n\n  if (Array.isArray(items) && items.length) {\n    expandIcon = !collapsed ? React.createElement(ExpandLessIcon, {\n      className: 'sidebar-item-expand-arrow' + ' sidebar-item-expand-arrow-expanded',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }) : React.createElement(ExpandMoreIcon, {\n      className: \"sidebar-item-expand-arrow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  }\n\n  const topics = [{\n    category_id: '1',\n    title: 'General',\n    url: '/general'\n  }, {\n    category_id: '2',\n    title: 'Recommendations',\n    url: '/recommendations'\n  }, {\n    category_id: '3',\n    title: 'Carpool',\n    url: '/carpool'\n  }, {\n    category_id: '4',\n    title: 'Lost & Found',\n    url: '/lost_and_found'\n  }, {\n    category_id: '5',\n    title: 'Volunteer',\n    url: '/volunteer'\n  }, {\n    category_id: '6',\n    title: 'Help Needed',\n    url: '/help'\n  }, {\n    category_id: '7',\n    title: 'Homework',\n    url: '/homework'\n  }];\n  const all_groups = [{\n    id: 'userId',\n    group_id: 'groupID room 34',\n    name: 'room 34',\n    type: 'inner'\n  }, {\n    id: 'userId',\n    group_id: 'groupID grade 6',\n    name: 'grade 6 + room 34',\n    type: 'outer'\n  }, {\n    id: 'userId',\n    group_id: 'groupID sunshine',\n    name: 'sunshine',\n    type: 'inner'\n  }, {\n    id: 'userId',\n    group_id: 'groupID prek',\n    name: 'pre-k + sunshine',\n    type: 'outer'\n  }];\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"new-post-form\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-post-head p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"What do you want to discuss?\")), React.createElement(\"div\", {\n    className: \"post-create-textarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"avatar-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user margin-right-5 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"new-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"Post your inner voice \")))), React.createElement(Modal, {\n    isOpen: modal,\n    fade: false,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \" Create Post\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    tag: \"fieldset\",\n    className: \"post-form post-form-radio-options-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Choose Category\"), expandIcon, React.createElement(Collapse, {\n    in: !collapsed,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, Array.isArray(categories) ? React.createElement(List, {\n    disablePadding: true,\n    dense: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, categories.map((subItem, index) => React.createElement(React.Fragment, {\n    key: \"\".concat(subItem.title).concat(index),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }))) : null), topics.map(function (topic, index) {\n    return React.createElement(FormGroup, {\n      check: true,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"topics\",\n      value: topic,\n      category: topic.category_id,\n      onChange: e => onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), ' ', topic.title));\n  })), React.createElement(FormGroup, {\n    tag: \"fieldset\",\n    className: \"post-form post-form-radio-options-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Choose Group\"), all_groups.map(function (group, index) {\n    return React.createElement(FormGroup, {\n      check: true,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"group_id\",\n      value: group.group_id,\n      onChange: e => onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), ' ', group.name));\n  })), React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"post-form-text-input\",\n    type: \"text\",\n    name: \"subject\",\n    placeholder: \"Subject\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    className: \"post-form-text-input post-form-textarea\",\n    name: \"message\",\n    cols: \"30\",\n    rows: \"5\",\n    placeholder: \"Enter your message ...\",\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      addPost(formData, history);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, \"Post\"))));\n};\n\nPostModal.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = state => ({\n  hideModal: state.hideModal\n});\n\nexport default connect(null, {\n  addPost,\n  mapDispatchToProps\n})(withRouter(PostModal));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/modal/post/PostModal.js"],"names":["React","useState","Link","withRouter","Col","Row","Button","Form","FormGroup","Label","Input","FormText","Modal","ModalHeader","ModalBody","ModalFooter","ExpandMoreIcon","ExpandLessIcon","Collapse","PropTypes","connect","addPost","PostModal","history","text","setText","topics","group_id","subject","message","formData","setFormData","collapsed","setCollapsed","item","label","icon","url","items","Icon","onClickProp","onClick","modal","setModal","toggle","toggleCollapse","prevValue","e","Array","isArray","categories","expandIcon","length","category_id","title","all_groups","id","name","type","onChange","target","value","map","subItem","index","topic","group","preventDefault","propTypes","func","isRequired","mapDispatchToProps","state","hideModal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport {\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport Collapse from '@material-ui/core/Collapse';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../../actions/post';\nimport './PostModal.scss';\n\nconst PostModal = ({ addPost, history }) => {\n  const [text, setText] = useState('');\n  const [formData, setFormData] = useState({\n    topics: '[]',\n    group_id: '',\n    subject: '',\n    message: ''\n  });\n  const [collapsed, setCollapsed] = React.useState(true);\n\n  const { label, icon, url, items, Icon, onClick: onClickProp } = item;\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const toggleCollapse = () => {\n    setCollapsed(prevValue => !prevValue);\n  };\n\n  const onClick = e => {\n    if (Array.isArray(categories)) {\n      toggleCollapse();\n    }\n    if (onClickProp) {\n      onClickProp(e, item);\n    }\n  };\n\n  let expandIcon;\n\n  if (Array.isArray(items) && items.length) {\n    expandIcon = !collapsed ? (\n      <ExpandLessIcon\n        className={\n          'sidebar-item-expand-arrow' + ' sidebar-item-expand-arrow-expanded'\n        }\n      />\n    ) : (\n      <ExpandMoreIcon className='sidebar-item-expand-arrow' />\n    );\n  }\n\n  const topics = [\n    { category_id: '1', title: 'General', url: '/general' },\n    { category_id: '2', title: 'Recommendations', url: '/recommendations' },\n    { category_id: '3', title: 'Carpool', url: '/carpool' },\n    { category_id: '4', title: 'Lost & Found', url: '/lost_and_found' },\n    { category_id: '5', title: 'Volunteer', url: '/volunteer' },\n    { category_id: '6', title: 'Help Needed', url: '/help' },\n    { category_id: '7', title: 'Homework', url: '/homework' }\n  ];\n  const all_groups = [\n    {\n      id: 'userId',\n      group_id: 'groupID room 34',\n      name: 'room 34',\n      type: 'inner'\n    },\n    {\n      id: 'userId',\n      group_id: 'groupID grade 6',\n      name: 'grade 6 + room 34',\n      type: 'outer'\n    },\n    {\n      id: 'userId',\n      group_id: 'groupID sunshine',\n      name: 'sunshine',\n      type: 'inner'\n    },\n    {\n      id: 'userId',\n      group_id: 'groupID prek',\n      name: 'pre-k + sunshine',\n      type: 'outer'\n    }\n  ];\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <div>\n      <div className='new-post-form' onClick={toggle}>\n        <div className='bg-post-head p'>\n          <h6>What do you want to discuss?</h6>\n        </div>\n\n        <div className='post-create-textarea'>\n          <div className='avatar-container'>\n            <i className='fas fa-user margin-right-5 '></i>\n            <span className='new-post'>Post your inner voice </span>\n          </div>\n        </div>\n      </div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Create Post</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup\n              tag='fieldset'\n              className='post-form post-form-radio-options-container'\n            >\n              <legend className='col-form-label'>Choose Category</legend>\n              {expandIcon}\n\n              <Collapse in={!collapsed} timeout='auto' unmountOnExit>\n                {Array.isArray(categories) ? (\n                  <List disablePadding dense>\n                    {categories.map((subItem, index) => (\n                      <React.Fragment\n                        key={`${subItem.title}${index}`}\n                      ></React.Fragment>\n                    ))}\n                  </List>\n                ) : null}\n              </Collapse>\n\n              {topics.map(function(topic, index) {\n                return (\n                  <FormGroup check key={index}>\n                    <Label check>\n                      <Input\n                        type='radio'\n                        name='topics'\n                        value={topic}\n                        category={topic.category_id}\n                        onChange={e => onChange(e)}\n                      />{' '}\n                      {topic.title}\n                    </Label>\n                  </FormGroup>\n                );\n              })}\n            </FormGroup>\n            <FormGroup\n              tag='fieldset'\n              className='post-form post-form-radio-options-container'\n            >\n              <legend className='col-form-label'>Choose Group</legend>\n              {all_groups.map(function(group, index) {\n                return (\n                  <FormGroup check key={index}>\n                    <Label check>\n                      <Input\n                        type='radio'\n                        name='group_id'\n                        value={group.group_id}\n                        onChange={e => onChange(e)}\n                      />{' '}\n                      {group.name}\n                    </Label>\n                  </FormGroup>\n                );\n              })}\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <Input\n                className='post-form-text-input'\n                type='text'\n                name='subject'\n                placeholder='Subject'\n                onChange={e => onChange(e)}\n              />\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <textarea\n                className='post-form-text-input post-form-textarea'\n                name='message'\n                cols='30'\n                rows='5'\n                placeholder='Enter your message ...'\n                onChange={e => onChange(e)}\n                required\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color='primary'\n            onClick={e => {\n              e.preventDefault();\n              addPost(formData, history);\n            }}\n          >\n            Post\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nPostModal.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = state => ({\n  hideModal: state.hideModal\n});\n\nexport default connect(null, { addPost, mapDispatchToProps })(\n  withRouter(PostModal)\n);\n"]},"metadata":{},"sourceType":"module"}