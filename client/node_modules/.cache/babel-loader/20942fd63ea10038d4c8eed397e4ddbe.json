{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/posts/PostForm.js\";\nimport React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport {\n/*   Col,\nButton,\nForm,\nFormGroup,\nLabel,\nInput,\nFormText, */\nModal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { Button, Checkbox, Form, Input, Radio, Select, TextArea } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({\n  addPost,\n  history\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const _useState3 = useState({\n    topics: '[]',\n    group_id: '',\n    subject: '',\n    message: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formData = _useState4[0],\n        setFormData = _useState4[1];\n\n  const options = [{\n    key: 'm',\n    text: 'Male',\n    value: 'male'\n  }, {\n    key: 'f',\n    text: 'Female',\n    value: 'female'\n  }, {\n    key: 'o',\n    text: 'Other',\n    value: 'other'\n  }];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        modal = _useState6[0],\n        setModal = _useState6[1];\n\n  const toggle = () => setModal(!modal);\n\n  const topics = [{\n    category_id: '1',\n    title: 'General',\n    url: '/general'\n  }, {\n    category_id: '2',\n    title: 'Recommendations',\n    url: '/recommendations'\n  }, {\n    category_id: '3',\n    title: 'Carpool',\n    url: '/carpool'\n  }, {\n    category_id: '4',\n    title: 'Lost & Found',\n    url: '/lost_and_found'\n  }, {\n    category_id: '5',\n    title: 'Volunteer',\n    url: '/volunteer'\n  }, {\n    category_id: '6',\n    title: 'Help Needed',\n    url: '/help'\n  }, {\n    category_id: '7',\n    title: 'Homework',\n    url: '/homework'\n  }];\n  const all_groups = [{\n    id: 'userId',\n    group_id: 'groupID room 34',\n    name: 'room 34',\n    type: 'inner'\n  }, {\n    id: 'userId',\n    group_id: 'groupID grade 6',\n    name: 'grade 6 + room 34',\n    type: 'outer'\n  }, {\n    id: 'userId',\n    group_id: 'groupID sunshine',\n    name: 'sunshine',\n    type: 'inner'\n  }, {\n    id: 'userId',\n    group_id: 'groupID prek',\n    name: 'pre-k + sunshine',\n    type: 'outer'\n  }];\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"post-form\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-post-head p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"What do you want to discuss?\")), React.createElement(\"div\", {\n    className: \"post-create-textarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"avatar-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user margin-right-5 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"new-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Post your inner voice \")))), React.createElement(Modal, {\n    isOpen: modal,\n    fade: false,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \" Create Post\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    widths: \"equal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    control: Input,\n    label: \"First name\",\n    placeholder: \"First name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    control: Input,\n    label: \"Last name\",\n    placeholder: \"Last name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    control: Select,\n    label: \"Gender\",\n    options: options,\n    placeholder: \"Gender\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    inline: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, \"Quantity\"), topics.map(function (topic, index) {\n    return React.createElement(Form.Field, {\n      key: index,\n      control: Radio,\n      label: topic,\n      value: topic,\n      checked: value === topic,\n      onChange: e => onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    });\n  }), \";\", React.createElement(Form.Field, {\n    control: Radio,\n    label: \"Two\",\n    value: \"2\",\n    checked: value === '2',\n    onChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    control: Radio,\n    label: \"Three\",\n    value: \"3\",\n    checked: value === '3',\n    onChange: this.handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    control: TextArea,\n    label: \"About\",\n    placeholder: \"Tell us more about you...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      addPost(formData, history);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Post\"))));\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addPost\n})(withRouter(PostForm));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/posts/PostForm.js"],"names":["React","useState","Link","withRouter","Modal","ModalHeader","ModalBody","ModalFooter","Button","Checkbox","Form","Input","Radio","Select","TextArea","PropTypes","connect","addPost","PostForm","history","text","setText","topics","group_id","subject","message","formData","setFormData","options","key","value","modal","setModal","toggle","category_id","title","url","all_groups","id","name","type","onChange","e","target","map","topic","index","handleChange","preventDefault","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport {\n  /*   Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText, */\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport {\n  Button,\n  Checkbox,\n  Form,\n  Input,\n  Radio,\n  Select,\n  TextArea\n} from 'semantic-ui-react';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({ addPost, history }) => {\n  const [text, setText] = useState('');\n  const [formData, setFormData] = useState({\n    topics: '[]',\n    group_id: '',\n    subject: '',\n    message: ''\n  });\n  const options = [\n    { key: 'm', text: 'Male', value: 'male' },\n    { key: 'f', text: 'Female', value: 'female' },\n    { key: 'o', text: 'Other', value: 'other' }\n  ];\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const topics = [\n    { category_id: '1', title: 'General', url: '/general' },\n    { category_id: '2', title: 'Recommendations', url: '/recommendations' },\n    { category_id: '3', title: 'Carpool', url: '/carpool' },\n    { category_id: '4', title: 'Lost & Found', url: '/lost_and_found' },\n    { category_id: '5', title: 'Volunteer', url: '/volunteer' },\n    { category_id: '6', title: 'Help Needed', url: '/help' },\n    { category_id: '7', title: 'Homework', url: '/homework' }\n  ];\n  const all_groups = [\n    {\n      id: 'userId',\n      group_id: 'groupID room 34',\n      name: 'room 34',\n      type: 'inner'\n    },\n    {\n      id: 'userId',\n      group_id: 'groupID grade 6',\n      name: 'grade 6 + room 34',\n      type: 'outer'\n    },\n    {\n      id: 'userId',\n      group_id: 'groupID sunshine',\n      name: 'sunshine',\n      type: 'inner'\n    },\n    {\n      id: 'userId',\n      group_id: 'groupID prek',\n      name: 'pre-k + sunshine',\n      type: 'outer'\n    }\n  ];\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <div>\n      <div className='post-form' onClick={toggle}>\n        <div className='bg-post-head p'>\n          <h6>What do you want to discuss?</h6>\n        </div>\n\n        <div className='post-create-textarea'>\n          <div className='avatar-container'>\n            <i className='fas fa-user margin-right-5 '></i>\n            <span className='new-post'>Post your inner voice </span>\n          </div>\n        </div>\n      </div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Create Post</ModalHeader>\n        <ModalBody>\n          {/*           <Form>\n            <FormGroup tag='fieldset' row>\n              <legend className='col-form-label'>Choose topics</legend>\n              <Col sm={10}>\n                {topics.map(function(topic, index) {\n                  return (\n                    <FormGroup check key={index}>\n                      <Label check>\n                        <Input\n                          type='radio'\n                          name='topics'\n                          value={topic}\n                          category={topic.category_id}\n                          onChange={e => onChange(e)}\n                        />{' '}\n                        {topic.title}\n                      </Label>\n                    </FormGroup>\n                  );\n                })}\n              </Col>\n            </FormGroup>\n            <FormGroup tag='fieldset' row>\n              <legend className='col-form-label'>\n                Choose classroom parents\n              </legend>\n              <Col sm={10}>\n                {all_groups.map(function(group, index) {\n                  return (\n                    <FormGroup check key={index}>\n                      <Label check>\n                        <Input\n                          type='radio'\n                          name='group_id'\n                          value={group.group_id}\n                          onChange={e => onChange(e)}\n                        />{' '}\n                        {group.name}\n                      </Label>\n                    </FormGroup>\n                  );\n                })}\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Input\n                type='text'\n                name='subject'\n                placeholder='Subject'\n                className=''\n                onChange={e => onChange(e)}\n              />\n            </FormGroup>\n            <FormGroup row>\n              <textarea\n                name='message'\n                cols='30'\n                rows='5'\n                placeholder='Enter your message ...'\n                onChange={e => onChange(e)}\n                required\n              />\n            </FormGroup>\n          </Form> */}\n          <Form>\n            <Form.Group widths='equal'>\n              <Form.Field\n                control={Input}\n                label='First name'\n                placeholder='First name'\n              />\n              <Form.Field\n                control={Input}\n                label='Last name'\n                placeholder='Last name'\n              />\n              <Form.Field\n                control={Select}\n                label='Gender'\n                options={options}\n                placeholder='Gender'\n              />\n            </Form.Group>\n            <Form.Group inline>\n              <label>Quantity</label>\n              {topics.map(function(topic, index) {\n                return (\n                  <Form.Field\n                    key={index}\n                    control={Radio}\n                    label={topic}\n                    value={topic}\n                    checked={value === topic}\n                    onChange={e => onChange(e)}\n                  />\n                );\n              })}\n              ;\n              <Form.Field\n                control={Radio}\n                label='Two'\n                value='2'\n                checked={value === '2'}\n                onChange={this.handleChange}\n              />\n              <Form.Field\n                control={Radio}\n                label='Three'\n                value='3'\n                checked={value === '3'}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n            <Form.Field\n              control={TextArea}\n              label='About'\n              placeholder='Tell us more about you...'\n            />\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color='primary'\n            onClick={e => {\n              e.preventDefault();\n              addPost(formData, history);\n            }}\n          >\n            Post\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addPost })(withRouter(PostForm));\n"]},"metadata":{},"sourceType":"module"}