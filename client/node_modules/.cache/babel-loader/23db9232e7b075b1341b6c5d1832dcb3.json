{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/myclasscircle.com/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/myclasscircle.com/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/myclasscircle.com/client/src/components/posts/PostForm.js\";\nimport React, { useState } from 'react';\nimport { Col, Button, Form, FormGroup, Label, Input, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({\n  addPost,\n  history\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const _useState3 = useState({\n    topic: '[]',\n    group: '',\n    subject: '',\n    message: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formData = _useState4[0],\n        setFormData = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        modal = _useState6[0],\n        setModal = _useState6[1];\n\n  const toggle = () => setModal(!modal);\n\n  const topics = [{\n    category_id: '1',\n    title: 'General',\n    url: '/general'\n  }, {\n    category_id: '2',\n    title: 'Recommendations',\n    url: '/recommendations'\n  }, {\n    category_id: '3',\n    title: 'Carpool',\n    url: '/carpool'\n  }, {\n    category_id: '4',\n    title: 'Lost & Found',\n    url: '/lost_and_found'\n  }, {\n    category_id: '5',\n    title: 'Volunteer',\n    url: '/volunteer'\n  }, {\n    category_id: '6',\n    title: 'Help Needed',\n    url: '/help'\n  }, {\n    category_id: '7',\n    title: 'Homework',\n    url: '/homework'\n  }];\n  const all_groups = [{\n    id: 'userId',\n    group_id: '',\n    name: 'room 34',\n    type: 'inner'\n  }, {\n    id: 'userId',\n    group_id: '',\n    name: 'grade 6 + room 34',\n    type: 'outer'\n  }, {\n    id: 'userId',\n    group_id: '',\n    name: 'sunshine',\n    type: 'inner'\n  }, {\n    id: 'userId',\n    group_id: '',\n    name: 'pre-k + sunshine',\n    type: 'outer'\n  }];\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"post-form\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-post-head p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Post a message...\")), React.createElement(\"div\", {\n    className: \"post-create-textarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"What do you want to discuss?\")), React.createElement(Modal, {\n    isOpen: modal,\n    fade: false,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" Create Post\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    tag: \"fieldset\",\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Choose topics\"), React.createElement(Col, {\n    sm: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, topics.map(function (topic, index) {\n    return React.createElement(FormGroup, {\n      check: true,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"topics\",\n      value: topic,\n      category: topic.category_id,\n      onChange: e => onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), ' ', topic.title));\n  }))), React.createElement(FormGroup, {\n    tag: \"fieldset\",\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Choose classroom parents\"), React.createElement(Col, {\n    sm: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, all_groups.map(function (group, index) {\n    return React.createElement(FormGroup, {\n      check: true,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: group.name,\n      value: group,\n      onChange: e => onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), ' ', group.name));\n  }))), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"text\",\n    name: \"subject\",\n    placeholder: \"Subject\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    name: \"message\",\n    cols: \"30\",\n    rows: \"5\",\n    placeholder: \"Enter your message ...\",\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      addPost(formData, history);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Post\"))));\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addPost\n})(PostForm);","map":{"version":3,"sources":["/Users/sapnablesson/myGit/myclasscircle.com/client/src/components/posts/PostForm.js"],"names":["React","useState","Col","Button","Form","FormGroup","Label","Input","FormText","Modal","ModalHeader","ModalBody","ModalFooter","PropTypes","connect","addPost","PostForm","history","text","setText","topic","group","subject","message","formData","setFormData","modal","setModal","toggle","topics","category_id","title","url","all_groups","id","group_id","name","type","onChange","e","target","value","map","index","preventDefault","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({ addPost, history }) => {\n  const [text, setText] = useState('');\n  const [formData, setFormData] = useState({\n    topic: '[]',\n    group: '',\n    subject: '',\n    message: ''\n  });\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const topics = [\n    { category_id: '1', title: 'General', url: '/general' },\n    { category_id: '2', title: 'Recommendations', url: '/recommendations' },\n    { category_id: '3', title: 'Carpool', url: '/carpool' },\n    { category_id: '4', title: 'Lost & Found', url: '/lost_and_found' },\n    { category_id: '5', title: 'Volunteer', url: '/volunteer' },\n    { category_id: '6', title: 'Help Needed', url: '/help' },\n    { category_id: '7', title: 'Homework', url: '/homework' }\n  ];\n  const all_groups = [\n    { id: 'userId', group_id: '', name: 'room 34', type: 'inner' },\n    { id: 'userId', group_id: '', name: 'grade 6 + room 34', type: 'outer' },\n    { id: 'userId', group_id: '', name: 'sunshine', type: 'inner' },\n    { id: 'userId', group_id: '', name: 'pre-k + sunshine', type: 'outer' }\n  ];\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <div>\n      <div className='post-form' onClick={toggle}>\n        <div className='bg-post-head p'>\n          <h6>Post a message...</h6>\n        </div>\n\n        <div className='post-create-textarea'>What do you want to discuss?</div>\n      </div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Create Post</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup tag='fieldset' row>\n              <legend className='col-form-label'>Choose topics</legend>\n              <Col sm={10}>\n                {topics.map(function(topic, index) {\n                  return (\n                    <FormGroup check key={index}>\n                      <Label check>\n                        <Input\n                          type='radio'\n                          name='topics'\n                          value={topic}\n                          category={topic.category_id}\n                          onChange={e => onChange(e)}\n                        />{' '}\n                        {topic.title}\n                      </Label>\n                    </FormGroup>\n                  );\n                })}\n              </Col>\n            </FormGroup>\n            <FormGroup tag='fieldset' row>\n              <legend className='col-form-label'>\n                Choose classroom parents\n              </legend>\n              <Col sm={10}>\n                {all_groups.map(function(group, index) {\n                  return (\n                    <FormGroup check key={index}>\n                      <Label check>\n                        <Input\n                          type='radio'\n                          name={group.name}\n                          value={group}\n                          onChange={e => onChange(e)}\n                        />{' '}\n                        {group.name}\n                      </Label>\n                    </FormGroup>\n                  );\n                })}\n              </Col>\n            </FormGroup>\n            <FormGroup row>\n              <Input\n                type='text'\n                name='subject'\n                placeholder='Subject'\n                onChange={e => onChange(e)}\n              />\n            </FormGroup>\n            <FormGroup row>\n              <textarea\n                name='message'\n                cols='30'\n                rows='5'\n                placeholder='Enter your message ...'\n                onChange={e => onChange(e)}\n                required\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color='primary'\n            onClick={e => {\n              e.preventDefault();\n              addPost(formData, history);\n            }}\n          >\n            Post\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addPost })(PostForm);\n"]},"metadata":{},"sourceType":"module"}