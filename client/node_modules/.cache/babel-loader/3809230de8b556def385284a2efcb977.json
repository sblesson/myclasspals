{"ast":null,"code":"var _jsxFileName = \"/Users/sapnablesson/myGit/myclasscircle.com/client/src/components/posts/Posts.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\nimport { getPosts } from '../../actions/post';\n\nconst Posts = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  const items = [{\n    name: 'home',\n    label: 'Home'\n  }, {\n    name: 'billing',\n    label: 'Billing',\n    items: [{\n      name: 'statements',\n      label: 'Statements'\n    }, {\n      name: 'reports',\n      label: 'Reports'\n    }]\n  }, {\n    name: 'settings',\n    label: 'Settings',\n    items: [{\n      name: 'profile',\n      label: 'Profile'\n    }, {\n      name: 'insurance',\n      label: 'Insurance'\n    }, {\n      name: 'notifications',\n      label: 'Notifications',\n      items: [{\n        name: 'email',\n        label: 'Email'\n      }, {\n        name: 'desktop',\n        label: 'Desktop',\n        items: [{\n          name: 'schedule',\n          label: 'Schedule'\n        }, {\n          name: 'frequency',\n          label: 'Frequency'\n        }]\n      }, {\n        name: 'sms',\n        label: 'SMS'\n      }]\n    }]\n  }];\n  return loading ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(SideNav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Posts\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), \" Welcome to the community\"), React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, posts.map(post => React.createElement(PostItem, {\n    key: post._id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))));\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);","map":{"version":3,"sources":["/Users/sapnablesson/myGit/myclasscircle.com/client/src/components/posts/Posts.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","PostItem","PostForm","getPosts","Posts","post","posts","loading","items","name","label","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\nimport { getPosts } from '../../actions/post';\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  const items = [\n    { name: 'home', label: 'Home' },\n    {\n      name: 'billing',\n      label: 'Billing',\n      items: [\n        { name: 'statements', label: 'Statements' },\n        { name: 'reports', label: 'Reports' }\n      ]\n    },\n    {\n      name: 'settings',\n      label: 'Settings',\n      items: [\n        { name: 'profile', label: 'Profile' },\n        { name: 'insurance', label: 'Insurance' },\n        {\n          name: 'notifications',\n          label: 'Notifications',\n          items: [\n            { name: 'email', label: 'Email' },\n            {\n              name: 'desktop',\n              label: 'Desktop',\n              items: [\n                { name: 'schedule', label: 'Schedule' },\n                { name: 'frequency', label: 'Frequency' }\n              ]\n            },\n            { name: 'sms', label: 'SMS' }\n          ]\n        }\n      ]\n    }\n  ];\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <SideNav />\n      <h1 className='large text-primary'>Posts</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Welcome to the community\n      </p>\n      <PostForm />\n      <div className='posts'>\n        {posts.map(post => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n"]},"metadata":{},"sourceType":"module"}