{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/modal/postmodal/PostModal.js\";\nimport React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../../actions/post';\nimport { showModal, hideModal } from '../../../actions/modal';\nimport './PostModal.scss';\n\nconst PostModal = ({\n  addPost,\n  history,\n  hideModal,\n  showModal\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const _useState3 = useState({\n    topics: '[]',\n    group_id: '',\n    subject: '',\n    message: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formData = _useState4[0],\n        setFormData = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        modal = _useState6[0],\n        setModal = _useState6[1];\n\n  const toggle = () => setModal(!modal);\n\n  const topics = [{\n    category_id: '1',\n    title: 'General',\n    url: '/general'\n  }, {\n    category_id: '2',\n    title: 'Recommendations',\n    url: '/recommendations'\n  }, {\n    category_id: '3',\n    title: 'Carpool',\n    url: '/carpool'\n  }, {\n    category_id: '4',\n    title: 'Lost & Found',\n    url: '/lost_and_found'\n  }, {\n    category_id: '5',\n    title: 'Volunteer',\n    url: '/volunteer'\n  }, {\n    category_id: '6',\n    title: 'Help Needed',\n    url: '/help'\n  }, {\n    category_id: '7',\n    title: 'Homework',\n    url: '/homework'\n  }];\n  const all_groups = [{\n    id: 'userId',\n    group_id: 'groupID room 34',\n    name: 'room 34',\n    type: 'inner'\n  }, {\n    id: 'userId',\n    group_id: 'groupID grade 6',\n    name: 'grade 6 + room 34',\n    type: 'outer'\n  }, {\n    id: 'userId',\n    group_id: 'groupID sunshine',\n    name: 'sunshine',\n    type: 'inner'\n  }, {\n    id: 'userId',\n    group_id: 'groupID prek',\n    name: 'pre-k + sunshine',\n    type: 'outer'\n  }];\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"new-post-form\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-post-head p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"h6\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"What do you want to discuss?\")), React.createElement(\"div\", {\n    className: \"post-create-textarea\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"avatar-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user margin-right-5 \",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"new-post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Post your inner voice \")))), React.createElement(Modal, {\n    isOpen: modal,\n    fade: false,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \" Create Post\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    tag: \"fieldset\",\n    className: \"post-form post-form-radio-options-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Choose Category\"), topics.map(function (topic, index) {\n    return React.createElement(FormGroup, {\n      check: true,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"topics\",\n      value: topic,\n      category: topic.category_id,\n      onChange: e => onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), ' ', topic.title));\n  })), React.createElement(FormGroup, {\n    tag: \"fieldset\",\n    className: \"post-form post-form-radio-options-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Choose Group\"), all_groups.map(function (group, index) {\n    return React.createElement(FormGroup, {\n      check: true,\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Label, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"radio\",\n      name: \"group_id\",\n      value: group.group_id,\n      onChange: e => onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), ' ', group.name));\n  })), React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"post-form-text-input\",\n    type: \"text\",\n    name: \"subject\",\n    placeholder: \"Subject\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    className: \"post-form-text-input post-form-textarea\",\n    name: \"message\",\n    cols: \"30\",\n    rows: \"5\",\n    placeholder: \"Enter your message ...\",\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      addPost(formData, history);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, \"Post\"))));\n};\n\nPostModal.propTypes = {\n  addPost: PropTypes.func.isRequired,\n  hideModal: PropTypes.object.isRequired,\n  showModal: PropTypes.object.isRequired\n};\n\nconst mapDispatchToProps = state => ({\n  hideModal: state.hideModal,\n  showModal: state.showModal\n});\n\nexport default connect(mapDispatchToProps, {\n  addPost\n})(withRouter(PostModal));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/modal/postmodal/PostModal.js"],"names":["React","useState","Link","withRouter","Col","Row","Button","Form","FormGroup","Label","Input","FormText","Modal","ModalHeader","ModalBody","ModalFooter","PropTypes","connect","addPost","showModal","hideModal","PostModal","history","text","setText","topics","group_id","subject","message","formData","setFormData","modal","setModal","toggle","category_id","title","url","all_groups","id","name","type","onChange","e","target","value","map","topic","index","group","preventDefault","propTypes","func","isRequired","object","mapDispatchToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport {\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../../actions/post';\n\nimport { showModal, hideModal } from '../../../actions/modal';\n\nimport './PostModal.scss';\n\nconst PostModal = ({ addPost, history, hideModal, showModal }) => {\n  const [text, setText] = useState('');\n  const [formData, setFormData] = useState({\n    topics: '[]',\n    group_id: '',\n    subject: '',\n    message: ''\n  });\n\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => setModal(!modal);\n\n  const topics = [\n    { category_id: '1', title: 'General', url: '/general' },\n    { category_id: '2', title: 'Recommendations', url: '/recommendations' },\n    { category_id: '3', title: 'Carpool', url: '/carpool' },\n    { category_id: '4', title: 'Lost & Found', url: '/lost_and_found' },\n    { category_id: '5', title: 'Volunteer', url: '/volunteer' },\n    { category_id: '6', title: 'Help Needed', url: '/help' },\n    { category_id: '7', title: 'Homework', url: '/homework' }\n  ];\n  const all_groups = [\n    {\n      id: 'userId',\n      group_id: 'groupID room 34',\n      name: 'room 34',\n      type: 'inner'\n    },\n    {\n      id: 'userId',\n      group_id: 'groupID grade 6',\n      name: 'grade 6 + room 34',\n      type: 'outer'\n    },\n    {\n      id: 'userId',\n      group_id: 'groupID sunshine',\n      name: 'sunshine',\n      type: 'inner'\n    },\n    {\n      id: 'userId',\n      group_id: 'groupID prek',\n      name: 'pre-k + sunshine',\n      type: 'outer'\n    }\n  ];\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <div>\n      <div className='new-post-form' onClick={toggle}>\n        <div className='bg-post-head p'>\n          <h6>What do you want to discuss?</h6>\n        </div>\n\n        <div className='post-create-textarea'>\n          <div className='avatar-container'>\n            <i className='fas fa-user margin-right-5 '></i>\n            <span className='new-post'>Post your inner voice </span>\n          </div>\n        </div>\n      </div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Create Post</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup\n              tag='fieldset'\n              className='post-form post-form-radio-options-container'\n            >\n              <legend className='col-form-label'>Choose Category</legend>\n              {topics.map(function(topic, index) {\n                return (\n                  <FormGroup check key={index}>\n                    <Label check>\n                      <Input\n                        type='radio'\n                        name='topics'\n                        value={topic}\n                        category={topic.category_id}\n                        onChange={e => onChange(e)}\n                      />{' '}\n                      {topic.title}\n                    </Label>\n                  </FormGroup>\n                );\n              })}\n            </FormGroup>\n            <FormGroup\n              tag='fieldset'\n              className='post-form post-form-radio-options-container'\n            >\n              <legend className='col-form-label'>Choose Group</legend>\n              {all_groups.map(function(group, index) {\n                return (\n                  <FormGroup check key={index}>\n                    <Label check>\n                      <Input\n                        type='radio'\n                        name='group_id'\n                        value={group.group_id}\n                        onChange={e => onChange(e)}\n                      />{' '}\n                      {group.name}\n                    </Label>\n                  </FormGroup>\n                );\n              })}\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <Input\n                className='post-form-text-input'\n                type='text'\n                name='subject'\n                placeholder='Subject'\n                onChange={e => onChange(e)}\n              />\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <textarea\n                className='post-form-text-input post-form-textarea'\n                name='message'\n                cols='30'\n                rows='5'\n                placeholder='Enter your message ...'\n                onChange={e => onChange(e)}\n                required\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color='primary'\n            onClick={e => {\n              e.preventDefault();\n              addPost(formData, history);\n            }}\n          >\n            Post\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nPostModal.propTypes = {\n  addPost: PropTypes.func.isRequired,\n  hideModal: PropTypes.object.isRequired,\n  showModal: PropTypes.object.isRequired\n};\n\nconst mapDispatchToProps = state => ({\n  hideModal: state.hideModal,\n  showModal: state.showModal\n});\n\nexport default connect(mapDispatchToProps, { addPost })(withRouter(PostModal));\n"]},"metadata":{},"sourceType":"module"}