{"ast":null,"code":"var _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/dashboard/School.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteSchool } from '../../actions/profile';\nimport SelectSearch from 'react-select-search';\nimport './School.scss';\n\nconst School = ({\n  school,\n  deleteSchool\n}) => {\n  const schools = school.map(schoolItem => React.createElement(\"div\", {\n    key: schoolItem._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, schoolItem.childName), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, schoolItem.schoolName), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, schoolItem.grade), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, schoolItem.classRoom), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => deleteSchool(schoolItem._id),\n    className: \"btn btn-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Delete\"))));\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"profile-component-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"profile-component-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    class: \"profile-edit-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(\"h4\", {\n    class: \"profile-component-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Schools\")), React.createElement(\"div\", {\n    class: \"profile-component-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"profile-content-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, schools))));\n};\n\nSchool.propTypes = {\n  school: PropTypes.array.isRequired,\n  deleteSchool: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  deleteSchool\n})(School);","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/dashboard/School.js"],"names":["React","Fragment","PropTypes","connect","deleteSchool","SelectSearch","School","school","schools","map","schoolItem","_id","childName","schoolName","grade","classRoom","propTypes","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,uBAA7B;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,eAAP;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUH,EAAAA;AAAV,CAAD,KAA8B;AAC3C,QAAMI,OAAO,GAAGD,MAAM,CAACE,GAAP,CAAWC,UAAU,IACnC;AAAK,IAAA,GAAG,EAAEA,UAAU,CAACC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,UAAU,CAACE,SAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,UAAU,CAACG,UAAlB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,UAAU,CAACI,KAAlB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,UAAU,CAACK,SAAlB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,OAAO,EAAE,MAAMX,YAAY,CAACM,UAAU,CAACC,GAAZ,CAD7B;AAEE,IAAA,SAAS,EAAC,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CALF,CADc,CAAhB;AAiBA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,6BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,0BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAI,IAAA,KAAK,EAAC,yBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF,EAKE;AAAK,IAAA,KAAK,EAAC,2BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCH,OAAnC,CADF,CALF,CADF,CADF;AAaD,CA/BD;;AAiCAF,MAAM,CAACU,SAAP,GAAmB;AACjBT,EAAAA,MAAM,EAAEL,SAAS,CAACe,KAAV,CAAgBC,UADP;AAEjBd,EAAAA,YAAY,EAAEF,SAAS,CAACiB,IAAV,CAAeD;AAFZ,CAAnB;AAKA,eAAef,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAAgCE,MAAhC,CAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteSchool } from '../../actions/profile';\nimport SelectSearch from 'react-select-search';\nimport './School.scss';\nconst School = ({ school, deleteSchool }) => {\n  const schools = school.map(schoolItem => (\n    <div key={schoolItem._id}>\n      <span>{schoolItem.childName}</span>\n      <span>{schoolItem.schoolName}</span>\n      <span>{schoolItem.grade}</span>\n      <span>{schoolItem.classRoom}</span>\n      <span>\n        <button\n          onClick={() => deleteSchool(schoolItem._id)}\n          className='btn btn-danger'\n        >\n          Delete\n        </button>\n      </span>\n    </div>\n  ));\n\n  return (\n    <Fragment>\n      <div class='profile-component-container'>\n        <div class='profile-component-header'>\n          <button class='profile-edit-button'>Edit</button>\n          <h4 class='profile-component-title'>Schools</h4>\n        </div>\n        <div class='profile-component-content'>\n          <div class='profile-content-item'>{schools}</div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nSchool.propTypes = {\n  school: PropTypes.array.isRequired,\n  deleteSchool: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteSchool })(School);\n"]},"metadata":{},"sourceType":"module"}