{"ast":null,"code":"import _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/common/ModalWrapper.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Row, Button, Form, FormGroup, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst ModalWrapper = props => {\n  const handleBackgroundClick = e => {\n    if (e.target === e.currentTarget) props.hideModal();\n  };\n\n  const onOk = () => {\n    props.onOk();\n    props.hideModal();\n  };\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        modal = _useState2[0],\n        setModal = _useState2[1];\n\n  const toggle = () => !props.isOpen;\n\n  const okButton = props.showOk ? React.createElement(\"button\", {\n    onClick: onOk,\n    disabled: props.okDisabled,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, props.okText) : null;\n  return React.createElement(Modal, {\n    isOpen: props.isOpen,\n    fade: false,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.title), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, 'he hu '), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: props.onOk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, props.okText)));\n};\n\nModalWrapper.propTypes = {\n  // props\n  title: PropTypes.string,\n  showOk: PropTypes.bool,\n  okText: PropTypes.string,\n  okDisabled: PropTypes.bool,\n  width: PropTypes.number,\n  style: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.element, PropTypes.string]).isRequired,\n  // methods\n  hideModal: PropTypes.func,\n  onOk: PropTypes.func,\n  isOpen: PropTypes.bool\n};\nModalWrapper.defaultProps = {\n  title: '',\n  isOpen: false,\n  showOk: true,\n  okText: 'OK',\n  okDisabled: false,\n  width: 400,\n  onOk: () => {}\n};\nexport default ModalWrapper;","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/common/ModalWrapper.js"],"names":["React","useState","PropTypes","Col","Row","Button","Form","FormGroup","FormText","Modal","ModalHeader","ModalBody","ModalFooter","ModalWrapper","props","handleBackgroundClick","e","target","currentTarget","hideModal","onOk","modal","setModal","toggle","isOpen","okButton","showOk","okDisabled","okText","title","propTypes","string","bool","width","number","style","object","children","oneOfType","array","element","isRequired","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  FormText,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\nconst ModalWrapper = props => {\n  const handleBackgroundClick = e => {\n    if (e.target === e.currentTarget) props.hideModal();\n  };\n\n  const onOk = () => {\n    props.onOk();\n    props.hideModal();\n  };\n  const [modal, setModal] = useState(false);\n\n  const toggle = () => !props.isOpen;\n\n  const okButton = props.showOk ? (\n    <button onClick={onOk} disabled={props.okDisabled}>\n      {props.okText}\n    </button>\n  ) : null;\n\n  return (\n    <Modal isOpen={props.isOpen} fade={false} toggle={toggle}>\n      <ModalHeader toggle={toggle}>{props.title}</ModalHeader>\n      <ModalBody>{'he hu '}</ModalBody>\n      <ModalFooter>\n        <Button color='primary' onClick={props.onOk}>\n          {props.okText}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nModalWrapper.propTypes = {\n  // props\n  title: PropTypes.string,\n  showOk: PropTypes.bool,\n  okText: PropTypes.string,\n  okDisabled: PropTypes.bool,\n  width: PropTypes.number,\n  style: PropTypes.object,\n  children: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.element,\n    PropTypes.string\n  ]).isRequired,\n\n  // methods\n  hideModal: PropTypes.func,\n  onOk: PropTypes.func,\n  isOpen: PropTypes.bool\n};\n\nModalWrapper.defaultProps = {\n  title: '',\n  isOpen: false,\n  showOk: true,\n  okText: 'OK',\n  okDisabled: false,\n  width: 400,\n  onOk: () => {}\n};\n\nexport default ModalWrapper;\n"]},"metadata":{},"sourceType":"module"}