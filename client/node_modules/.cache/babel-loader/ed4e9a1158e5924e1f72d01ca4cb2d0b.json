{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/profile/AddChildForm.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\nimport { Input, Grid, Select, Radio, Form, Button, Checkbox, Search } from 'semantic-ui-react';\nimport './AddChildForm.scss';\n\nconst AddChildForm = ({\n  community\n}) => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const childData = {\n    id: 2,\n    childName: 'Leanne Graham',\n    grade: 'Apt. 556',\n    classroom: 'Gwenborough',\n    school: {\n      name: 'Kulas Light',\n      street: 'Apt. 556',\n      suite: 'Apt. 556',\n      city: 'Apt. 556',\n      state: 'California',\n      zipcode: '92998-3874'\n    }\n  };\n  /*   const childData = {\n    id: 2,\n    childName: '',\n    grade: '',\n    classroom: '',\n    school: {\n      name: '',\n      street: '',\n      suite: '',\n      city: '',\n      state: '',\n      zipcode: ''\n    }\n  }; */\n\n  const yourInfo = React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Form.Field, {\n    control: Input,\n    placeholder: \"Child Name\",\n    name: \"childName\",\n    defaultValue: childData.childName,\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, ' ', React.createElement(Search, {\n    fluid: true\n    /*      //loading={isLoading}\n    //onResultSelect={this.handleResultSelect}\n    onSearchChange={_.debounce(this.handleSearchChange, 500, {\n      leading: true\n    })}\n    results={results}\n    value={value}\n    {...this.props} */\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(Form.Field, {\n    control: Input,\n    placeholder: \"Grade\",\n    name: \"grade\",\n    defaultValue: childData.grade,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    control: Input,\n    placeholder: \"Class Room\",\n    name: \"classroom\",\n    defaultValue: childData.classroom,\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(Form.Field, {\n    control: Button,\n    color: \"pink\",\n    onClick: e => {\n      e.preventDefault(); //addSchool(formData, history);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Add + child\"));\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, yourInfo);\n};\n\nAddChildForm.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  community: PropTypes.array\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  isLoading: state.school.isLoading\n});\n\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile\n})(withRouter(AddChildForm));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/profile/AddChildForm.js"],"names":["React","useEffect","useState","Fragment","Link","withRouter","Redirect","PropTypes","connect","_","createProfile","getCurrentProfile","Input","Grid","Select","Radio","Form","Button","Checkbox","Search","AddChildForm","community","formData","setFormData","childData","id","childName","grade","classroom","school","name","street","suite","city","state","zipcode","yourInfo","e","onChange","preventDefault","target","value","propTypes","func","isRequired","profile","object","array","mapStateToProps","isLoading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport _ from 'lodash';\n\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nimport {\n  Input,\n  Grid,\n  Select,\n  Radio,\n  Form,\n  Button,\n  Checkbox,\n  Search\n} from 'semantic-ui-react';\nimport './AddChildForm.scss';\n\nconst AddChildForm = ({ community }) => {\n  const [formData, setFormData] = useState({});\n  const childData = {\n    id: 2,\n    childName: 'Leanne Graham',\n    grade: 'Apt. 556',\n    classroom: 'Gwenborough',\n    school: {\n      name: 'Kulas Light',\n      street: 'Apt. 556',\n      suite: 'Apt. 556',\n      city: 'Apt. 556',\n      state: 'California',\n      zipcode: '92998-3874'\n    }\n  };\n  /*   const childData = {\n    id: 2,\n    childName: '',\n    grade: '',\n    classroom: '',\n    school: {\n      name: '',\n      street: '',\n      suite: '',\n      city: '',\n      state: '',\n      zipcode: ''\n    }\n  }; */\n\n  const yourInfo = (\n    <Form>\n      <Form.Field\n        control={Input}\n        placeholder='Child Name'\n        name='childName'\n        defaultValue={childData.childName}\n        onChange={e => onChange(e)}\n        required\n      />\n      <Form.Field>\n        {' '}\n        <Search\n          fluid\n          /*      //loading={isLoading}\n          //onResultSelect={this.handleResultSelect}\n          onSearchChange={_.debounce(this.handleSearchChange, 500, {\n            leading: true\n          })}\n          results={results}\n          value={value}\n          {...this.props} */\n        />\n      </Form.Field>\n\n      {/*       <Form.Field widths='equal'>\n        <Form.Select\n          fluid\n          //options={userData.address.state}\n          placeholder='Gender'\n        />\n      </Form.Field> */}\n      <Form.Field\n        control={Input}\n        placeholder='Grade'\n        name='grade'\n        defaultValue={childData.grade}\n        onChange={e => onChange(e)}\n      />\n      <Form.Field\n        control={Input}\n        placeholder='Class Room'\n        name='classroom'\n        defaultValue={childData.classroom}\n        onChange={e => onChange(e)}\n      />\n      <Form.Field\n        control={Button}\n        color='pink'\n        onClick={e => {\n          e.preventDefault();\n          //addSchool(formData, history);\n        }}\n      >\n        Add + child\n      </Form.Field>\n    </Form>\n  );\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return <Fragment>{yourInfo}</Fragment>;\n};\n\nAddChildForm.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  community: PropTypes.array\n};\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  isLoading: state.school.isLoading\n});\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile\n})(withRouter(AddChildForm));\n"]},"metadata":{},"sourceType":"module"}