{"ast":null,"code":"var _jsxFileName = \"/Users/sapnablesson/myGit/myclasscircle.com/client/src/containers/dropdownmenu/DropDownMenu.js\";\nimport React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../../actions/auth';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './DropDownMenu.scss'; // TODO: This is missing functionality for sub-menu here from SUI core examples.\n// The \"Publish To Web\" item should contain a sub-menu.\n\nconst DropDownMenu = ({\n  logout\n}) => React.createElement(Dropdown, {\n  icon: \"header-icon big far fa-user-circle\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(Dropdown.Menu, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(Dropdown.Item, {\n  text: \"Profile\",\n  as: Link,\n  to: \"/my-profile\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), React.createElement(Dropdown.Divider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(Dropdown.Item, {\n  icon: \"far fa-cog\",\n  text: \"Settings\",\n  as: Link,\n  to: \"/my-profile\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), React.createElement(Dropdown.Item, {\n  icon: \"bookmark\",\n  text: \"Bookmarks\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}), React.createElement(Dropdown.Divider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}), React.createElement(Dropdown.Item, {\n  icon: \"sign-out\",\n  text: \"Log Out\",\n  onClick: logout,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n})));\n\nDropDownMenu.propTypes = {\n  logout: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  logout\n})(DropDownMenu);","map":{"version":3,"sources":["/Users/sapnablesson/myGit/myclasscircle.com/client/src/containers/dropdownmenu/DropDownMenu.js"],"names":["React","Dropdown","Link","logout","connect","PropTypes","DropDownMenu","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,qBAAP,C,CAEA;AACA;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEH,EAAAA;AAAF,CAAD,KACnB,oBAAC,QAAD;AAAU,EAAA,IAAI,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD,CAAU,IAAV;AAAe,EAAA,IAAI,EAAC,SAApB;AAA8B,EAAA,EAAE,EAAED,IAAlC;AAAwC,EAAA,EAAE,EAAC,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAGE,oBAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EAIE,oBAAC,QAAD,CAAU,IAAV;AACE,EAAA,IAAI,EAAC,YADP;AAEE,EAAA,IAAI,EAAC,UAFP;AAGE,EAAA,EAAE,EAAEA,IAHN;AAIE,EAAA,EAAE,EAAC,aAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,EAUE,oBAAC,QAAD,CAAU,IAAV;AAAe,EAAA,IAAI,EAAC,UAApB;AAA+B,EAAA,IAAI,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAVF,EAWE,oBAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAXF,EAYE,oBAAC,QAAD,CAAU,IAAV;AAAe,EAAA,IAAI,EAAC,UAApB;AAA+B,EAAA,IAAI,EAAC,SAApC;AAA8C,EAAA,OAAO,EAAEC,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAZF,CADF,CADF;;AAmBAG,YAAY,CAACC,SAAb,GAAyB;AACvBJ,EAAAA,MAAM,EAAEE,SAAS,CAACG,IAAV,CAAeC;AADA,CAAzB;AAIA,eAAeL,OAAO,CAAC,IAAD,EAAO;AAAED,EAAAA;AAAF,CAAP,CAAP,CAA0BG,YAA1B,CAAf","sourcesContent":["import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nimport { logout } from '../../actions/auth';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './DropDownMenu.scss';\n\n// TODO: This is missing functionality for sub-menu here from SUI core examples.\n// The \"Publish To Web\" item should contain a sub-menu.\n\nconst DropDownMenu = ({ logout }) => (\n  <Dropdown icon='header-icon big far fa-user-circle'>\n    <Dropdown.Menu>\n      <Dropdown.Item text='Profile' as={Link} to='/my-profile' />\n\n      <Dropdown.Divider />\n      <Dropdown.Item\n        icon='far fa-cog'\n        text='Settings'\n        as={Link}\n        to='/my-profile'\n      />\n      <Dropdown.Item icon='bookmark' text='Bookmarks' />\n      <Dropdown.Divider />\n      <Dropdown.Item icon='sign-out' text='Log Out' onClick={logout} />\n    </Dropdown.Menu>\n  </Dropdown>\n);\n\nDropDownMenu.propTypes = {\n  logout: PropTypes.func.isRequired\n};\n\nexport default connect(null, { logout })(DropDownMenu);\n"]},"metadata":{},"sourceType":"module"}