{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/modal/account/AccountModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Search, Input, Grid, Header, Segment, Label } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { modal } from '../../../../actions/modal';\nimport ModalManager from '../../common/M';\nimport { Col, Row, Button, Form, FormGroup, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport './AccountModal.scss';\n\nconst AccountModal = ({\n  isOpen,\n  history\n}) => {\n  const _useState = useState({\n    schoolName: '',\n    schoolCity: '',\n    schoolState: '',\n    schoolZip: '',\n    grade: '',\n    classRoom: '',\n    childName: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1]; //const [modal, setModal] = useState(false);\n\n  /* \n  useEffect(() => {\n    getSchoolData();\n  }, [getSchoolData]); */\n\n\n  const toggle = () => setModal(!modal);\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const handleResultSelect = (e, {\n    result\n  }) => {\n    setFormData(_objectSpread({}, formData, {\n      ['schoolName']: result.title\n    }));\n  };\n\n  const handleSearchOnBlur = event => {\n    value = event.target && event.target.value ? event.target.value : '';\n    setTimeout(() => {\n      isLoading = false;\n\n      if (value) {\n        getSchoolData(value);\n      }\n    }, 300);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Modal, {\n    isOpen: isOpen,\n    fade: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, 'Edit Account'), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    className: \"account-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Your name\",\n    name: \"username\",\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    className: \"account-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"account-form-text-input\",\n    type: \"text\",\n    name: \"email\" //value={grade}\n    ,\n    placeholder: \"Email\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    className: \"account-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"account-form-text-input\",\n    type: \"text\",\n    name: \"street\" //value={classRoom}\n    ,\n    placeholder: \"Street\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault(); //addSchool(formData, history);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Save\"))));\n};\n\nAccountModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isOpen: state.modal.isOpen\n  };\n};\n\nexport default connect(mapStateToProps, {})(withRouter(AccountModal));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/modal/account/AccountModal.js"],"names":["React","useState","useEffect","connect","Link","withRouter","Search","Input","Grid","Header","Segment","Label","_","modal","ModalManager","Col","Row","Button","Form","FormGroup","FormText","Modal","ModalHeader","ModalBody","ModalFooter","PropTypes","AccountModal","isOpen","history","schoolName","schoolCity","schoolState","schoolZip","grade","classRoom","childName","formData","setFormData","toggle","setModal","onChange","e","target","name","value","handleResultSelect","result","title","handleSearchOnBlur","event","setTimeout","isLoading","getSchoolData","preventDefault","propTypes","bool","isRequired","mapStateToProps","state","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Link, withRouter } from 'react-router-dom';\nimport { Search, Input, Grid, Header, Segment, Label } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { modal } from '../../../../actions/modal';\n\nimport ModalManager from '../../common/M'\n\nimport {\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  FormText,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\nimport PropTypes from 'prop-types';\nimport './AccountModal.scss';\n\nconst AccountModal = ({ isOpen, history }) => {\n  const [formData, setFormData] = useState({\n    schoolName: '',\n    schoolCity: '',\n    schoolState: '',\n    schoolZip: '',\n    grade: '',\n    classRoom: '',\n    childName: ''\n  });\n\n  //const [modal, setModal] = useState(false);\n  /* \n  useEffect(() => {\n    getSchoolData();\n  }, [getSchoolData]); */\n\n  const toggle = () => setModal(!modal);\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const handleResultSelect = (e, { result }) => {\n    setFormData({ ...formData, ['schoolName']: result.title });\n  };\n\n  const handleSearchOnBlur = event => {\n    value = event.target && event.target.value ? event.target.value : '';\n    setTimeout(() => {\n      isLoading = false;\n\n      if (value) {\n        getSchoolData(value);\n      }\n    }, 300);\n  };\n\n  return (\n    <div>\n      <Modal isOpen={isOpen} fade={false}>\n        <ModalHeader>{'Edit Account'}</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup className='account-form'>\n              <Input\n                placeholder='Your name'\n                name='username'\n                onChange={e => onChange(e)}\n                required\n              />\n            </FormGroup>\n            <FormGroup className='account-form'>\n              <Input\n                className='account-form-text-input'\n                type='text'\n                name='email'\n                //value={grade}\n                placeholder='Email'\n                onChange={e => onChange(e)}\n              />\n            </FormGroup>\n            <FormGroup className='account-form'>\n              <Input\n                className='account-form-text-input'\n                type='text'\n                name='street'\n                //value={classRoom}\n                placeholder='Street'\n                onChange={e => onChange(e)}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color='primary'\n            onClick={e => {\n              e.preventDefault();\n              //addSchool(formData, history);\n            }}\n          >\n            Save\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nAccountModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired\n};\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isOpen: state.modal.isOpen\n  };\n};\n\nexport default connect(mapStateToProps, {})(withRouter(AccountModal));\n"]},"metadata":{},"sourceType":"module"}