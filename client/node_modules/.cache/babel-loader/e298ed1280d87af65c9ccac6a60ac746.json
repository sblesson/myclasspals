{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/modal/profilemodal/ProfileModal.js\";\nimport React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Search, Input, Grid, Header, Segment, Label } from 'semantic-ui-react';\nimport _ from 'lodash';\nimport { Col, Row, Button, Form, FormGroup, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addSchool } from '../../../actions/profile';\nimport './ProfileModal.scss';\n\nconst ProfileModal = ({\n  addSchool,\n  history,\n  getSchoolData,\n  leftnav: {\n    leftnav,\n    loading\n  }\n}) => {\n  const _useState = useState({\n    schoolName: '',\n    schoolCity: '',\n    schoolState: '',\n    schoolZip: '',\n    grade: '',\n    classRoom: '',\n    childName: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modal = _useState4[0],\n        setModal = _useState4[1];\n\n  const _useState5 = useState({\n    isLoading: false,\n    results: [],\n    value: ''\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        schoolData = _useState6[0],\n        setSchoolData = _useState6[1];\n\n  const source = _.times(5, () => ({\n    title: 'warm',\n    description: 'cute',\n    price: 'uddu'\n  }));\n\n  const resultRenderer = ({\n    title\n  }) => React.createElement(Label, {\n    content: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  });\n\n  resultRenderer.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string\n  };\n\n  const toggle = () => setModal(!modal);\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const handleResultSelect = (e, {\n    result\n  }) => {\n    setSchoolData(_objectSpread({}, schoolData, {\n      ['value']: result.title\n    })); //#TODO formData\n  };\n\n  const handleSearchChange = (e, {\n    value\n  }) => {\n    console.log(value, schoolData);\n    setSchoolData(_objectSpread({}, schoolData, {\n      ['isLoading']: true,\n      ['value']: value\n    }));\n    setTimeout(() => {\n      if (schoolData.value && schoolData.value.length < 1) return setSchoolData({\n        isLoading: false,\n        results: [],\n        value: ''\n      });\n      const re = new RegExp(_.escapeRegExp(schoolData.value), 'i');\n\n      const isMatch = result => re.test(result.title);\n\n      setSchoolData({\n        isLoading: false,\n        results: _.filter(source, isMatch)\n      });\n    }, 300);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"new-post-form\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"profile-action-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-plus-circle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"add-more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Add more child?\"))), React.createElement(Modal, {\n    isOpen: modal,\n    fade: false,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Connect to your child's class community\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Input, {\n    placeholder: \"Name of Child\",\n    name: \"childName\",\n    onChange: e => onChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(Search, {\n    placeholder: \"Type school name\",\n    loading: schoolData.isLoading,\n    onResultSelect: handleResultSelect,\n    onSearchChange: _.debounce(handleSearchChange, 500, {\n      leading: true\n    }),\n    results: schoolData.results,\n    value: schoolData.value //resultRenderer={resultRenderer}\n    ,\n    name: \"schoolName\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })))), React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"post-form-text-input\",\n    type: \"text\",\n    name: \"grade\" //value={grade}\n    ,\n    placeholder: \"* Grade\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    className: \"post-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(Input, {\n    className: \"post-form-text-input\",\n    type: \"text\",\n    name: \"classRoom\" //value={classRoom}\n    ,\n    placeholder: \"Class Room\",\n    onChange: e => onChange(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  })))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      addSchool(formData, history);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Save\"))));\n};\n\nProfileModal.propTypes = {\n  addSchool: PropTypes.func.isRequired,\n  getSchoolData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    schoolData: state.schoolData\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addSchool\n})(withRouter(ProfileModal));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/modal/profilemodal/ProfileModal.js"],"names":["React","useState","Link","withRouter","Search","Input","Grid","Header","Segment","Label","_","Col","Row","Button","Form","FormGroup","FormText","Modal","ModalHeader","ModalBody","ModalFooter","PropTypes","connect","addSchool","ProfileModal","history","getSchoolData","leftnav","loading","schoolName","schoolCity","schoolState","schoolZip","grade","classRoom","childName","formData","setFormData","modal","setModal","isLoading","results","value","schoolData","setSchoolData","source","times","title","description","price","resultRenderer","propTypes","string","toggle","onChange","e","target","name","handleResultSelect","result","handleSearchChange","console","log","setTimeout","length","re","RegExp","escapeRegExp","isMatch","test","filter","debounce","leading","preventDefault","func","isRequired","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,MAA9B,EAAsCC,OAAtC,EAA+CC,KAA/C,QAA4D,mBAA5D;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SACEC,GADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,KAPF,EAQEC,WARF,EASEC,SATF,EAUEC,WAVF,QAWO,YAXP;AAaA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,OAAO,qBAAP;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAED,EAAAA,SAAF;AAAaE,EAAAA,OAAb;AAAwBC,EAAAA,aAAxB;AACpBC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AADW,CAAD,KACiB;AAAA,oBACJ3B,QAAQ,CAAC;AACvC4B,IAAAA,UAAU,EAAE,EAD2B;AAEvCC,IAAAA,UAAU,EAAE,EAF2B;AAGvCC,IAAAA,WAAW,EAAE,EAH0B;AAIvCC,IAAAA,SAAS,EAAE,EAJ4B;AAKvCC,IAAAA,KAAK,EAAE,EALgC;AAMvCC,IAAAA,SAAS,EAAE,EAN4B;AAOvCC,IAAAA,SAAS,EAAE;AAP4B,GAAD,CADJ;AAAA;AAAA,QAC7BC,QAD6B;AAAA,QACnBC,WADmB;;AAAA,qBAWVpC,QAAQ,CAAC,KAAD,CAXE;AAAA;AAAA,QAW7BqC,KAX6B;AAAA,QAWtBC,QAXsB;;AAAA,qBAaAtC,QAAQ,CAAC;AAC3CuC,IAAAA,SAAS,EAAE,KADgC;AAE3CC,IAAAA,OAAO,EAAE,EAFkC;AAG3CC,IAAAA,KAAK,EAAE;AAHoC,GAAD,CAbR;AAAA;AAAA,QAa7BC,UAb6B;AAAA,QAajBC,aAbiB;;AAmBpC,QAAMC,MAAM,GAAGnC,CAAC,CAACoC,KAAF,CAAQ,CAAR,EAAW,OAAO;AAC/BC,IAAAA,KAAK,EAAE,MADwB;AAE/BC,IAAAA,WAAW,EAAE,MAFkB;AAG/BC,IAAAA,KAAK,EAAE;AAHwB,GAAP,CAAX,CAAf;;AAMA,QAAMC,cAAc,GAAG,CAAC;AAAEH,IAAAA;AAAF,GAAD,KAAe,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtC;;AAEAG,EAAAA,cAAc,CAACC,SAAf,GAA2B;AACzBJ,IAAAA,KAAK,EAAE1B,SAAS,CAAC+B,MADQ;AAEzBJ,IAAAA,WAAW,EAAE3B,SAAS,CAAC+B;AAFE,GAA3B;;AAKA,QAAMC,MAAM,GAAG,MAAMd,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,QAAMgB,QAAQ,GAAGC,CAAC,IAChBlB,WAAW,mBAAMD,QAAN;AAAgB,KAACmB,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASd;AAA1C,KADb;;AAGA,QAAMgB,kBAAkB,GAAG,CAACH,CAAD,EAAI;AAAEI,IAAAA;AAAF,GAAJ,KAAmB;AAC5Cf,IAAAA,aAAa,mBAAMD,UAAN;AAAkB,OAAC,OAAD,GAAWgB,MAAM,CAACZ;AAApC,OAAb,CAD4C,CAE5C;AACD,GAHD;;AAKA,QAAMa,kBAAkB,GAAG,CAACL,CAAD,EAAI;AAAEb,IAAAA;AAAF,GAAJ,KAAkB;AAC3CmB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,KAAZ,EAAmBC,UAAnB;AACAC,IAAAA,aAAa,mBAAMD,UAAN;AAAkB,OAAC,WAAD,GAAe,IAAjC;AAAuC,OAAC,OAAD,GAAWD;AAAlD,OAAb;AACAqB,IAAAA,UAAU,CAAC,MAAM;AACf,UAAIpB,UAAU,CAACD,KAAX,IAAoBC,UAAU,CAACD,KAAX,CAAiBsB,MAAjB,GAA0B,CAAlD,EACE,OAAOpB,aAAa,CAAC;AACnBJ,QAAAA,SAAS,EAAE,KADQ;AAEnBC,QAAAA,OAAO,EAAE,EAFU;AAGnBC,QAAAA,KAAK,EAAE;AAHY,OAAD,CAApB;AAMF,YAAMuB,EAAE,GAAG,IAAIC,MAAJ,CAAWxD,CAAC,CAACyD,YAAF,CAAexB,UAAU,CAACD,KAA1B,CAAX,EAA6C,GAA7C,CAAX;;AACA,YAAM0B,OAAO,GAAGT,MAAM,IAAIM,EAAE,CAACI,IAAH,CAAQV,MAAM,CAACZ,KAAf,CAA1B;;AAEAH,MAAAA,aAAa,CAAC;AACZJ,QAAAA,SAAS,EAAE,KADC;AAEZC,QAAAA,OAAO,EAAE/B,CAAC,CAAC4D,MAAF,CAASzB,MAAT,EAAiBuB,OAAjB;AAFG,OAAD,CAAb;AAID,KAfS,EAeP,GAfO,CAAV;AAgBD,GAnBD;;AAqBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAEf,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,CADF,EAOE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEf,KAAf;AAAsB,IAAA,IAAI,EAAE,KAA5B;AAAmC,IAAA,MAAM,EAAEe,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,yCADH,CADF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,eADd;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,QAAQ,EAAEE,CAAC,IAAID,QAAQ,CAACC,CAAD,CAHzB;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EASE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,kBADd;AAEE,IAAA,OAAO,EAAEZ,UAAU,CAACH,SAFtB;AAGE,IAAA,cAAc,EAAEkB,kBAHlB;AAIE,IAAA,cAAc,EAAEhD,CAAC,CAAC6D,QAAF,CAAWX,kBAAX,EAA+B,GAA/B,EAAoC;AAClDY,MAAAA,OAAO,EAAE;AADyC,KAApC,CAJlB;AAOE,IAAA,OAAO,EAAE7B,UAAU,CAACF,OAPtB;AAQE,IAAA,KAAK,EAAEE,UAAU,CAACD,KARpB,CASE;AATF;AAUE,IAAA,IAAI,EAAC,YAVP;AAWE,IAAA,QAAQ,EAAEa,CAAC,IAAID,QAAQ,CAACC,CAAD,CAXzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CATF,EA4BE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,OAHP,CAIE;AAJF;AAKE,IAAA,WAAW,EAAC,SALd;AAME,IAAA,QAAQ,EAAEA,CAAC,IAAID,QAAQ,CAACC,CAAD,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5BF,EAsCE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,sBADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,WAHP,CAIE;AAJF;AAKE,IAAA,WAAW,EAAC,YALd;AAME,IAAA,QAAQ,EAAEA,CAAC,IAAID,QAAQ,CAACC,CAAD,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtCF,CADF,CAJF,EAuDE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAEA,CAAC,IAAI;AACZA,MAAAA,CAAC,CAACkB,cAAF;AACAlD,MAAAA,SAAS,CAACa,QAAD,EAAWX,OAAX,CAAT;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAvDF,CAPF,CADF;AA6ED,CA7ID;;AA+IAD,YAAY,CAAC2B,SAAb,GAAyB;AACvB5B,EAAAA,SAAS,EAAEF,SAAS,CAACqD,IAAV,CAAeC,UADH;AAEvBjD,EAAAA,aAAa,EAAEL,SAAS,CAACqD,IAAV,CAAeC;AAFP,CAAzB;;AAKA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLlC,IAAAA,UAAU,EAAEkC,KAAK,CAAClC;AADb,GAAP;AAGD,CAJD;;AAMA,eAAerB,OAAO,CAACsD,eAAD,EAAkB;AAAErD,EAAAA;AAAF,CAAlB,CAAP,CACbpB,UAAU,CAACqB,YAAD,CADG,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Search, Input, Grid, Header, Segment, Label } from 'semantic-ui-react';\nimport _ from 'lodash';\n\nimport {\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  FormText,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addSchool } from '../../../actions/profile';\nimport './ProfileModal.scss';\n\nconst ProfileModal = ({ addSchool, history,   getSchoolData,\n  leftnav: { leftnav, loading } }) => {\n  const [formData, setFormData] = useState({\n    schoolName: '',\n    schoolCity: '',\n    schoolState: '',\n    schoolZip: '',\n    grade: '',\n    classRoom: '',\n    childName: ''\n  });\n\n  const [modal, setModal] = useState(false);\n\n  const [schoolData, setSchoolData] = useState({\n    isLoading: false,\n    results: [],\n    value: ''\n  });\n\n  const source = _.times(5, () => ({\n    title: 'warm',\n    description: 'cute',\n    price: 'uddu'\n  }));\n\n  const resultRenderer = ({ title }) => <Label content={title} />;\n\n  resultRenderer.propTypes = {\n    title: PropTypes.string,\n    description: PropTypes.string\n  };\n\n  const toggle = () => setModal(!modal);\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const handleResultSelect = (e, { result }) => {\n    setSchoolData({ ...schoolData, ['value']: result.title });\n    //#TODO formData\n  };\n\n  const handleSearchChange = (e, { value }) => {\n    console.log(value, schoolData);\n    setSchoolData({ ...schoolData, ['isLoading']: true, ['value']: value });\n    setTimeout(() => {\n      if (schoolData.value && schoolData.value.length < 1)\n        return setSchoolData({\n          isLoading: false,\n          results: [],\n          value: ''\n        });\n\n      const re = new RegExp(_.escapeRegExp(schoolData.value), 'i');\n      const isMatch = result => re.test(result.title);\n\n      setSchoolData({\n        isLoading: false,\n        results: _.filter(source, isMatch)\n      });\n    }, 300);\n  };\n\n  return (\n    <div>\n      <div className='new-post-form' onClick={toggle}>\n        <div className='profile-action-button'>\n          <i className='fas fa-plus-circle'></i>\n          <span className='add-more'>Add more child?</span>\n        </div>\n      </div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}>\n          {\"Connect to your child's class community\"}\n        </ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup className='post-form'>\n              <Input\n                placeholder='Name of Child'\n                name='childName'\n                onChange={e => onChange(e)}\n                required\n              />\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <Grid>\n                <Grid.Column width={6}>\n                  <Search\n                    placeholder='Type school name'\n                    loading={schoolData.isLoading}\n                    onResultSelect={handleResultSelect}\n                    onSearchChange={_.debounce(handleSearchChange, 500, {\n                      leading: true\n                    })}\n                    results={schoolData.results}\n                    value={schoolData.value}\n                    //resultRenderer={resultRenderer}\n                    name='schoolName'\n                    onChange={e => onChange(e)}\n                  />\n                </Grid.Column>\n              </Grid>\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <Input\n                className='post-form-text-input'\n                type='text'\n                name='grade'\n                //value={grade}\n                placeholder='* Grade'\n                onChange={e => onChange(e)}\n              />\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <Input\n                className='post-form-text-input'\n                type='text'\n                name='classRoom'\n                //value={classRoom}\n                placeholder='Class Room'\n                onChange={e => onChange(e)}\n              />\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button\n            color='primary'\n            onClick={e => {\n              e.preventDefault();\n              addSchool(formData, history);\n            }}\n          >\n            Save\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nProfileModal.propTypes = {\n  addSchool: PropTypes.func.isRequired,\n  getSchoolData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    schoolData: state.schoolData\n  };\n};\n\nexport default connect(mapStateToProps, { addSchool })(\n  withRouter(ProfileModal)\n);\n"]},"metadata":{},"sourceType":"module"}