{"ast":null,"code":"import _objectSpread from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/profile/CreateProfile.js\";\nimport React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\nimport { getSchoolData } from '../../../../actions/school';\nimport { Form, FormGroup } from 'reactstrap';\nimport { addSchool } from '../../../../actions/profile';\nimport { Search, Input, Grid } from 'semantic-ui-react';\nimport { Tab } from 'semantic-ui-react';\nimport './CreateProfile.scss';\n\nconst CreateProfile = ({\n  createProfile,\n  getCurrentProfile,\n  profile: {\n    profile,\n    loading\n  },\n  history,\n  addSchool,\n  getSchoolData\n}) => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        formData = _useState2[0],\n        setFormData = _useState2[1];\n\n  const panes = [{\n    menuItem: 'Your Info',\n    render: () => React.createElement(Tab.Pane, {\n      attached: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Tab 1 Content\")\n  }, {\n    menuItem: \"Childs's Info\",\n    render: () => React.createElement(Tab.Pane, {\n      attached: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      className: \"post-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Name of Child\",\n      name: \"childName\",\n      onChange: e => onChange(e),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      className: \"post-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Search, {\n      placeholder: \"Type school name\",\n      loading: isLoading,\n      onResultSelect: handleResultSelect,\n      onBlur: _.debounce(handleSearchOnBlur, 500, {\n        leading: true\n      }),\n      results: results,\n      value: value,\n      resultRenderer: resultRenderer,\n      name: \"schoolName\" //onChange={e => onChange(e)}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })))), React.createElement(FormGroup, {\n      className: \"post-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"post-form-text-input\",\n      type: \"text\",\n      name: \"grade\" //value={grade}\n      ,\n      placeholder: \"* Grade\",\n      onChange: e => onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      className: \"post-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: \"post-form-text-input\",\n      type: \"text\",\n      name: \"classRoom\" //value={classRoom}\n      ,\n      placeholder: \"Class Room\",\n      onChange: e => onChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))), ' ', React.createElement(Link, {\n      className: \"btn btn-light my-1\",\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Save\"))\n  }];\n\n  const onChange = e => setFormData(_objectSpread({}, formData, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n\n  useEffect(() => {\n    getCurrentProfile(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentProfile]);\n  return loading && profile === null ? React.createElement(Redirect, {\n    to: \"/dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"create-profile-component-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"create-profile-component-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    class: \"create-profile-component-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Create Your Profile\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Don\\\\'t worry\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), \" you change change this info later\")), React.createElement(\"div\", {\n    class: \"create-profile-component-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(\"small\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"* = required field\"), React.createElement(Tab, {\n    menu: {\n      secondary: true,\n      pointing: true\n    },\n    panes: panes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }))), React.createElement(Button, {\n    color: \"primary\",\n    onClick: e => {\n      e.preventDefault();\n      addSchool(formData, history);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Save\"));\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  addSchool: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile,\n  addSchool\n})(withRouter(CreateProfile));","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/profile/CreateProfile.js"],"names":["React","useEffect","useState","Fragment","Link","withRouter","Redirect","PropTypes","connect","createProfile","getCurrentProfile","getSchoolData","Form","FormGroup","addSchool","Search","Input","Grid","Tab","CreateProfile","profile","loading","history","formData","setFormData","panes","menuItem","render","e","onChange","isLoading","handleResultSelect","_","debounce","handleSearchOnBlur","leading","results","value","resultRenderer","target","name","onSubmit","preventDefault","secondary","pointing","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, Fragment } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\nimport { getSchoolData } from '../../../../actions/school';\n\nimport { Form, FormGroup } from 'reactstrap';\nimport { addSchool } from '../../../../actions/profile';\n\nimport { Search, Input, Grid } from 'semantic-ui-react';\n\nimport { Tab } from 'semantic-ui-react';\nimport './CreateProfile.scss';\n\nconst CreateProfile = ({\n  createProfile,\n  getCurrentProfile,\n  profile: { profile, loading },\n  history,\n  addSchool,\n  getSchoolData\n}) => {\n  const [formData, setFormData] = useState({});\n  const panes = [\n    {\n      menuItem: 'Your Info',\n      render: () => <Tab.Pane attached={false}>Tab 1 Content</Tab.Pane>\n    },\n    {\n      menuItem: \"Childs's Info\",\n      render: () => (\n        <Tab.Pane attached={false}>\n          <Form>\n            <FormGroup className='post-form'>\n              <Input\n                placeholder='Name of Child'\n                name='childName'\n                onChange={e => onChange(e)}\n                required\n              />\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <Grid>\n                <Grid.Column width={6}>\n                  <Search\n                    placeholder='Type school name'\n                    loading={isLoading}\n                    onResultSelect={handleResultSelect}\n                    onBlur={_.debounce(handleSearchOnBlur, 500, {\n                      leading: true\n                    })}\n                    results={results}\n                    value={value}\n                    resultRenderer={resultRenderer}\n                    name='schoolName'\n                    //onChange={e => onChange(e)}\n                  />\n                </Grid.Column>\n              </Grid>\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <Input\n                className='post-form-text-input'\n                type='text'\n                name='grade'\n                //value={grade}\n                placeholder='* Grade'\n                onChange={e => onChange(e)}\n              />\n            </FormGroup>\n            <FormGroup className='post-form'>\n              <Input\n                className='post-form-text-input'\n                type='text'\n                name='classRoom'\n                //value={classRoom}\n                placeholder='Class Room'\n                onChange={e => onChange(e)}\n              />\n            </FormGroup>\n          </Form>{' '}\n          <Link className='btn btn-light my-1' to='/dashboard'>\n            Save\n          </Link>\n        </Tab.Pane>\n      )\n    }\n  ];\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  const onSubmit = e => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n  useEffect(() => {\n    getCurrentProfile();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [getCurrentProfile]);\n  return loading && profile === null ? (\n    <Redirect to='/dashboard' />\n  ) : (\n    <Fragment>\n      <div class='create-profile-component-container'>\n        <div class='create-profile-component-header'>\n          <h4 class='create-profile-component-title'>Create Your Profile</h4>\n          <p>\n            Don\\'t worry\n            <br /> you change change this info later\n          </p>\n        </div>\n        <div class='create-profile-component-content'>\n          <small>* = required field</small>\n\n          <Tab menu={{ secondary: true, pointing: true }} panes={panes} />\n        </div>\n      </div>\n      <Button\n        color='primary'\n        onClick={e => {\n          e.preventDefault();\n          addSchool(formData, history);\n        }}\n      >\n        Save\n      </Button>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  addSchool: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  \n});\nexport default connect(mapStateToProps, {\n  createProfile,\n  getCurrentProfile,\n  addSchool\n})(withRouter(CreateProfile));\n"]},"metadata":{},"sourceType":"module"}