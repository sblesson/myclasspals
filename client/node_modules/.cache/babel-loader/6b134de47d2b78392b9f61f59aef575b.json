{"ast":null,"code":"var _jsxFileName = \"/Users/sapnablesson/myGit/devconnector_2.0/client/src/components/profile/ProfileSchool.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getSchoolInfo } from '../../actions/profile';\n\nconst ProfileGithub = ({\n  username,\n  getSchoolInfo,\n  repos\n}) => {\n  useEffect(() => {\n    getSchoolInfo(username);\n  }, [getSchoolInfo]);\n  return React.createElement(\"div\", {\n    className: \"profile-github\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Github Repos\"), repos === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : repos.map(repo => React.createElement(\"div\", {\n    key: repo.id,\n    className: \"repo bg-white p-1 my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: repo.html_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, repo.name)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, repo.description)), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    className: \"badge badge-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Stars: \", repo.stargazers_count), React.createElement(\"li\", {\n    className: \"badge badge-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Watchers: \", repo.watchers_count), React.createElement(\"li\", {\n    className: \"badge badge-light\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Forks: \", repo.forks_count))))));\n};\n\nProfileSchool.propTypes = {\n  getSchoolInfo: PropTypes.func.isRequired,\n  schools: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  schools: state.profile.schools\n});\n\nexport default connect(mapStateToProps, {\n  getSchoolInfo\n})(ProfileSchool);","map":{"version":3,"sources":["/Users/sapnablesson/myGit/devconnector_2.0/client/src/components/profile/ProfileSchool.js"],"names":["React","useEffect","PropTypes","connect","Spinner","getSchoolInfo","ProfileGithub","username","repos","map","repo","id","html_url","name","description","stargazers_count","watchers_count","forks_count","ProfileSchool","propTypes","func","isRequired","schools","array","string","mapStateToProps","state","profile"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,aAAT,QAA8B,uBAA9B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYF,EAAAA,aAAZ;AAA2BG,EAAAA;AAA3B,CAAD,KAAwC;AAC5DP,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,aAAa,CAACE,QAAD,CAAb;AACD,GAFQ,EAEN,CAACF,aAAD,CAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGG,KAAK,KAAK,IAAV,GACC,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGCA,KAAK,CAACC,GAAN,CAAUC,IAAI,IACZ;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,IAAA,SAAS,EAAC,wBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAED,IAAI,CAACE,QADb;AAEE,IAAA,MAAM,EAAC,QAFT;AAGE,IAAA,GAAG,EAAC,qBAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGF,IAAI,CAACG,IALR,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,IAAI,CAACI,WAAT,CAVF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACUJ,IAAI,CAACK,gBADf,CADF,EAIE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACaL,IAAI,CAACM,cADlB,CAJF,EAOE;AAAI,IAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA0CN,IAAI,CAACO,WAA/C,CAPF,CADF,CAbF,CADF,CALJ,CADF;AAoCD,CAzCD;;AA2CAC,aAAa,CAACC,SAAd,GAA0B;AACxBd,EAAAA,aAAa,EAAEH,SAAS,CAACkB,IAAV,CAAeC,UADN;AAExBC,EAAAA,OAAO,EAAEpB,SAAS,CAACqB,KAAV,CAAgBF,UAFD;AAGxBd,EAAAA,QAAQ,EAAEL,SAAS,CAACsB,MAAV,CAAiBH;AAHH,CAA1B;;AAMA,MAAMI,eAAe,GAAGC,KAAK,KAAK;AAChCJ,EAAAA,OAAO,EAAEI,KAAK,CAACC,OAAN,CAAcL;AADS,CAAL,CAA7B;;AAIA,eAAenB,OAAO,CAACsB,eAAD,EAAkB;AAAEpB,EAAAA;AAAF,CAAlB,CAAP,CAA4Ca,aAA5C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getSchoolInfo } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getSchoolInfo, repos }) => {\n  useEffect(() => {\n    getSchoolInfo(username);\n  }, [getSchoolInfo]);\n\n  return (\n    <div className='profile-github'>\n      <h2 className='text-primary my-1'>Github Repos</h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map(repo => (\n          <div key={repo.id} className='repo bg-white p-1 my-1'>\n            <div>\n              <h4>\n                <a\n                  href={repo.html_url}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  {repo.name}\n                </a>\n              </h4>\n              <p>{repo.description}</p>\n            </div>\n            <div>\n              <ul>\n                <li className='badge badge-primary'>\n                  Stars: {repo.stargazers_count}\n                </li>\n                <li className='badge badge-dark'>\n                  Watchers: {repo.watchers_count}\n                </li>\n                <li className='badge badge-light'>Forks: {repo.forks_count}</li>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nProfileSchool.propTypes = {\n  getSchoolInfo: PropTypes.func.isRequired,\n  schools: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  schools: state.profile.schools\n});\n\nexport default connect(mapStateToProps, { getSchoolInfo })(ProfileSchool);\n"]},"metadata":{},"sourceType":"module"}