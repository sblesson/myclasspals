{"ast":null,"code":"var _jsxFileName = \"/Users/sapnablesson/myGit/myclasscircle.com/client/src/containers/dropdownmenu/DropDownMenu.js\";\nimport React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { logout } from '../../actions/auth';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport './DropDownMenu.scss'; // TODO: This is missing functionality for sub-menu here from SUI core examples.\n// The \"Publish To Web\" item should contain a sub-menu.\n\nconst DropDownMenu = (auth, logout) => React.createElement(Dropdown, {\n  icon: \"header-icon big far fa-user-circle\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(Dropdown.Menu, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(Dropdown.Item, {\n  text: \"Profile\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}), React.createElement(Dropdown.Divider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}), React.createElement(Dropdown.Item, {\n  icon: \"far fa-cog\",\n  text: \"Settings\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}), React.createElement(Dropdown.Item, {\n  icon: \"bookmark\",\n  text: \"Bookmarks\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(Dropdown.Divider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}), React.createElement(Dropdown.Item, {\n  icon: \"sign-out\",\n  text: \"Log Out\",\n  onClick: () => logout,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n})));\n\nDropDownMenu.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nexport default connect(null, {\n  logout\n})(DropDownMenu);","map":{"version":3,"sources":["/Users/sapnablesson/myGit/myclasscircle.com/client/src/containers/dropdownmenu/DropDownMenu.js"],"names":["React","Dropdown","logout","connect","PropTypes","DropDownMenu","auth","propTypes","func","isRequired","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,qBAAP,C,CAEA;AACA;;AAEA,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOJ,MAAP,KACnB,oBAAC,QAAD;AAAU,EAAA,IAAI,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD,CAAU,IAAV;AAAe,EAAA,IAAI,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAGE,oBAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,EAIE,oBAAC,QAAD,CAAU,IAAV;AAAe,EAAA,IAAI,EAAC,YAApB;AAAiC,EAAA,IAAI,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJF,EAKE,oBAAC,QAAD,CAAU,IAAV;AAAe,EAAA,IAAI,EAAC,UAApB;AAA+B,EAAA,IAAI,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALF,EAME,oBAAC,QAAD,CAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EANF,EAOE,oBAAC,QAAD,CAAU,IAAV;AAAe,EAAA,IAAI,EAAC,UAApB;AAA+B,EAAA,IAAI,EAAC,SAApC;AAA8C,EAAA,OAAO,EAAE,MAAMA,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAPF,CADF,CADF;;AAcAG,YAAY,CAACE,SAAb,GAAyB;AACvBL,EAAAA,MAAM,EAAEE,SAAS,CAACI,IAAV,CAAeC,UADA;AAEvBH,EAAAA,IAAI,EAAEF,SAAS,CAACM,MAAV,CAAiBD;AAFA,CAAzB;AAKA,eAAeN,OAAO,CAAC,IAAD,EAAO;AAAED,EAAAA;AAAF,CAAP,CAAP,CAA0BG,YAA1B,CAAf","sourcesContent":["import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport { logout } from '../../actions/auth';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './DropDownMenu.scss';\n\n// TODO: This is missing functionality for sub-menu here from SUI core examples.\n// The \"Publish To Web\" item should contain a sub-menu.\n\nconst DropDownMenu = (auth, logout) => (\n  <Dropdown icon='header-icon big far fa-user-circle'>\n    <Dropdown.Menu>\n      <Dropdown.Item text='Profile' />\n\n      <Dropdown.Divider />\n      <Dropdown.Item icon='far fa-cog' text='Settings' />\n      <Dropdown.Item icon='bookmark' text='Bookmarks' />\n      <Dropdown.Divider />\n      <Dropdown.Item icon='sign-out' text='Log Out' onClick={() => logout} />\n    </Dropdown.Menu>\n  </Dropdown>\n);\n\nDropDownMenu.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nexport default connect(null, { logout })(DropDownMenu);\n"]},"metadata":{},"sourceType":"module"}