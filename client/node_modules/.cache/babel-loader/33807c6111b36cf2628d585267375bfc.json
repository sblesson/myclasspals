{"ast":null,"code":"var _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/dashboard/Dashboard.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport School from './School';\nimport Reminder from './Reminder';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport LeftNav from '../leftnav/LeftNav';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(LeftNav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"article\", {\n    className: \"col-8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(PostForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"posts\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, posts.map(post => React.createElement(PostItem, {\n    key: post._id,\n    post: post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }))))), ' '));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  deleteAccount\n})(Dashboard);","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","Spinner","DashboardActions","School","Reminder","getCurrentProfile","deleteAccount","LeftNav","Dashboard","auth","user","profile","loading","posts","map","post","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,uBAAjD;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBH,EAAAA,iBADiB;AAEjBC,EAAAA,aAFiB;AAGjBG,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAHW;AAIjBC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAJQ,CAAD,KAKZ;AACJf,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,CAACA,iBAAD,CAFM,CAAT;AAIA,SAAOO,OAAO,IAAID,OAAO,KAAK,IAAvB,GACL,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAGL,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAS,IAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACC,GAAN,CAAUC,IAAI,IACb,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAyB,IAAA,IAAI,EAAED,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF,CAJF,EAaa,GAbb,CADF,CAHF;AAqBD,CA/BD;;AAiCAP,SAAS,CAACS,SAAV,GAAsB;AACpBZ,EAAAA,iBAAiB,EAAEN,SAAS,CAACmB,IAAV,CAAeC,UADd;AAEpBb,EAAAA,aAAa,EAAEP,SAAS,CAACmB,IAAV,CAAeC,UAFV;AAGpBV,EAAAA,IAAI,EAAEV,SAAS,CAACqB,MAAV,CAAiBD,UAHH;AAIpBR,EAAAA,OAAO,EAAEZ,SAAS,CAACqB,MAAV,CAAiBD;AAJN,CAAtB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,IAAI,EAAEa,KAAK,CAACb,IADoB;AAEhCE,EAAAA,OAAO,EAAEW,KAAK,CAACX;AAFiB,CAAL,CAA7B;;AAKA,eAAeX,OAAO,CAACqB,eAAD,EAAkB;AAAEhB,EAAAA,iBAAF;AAAqBC,EAAAA;AAArB,CAAlB,CAAP,CACbE,SADa,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport School from './School';\nimport Reminder from './Reminder';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport LeftNav from '../leftnav/LeftNav';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile, loading }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <div className='row'>\n        <div className='col-2'>\n          <LeftNav />\n        </div>\n        <article className='col-8'>\n          <div>\n            <PostForm />\n            <div className='posts'>\n              {posts.map(post => (\n                <PostItem key={post._id} post={post} />\n              ))}\n            </div>\n          </div>\n        </article>{' '}\n      </div>\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n  Dashboard\n);\n"]},"metadata":{},"sourceType":"module"}