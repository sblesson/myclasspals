{"ast":null,"code":"import _slicedToArray from \"/Users/sapnablesson/myGit/classvilla/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/classvilla/client/src/components/common/ModalWrapper.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Row, Button, Form, FormGroup, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nconst ModalWrapper = props => {\n  const handleBackgroundClick = e => {\n    if (e.target === e.currentTarget) {\n      props.hideModal();\n      setModal(false);\n    }\n  };\n\n  const onOk = () => {\n    props.onOk();\n    setModal(false);\n  };\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        modal = _useState2[0],\n        setModal = _useState2[1];\n\n  const toggle = () => setModal(!modal);\n\n  return React.createElement(Modal, {\n    isOpen: modal,\n    fade: false,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, props.title), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.children), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: onOk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, props.okText)));\n};\n\nModalWrapper.propTypes = {\n  // props\n  title: PropTypes.string,\n  showOk: PropTypes.bool,\n  okText: PropTypes.string,\n  okDisabled: PropTypes.bool,\n  width: PropTypes.number,\n  style: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.element, PropTypes.string]).isRequired,\n  // methods\n  hideModal: PropTypes.func,\n  onOk: PropTypes.func,\n  isOpen: PropTypes.bool\n};\nModalWrapper.defaultProps = {\n  title: '',\n  isOpen: false,\n  showOk: true,\n  okText: 'OK',\n  okDisabled: false,\n  width: 400,\n  onOk: () => {}\n};\nexport default ModalWrapper;","map":{"version":3,"sources":["/Users/sapnablesson/myGit/classvilla/client/src/components/common/ModalWrapper.js"],"names":["React","useState","PropTypes","Col","Row","Button","Form","FormGroup","FormText","Modal","ModalHeader","ModalBody","ModalFooter","ModalWrapper","props","handleBackgroundClick","e","target","currentTarget","hideModal","setModal","onOk","modal","toggle","title","children","okText","propTypes","string","showOk","bool","okDisabled","width","number","style","object","oneOfType","array","element","isRequired","func","isOpen","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,SALF,EAMEC,QANF,EAOEC,KAPF,EAQEC,WARF,EASEC,SATF,EAUEC,WAVF,QAWO,YAXP;;AAaA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAMC,qBAAqB,GAAGC,CAAC,IAAI;AACjC,QAAIA,CAAC,CAACC,MAAF,KAAaD,CAAC,CAACE,aAAnB,EAAkC;AAChCJ,MAAAA,KAAK,CAACK,SAAN;AACAC,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,GALD;;AAOA,QAAMC,IAAI,GAAG,MAAM;AACjBP,IAAAA,KAAK,CAACO,IAAN;AACAD,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACD,GAHD;;AAR4B,oBAYFnB,QAAQ,CAAC,IAAD,CAZN;AAAA;AAAA,QAYrBqB,KAZqB;AAAA,QAYdF,QAZc;;AAc5B,QAAMG,MAAM,GAAG,MAAMH,QAAQ,CAAC,CAACE,KAAF,CAA7B;;AAEA,SACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEA,KAAf;AAAsB,IAAA,IAAI,EAAE,KAA5B;AAAmC,IAAA,MAAM,EAAEC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BT,KAAK,CAACU,KAApC,CADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYV,KAAK,CAACW,QAAlB,CAFF,EAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEJ,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACY,MADT,CADF,CAHF,CADF;AAWD,CA3BD;;AA6BAb,YAAY,CAACc,SAAb,GAAyB;AACvB;AACAH,EAAAA,KAAK,EAAEtB,SAAS,CAAC0B,MAFM;AAGvBC,EAAAA,MAAM,EAAE3B,SAAS,CAAC4B,IAHK;AAIvBJ,EAAAA,MAAM,EAAExB,SAAS,CAAC0B,MAJK;AAKvBG,EAAAA,UAAU,EAAE7B,SAAS,CAAC4B,IALC;AAMvBE,EAAAA,KAAK,EAAE9B,SAAS,CAAC+B,MANM;AAOvBC,EAAAA,KAAK,EAAEhC,SAAS,CAACiC,MAPM;AAQvBV,EAAAA,QAAQ,EAAEvB,SAAS,CAACkC,SAAV,CAAoB,CAC5BlC,SAAS,CAACmC,KADkB,EAE5BnC,SAAS,CAACoC,OAFkB,EAG5BpC,SAAS,CAAC0B,MAHkB,CAApB,EAIPW,UAZoB;AAcvB;AACApB,EAAAA,SAAS,EAAEjB,SAAS,CAACsC,IAfE;AAgBvBnB,EAAAA,IAAI,EAAEnB,SAAS,CAACsC,IAhBO;AAiBvBC,EAAAA,MAAM,EAAEvC,SAAS,CAAC4B;AAjBK,CAAzB;AAoBAjB,YAAY,CAAC6B,YAAb,GAA4B;AAC1BlB,EAAAA,KAAK,EAAE,EADmB;AAE1BiB,EAAAA,MAAM,EAAE,KAFkB;AAG1BZ,EAAAA,MAAM,EAAE,IAHkB;AAI1BH,EAAAA,MAAM,EAAE,IAJkB;AAK1BK,EAAAA,UAAU,EAAE,KALc;AAM1BC,EAAAA,KAAK,EAAE,GANmB;AAO1BX,EAAAA,IAAI,EAAE,MAAM,CAAE;AAPY,CAA5B;AAUA,eAAeR,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Col,\n  Row,\n  Button,\n  Form,\n  FormGroup,\n  FormText,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\nconst ModalWrapper = props => {\n  const handleBackgroundClick = e => {\n    if (e.target === e.currentTarget) {\n      props.hideModal();\n      setModal(false);\n    }\n  };\n\n  const onOk = () => {\n    props.onOk();\n    setModal(false);\n  };\n  const [modal, setModal] = useState(true);\n\n  const toggle = () => setModal(!modal);\n\n  return (\n    <Modal isOpen={modal} fade={false} toggle={toggle}>\n      <ModalHeader toggle={toggle}>{props.title}</ModalHeader>\n      <ModalBody>{props.children}</ModalBody>\n      <ModalFooter>\n        <Button color='primary' onClick={onOk}>\n          {props.okText}\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nModalWrapper.propTypes = {\n  // props\n  title: PropTypes.string,\n  showOk: PropTypes.bool,\n  okText: PropTypes.string,\n  okDisabled: PropTypes.bool,\n  width: PropTypes.number,\n  style: PropTypes.object,\n  children: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.element,\n    PropTypes.string\n  ]).isRequired,\n\n  // methods\n  hideModal: PropTypes.func,\n  onOk: PropTypes.func,\n  isOpen: PropTypes.bool\n};\n\nModalWrapper.defaultProps = {\n  title: '',\n  isOpen: false,\n  showOk: true,\n  okText: 'OK',\n  okDisabled: false,\n  width: 400,\n  onOk: () => {}\n};\n\nexport default ModalWrapper;\n"]},"metadata":{},"sourceType":"module"}