{"ast":null,"code":"import _slicedToArray from \"/Users/sapnablesson/myGit/devconnector_2.0/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sapnablesson/myGit/devconnector_2.0/client/src/components/profile-forms/AddSchoolForm.js\";\nimport React, { useState } from 'react';\nimport { Col, Button, Form, FormGroup, Label, Input, FormText, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport axios from 'axios';\nimport Autosuggest from 'react-autosuggest';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addSchool } from '../../actions/profile';\n\nconst AddSchoolForm = ({\n  addSchool\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        modal = _useState4[0],\n        setModal = _useState4[1];\n\n  const _React$useState = React.useState(''),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        school = _React$useState2[0],\n        setSchool = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        suggestions = _React$useState4[0],\n        setSuggestions = _React$useState4[1];\n\n  const toggle = () => setModal(!modal);\n\n  const onSuggestionsFetchRequested = async ({\n    value\n  }) => {\n    if (!value) {\n      setSuggestions([]);\n      return;\n    }\n\n    try {\n      const url = \"https://api.schooldigger.com/v1.2/autocomplete/schools?q=\".concat(value, \"&appID=02e5e1fb&appKey=516f6dd0da01a186ffedea905bec1041\");\n      const response = await axios.get(url);\n      console.log(this.suggestions);\n      setSuggestions(response.schoolMatches.map(row => ({\n        schoolName: row.schoolName,\n        lowGrade: row.lowGrade,\n        highGrade: row.highGrade,\n        schoolLevel: row.schoolLevel\n      })));\n    } catch (e) {\n      setSuggestions([]);\n    }\n  };\n\n  const onSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const renderSuggestion = suggestion => {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: suggestion.schoolLevel,\n      alt: suggestion.schoolName,\n      style: {\n        width: '25px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), suggestion.schoolName);\n  };\n\n  const onSuggestionSelected = (event, {\n    suggestion,\n    method\n  }) => {\n    if (method === 'enter') {\n      event.preventDefault();\n    }\n\n    setSchool(suggestion.schoolName); //setFieldValue('country', suggestion.name);\n  };\n\n  const inputProps = {\n    placeholder: 'Search school name',\n    autoComplete: 'abcd',\n    value: school,\n    name: 'school',\n    onChange: (_event, {\n      newValue\n    }) => {\n      setSchool(newValue);\n    }\n  };\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"post-form\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Add School\")), React.createElement(Modal, {\n    isOpen: modal,\n    fade: false,\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(ModalHeader, {\n    toggle: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \" Add School\"), React.createElement(ModalBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"text\",\n    name: \"text\",\n    placeholder: \"Child Name (optional)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))), React.createElement(FormGroup, {\n    tag: \"fieldset\",\n    row: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"col-form-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Choose category\"), React.createElement(Col, {\n    sm: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    check: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, React.createElement(Autosuggest, {\n    suggestions: suggestions,\n    onSuggestionsFetchRequested: onSuggestionsFetchRequested,\n    onSuggestionsClearRequested: onSuggestionsClearRequested,\n    getSuggestionValue: suggestion => suggestion.schoolName,\n    renderSuggestion: renderSuggestion,\n    onSuggestionSelected: onSuggestionSelected,\n    inputProps: inputProps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })))))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Button, {\n    color: \"primary\",\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Add\"))));\n};\n\nAddSchoolForm.propTypes = {\n  addSchool: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addSchool\n})(AddSchoolForm);","map":{"version":3,"sources":["/Users/sapnablesson/myGit/devconnector_2.0/client/src/components/profile-forms/AddSchoolForm.js"],"names":["React","useState","Col","Button","Form","FormGroup","Label","Input","FormText","Modal","ModalHeader","ModalBody","ModalFooter","axios","Autosuggest","PropTypes","connect","addSchool","AddSchoolForm","text","setText","modal","setModal","school","setSchool","suggestions","setSuggestions","toggle","onSuggestionsFetchRequested","value","url","response","get","console","log","schoolMatches","map","row","schoolName","lowGrade","highGrade","schoolLevel","e","onSuggestionsClearRequested","renderSuggestion","suggestion","width","onSuggestionSelected","event","method","preventDefault","inputProps","placeholder","autoComplete","name","onChange","_event","newValue","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,KANF,EAOEC,QAPF,EAQEC,KARF,EASEC,WATF,EAUEC,SAVF,EAWEC,WAXF,QAYO,YAZP;AAaA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,mBAAxB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,uBAA1B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAED,EAAAA;AAAF,CAAD,KAAmB;AAAA,oBACfhB,QAAQ,CAAC,EAAD,CADO;AAAA;AAAA,QAChCkB,IADgC;AAAA,QAC1BC,OAD0B;;AAAA,qBAEbnB,QAAQ,CAAC,KAAD,CAFK;AAAA;AAAA,QAEhCoB,KAFgC;AAAA,QAEzBC,QAFyB;;AAAA,0BAGXtB,KAAK,CAACC,QAAN,CAAe,EAAf,CAHW;AAAA;AAAA,QAGhCsB,MAHgC;AAAA,QAGxBC,SAHwB;;AAAA,2BAIDxB,KAAK,CAACC,QAAN,CAAe,EAAf,CAJC;AAAA;AAAA,QAIhCwB,WAJgC;AAAA,QAInBC,cAJmB;;AAOvC,QAAMC,MAAM,GAAG,MAAML,QAAQ,CAAC,CAACD,KAAF,CAA7B;;AAEA,QAAMO,2BAA2B,GAAG,OAAO;AAAEC,IAAAA;AAAF,GAAP,KAAqB;AACvD,QAAI,CAACA,KAAL,EAAY;AACVH,MAAAA,cAAc,CAAC,EAAD,CAAd;AACA;AACD;;AAED,QAAI;AACF,YAAMI,GAAG,sEAA+DD,KAA/D,4DAAT;AACA,YAAME,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAUF,GAAV,CAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,WAAjB;AACAC,MAAAA,cAAc,CACZK,QAAQ,CAACI,aAAT,CAAuBC,GAAvB,CAA2BC,GAAG,KAAK;AACjCC,QAAAA,UAAU,EAAED,GAAG,CAACC,UADiB;AAEjCC,QAAAA,QAAQ,EAAEF,GAAG,CAACE,QAFmB;AAGjCC,QAAAA,SAAS,EAAEH,GAAG,CAACG,SAHkB;AAIjCC,QAAAA,WAAW,EAAEJ,GAAG,CAACI;AAJgB,OAAL,CAA9B,CADY,CAAd;AAQD,KAZD,CAYE,OAAOC,CAAP,EAAU;AACVhB,MAAAA,cAAc,CAAC,EAAD,CAAd;AACD;AACF,GArBD;;AAuBA,QAAMiB,2BAA2B,GAAG,MAAM;AACxCjB,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAFD;;AAIA,QAAMkB,gBAAgB,GAAGC,UAAU,IAAI;AACrC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAEA,UAAU,CAACJ,WADlB;AAEE,MAAA,GAAG,EAAEI,UAAU,CAACP,UAFlB;AAGE,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMGD,UAAU,CAACP,UANd,CADF;AAUD,GAXD;;AAaA,QAAMS,oBAAoB,GAAG,CAACC,KAAD,EAAQ;AAAEH,IAAAA,UAAF;AAAcI,IAAAA;AAAd,GAAR,KAAmC;AAC9D,QAAIA,MAAM,KAAK,OAAf,EAAwB;AACtBD,MAAAA,KAAK,CAACE,cAAN;AACD;;AACD1B,IAAAA,SAAS,CAACqB,UAAU,CAACP,UAAZ,CAAT,CAJ8D,CAK9D;AACD,GAND;;AAQA,QAAMa,UAAU,GAAG;AACjBC,IAAAA,WAAW,EAAE,oBADI;AAEjBC,IAAAA,YAAY,EAAE,MAFG;AAGjBxB,IAAAA,KAAK,EAAEN,MAHU;AAIjB+B,IAAAA,IAAI,EAAE,QAJW;AAKjBC,IAAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA0B;AAClCjC,MAAAA,SAAS,CAACiC,QAAD,CAAT;AACD;AAPgB,GAAnB;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAE9B,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAEA,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAME,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEN,KAAf;AAAsB,IAAA,IAAI,EAAE,KAA5B;AAAmC,IAAA,MAAM,EAAEM,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,GAAG,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,WAAW,EAAC,uBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAUE,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAC,UAAf;AAA0B,IAAA,GAAG,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,WAAW,EAAEF,WADf;AAEE,IAAA,2BAA2B,EAAEG,2BAF/B;AAGE,IAAA,2BAA2B,EAAEe,2BAH/B;AAIE,IAAA,kBAAkB,EAAEE,UAAU,IAAIA,UAAU,CAACP,UAJ/C;AAKE,IAAA,gBAAgB,EAAEM,gBALpB;AAME,IAAA,oBAAoB,EAAEG,oBANxB;AAOE,IAAA,UAAU,EAAEI,UAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,CAVF,CADF,CAFF,EA+BE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,OAAO,EAAExB,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CA/BF,CANF,CADF;AA8CD,CAjHD;;AAmHAT,aAAa,CAACwC,SAAd,GAA0B;AACxBzC,EAAAA,SAAS,EAAEF,SAAS,CAAC4C,IAAV,CAAeC;AADF,CAA1B;AAIA,eAAe5C,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAA6BC,aAA7B,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Col,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport axios from 'axios';\n\nimport Autosuggest from 'react-autosuggest';\n\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addSchool } from '../../actions/profile';\n\nconst AddSchoolForm = ({ addSchool }) => {\n  const [text, setText] = useState('');\n  const [modal, setModal] = useState(false);\n  const [school, setSchool] = React.useState('');\n  const [suggestions, setSuggestions] = React.useState([]);\n\n\n  const toggle = () => setModal(!modal);\n\n  const onSuggestionsFetchRequested = async ({ value }) => {\n    if (!value) {\n      setSuggestions([]);\n      return;\n    }\n\n    try {\n      const url = `https://api.schooldigger.com/v1.2/autocomplete/schools?q=${value}&appID=02e5e1fb&appKey=516f6dd0da01a186ffedea905bec1041`;\n      const response = await axios.get(url);\n      console.log(this.suggestions);\n      setSuggestions(\n        response.schoolMatches.map(row => ({\n          schoolName: row.schoolName,\n          lowGrade: row.lowGrade,\n          highGrade: row.highGrade,\n          schoolLevel: row.schoolLevel\n        }))\n      );\n    } catch (e) {\n      setSuggestions([]);\n    }\n  };\n\n  const onSuggestionsClearRequested = () => {\n    setSuggestions([]);\n  };\n\n  const renderSuggestion = suggestion => {\n    return (\n      <div>\n        <img\n          src={suggestion.schoolLevel}\n          alt={suggestion.schoolName}\n          style={{ width: '25px' }}\n        />\n        {suggestion.schoolName}\n      </div>\n    );\n  };\n\n  const onSuggestionSelected = (event, { suggestion, method }) => {\n    if (method === 'enter') {\n      event.preventDefault();\n    }\n    setSchool(suggestion.schoolName);\n    //setFieldValue('country', suggestion.name);\n  };\n\n  const inputProps = {\n    placeholder: 'Search school name',\n    autoComplete: 'abcd',\n    value: school,\n    name: 'school',\n    onChange: (_event, { newValue }) => {\n      setSchool(newValue);\n    }\n  };\n\n  return (\n    <div>\n      <div className='post-form' onClick={toggle}>\n        <Button color='primary' onClick={toggle}>\n          Add School\n        </Button>\n      </div>\n      <Modal isOpen={modal} fade={false} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Add School</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup row>\n              <Col sm={10}>\n                <Input\n                  type='text'\n                  name='text'\n                  placeholder='Child Name (optional)'\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup tag='fieldset' row>\n              <legend className='col-form-label'>Choose category</legend>\n              <Col sm={10}>\n                <FormGroup check>\n                  <Autosuggest\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={onSuggestionsClearRequested}\n                    getSuggestionValue={suggestion => suggestion.schoolName}\n                    renderSuggestion={renderSuggestion}\n                    onSuggestionSelected={onSuggestionSelected}\n                    inputProps={inputProps}\n                  />\n                </FormGroup>\n              </Col>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color='primary' onClick={toggle}>\n            Add\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nAddSchoolForm.propTypes = {\n  addSchool: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addSchool })(AddSchoolForm);\n"]},"metadata":{},"sourceType":"module"}